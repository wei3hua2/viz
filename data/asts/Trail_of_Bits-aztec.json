[
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/Migrations.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ContractDefinition",
     "name": "Migrations",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "lastCompletedMigration",
         "identifier": {
          "type": "Identifier",
          "name": "lastCompletedMigration"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "restricted",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "Identifier",
            "name": "owner"
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "Identifier",
            "name": "_"
           }
          },
          "falseBody": null
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCompleted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "completed",
         "identifier": {
          "type": "Identifier",
          "name": "completed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lastCompletedMigration"
           },
           "right": {
            "type": "Identifier",
            "name": "completed"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "newAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Migrations"
            },
            "name": "upgraded",
            "identifier": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Migrations"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "memberName": "setCompleted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lastCompletedMigration"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/TestRejectEther.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "TestRejectEther",
     "baseContracts": [],
     "subNodes": [],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/libs/SafeMath8Test.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/SafeMath8.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/SafeMath8.sol",
      "parts": [
       "../../libs/SafeMath8.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SafeMath8Test",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint8",
        "stateMutability": null
       },
       "libraryName": "SafeMath8",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "_mul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "a"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "b"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "a"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "b"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "a"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "b"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/libs/ProofUtilsTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/ProofUtils.sol",
      "parts": [
       "../../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ProofUtilsTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint24",
        "stateMutability": null
       },
       "libraryName": "ProofUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "getProofComponents",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "proof",
         "identifier": {
          "type": "Identifier",
          "name": "proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "epoch",
         "identifier": {
          "type": "Identifier",
          "name": "epoch"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "category",
         "identifier": {
          "type": "Identifier",
          "name": "category"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "id",
         "identifier": {
          "type": "Identifier",
          "name": "id"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/libs/NoteUtilsTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/NoteUtils.sol",
      "parts": [
       "../../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "NoteUtilsTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "libraryName": "NoteUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputsOrNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputsOrNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "len",
         "identifier": {
          "type": "Identifier",
          "name": "len"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutputsOrNotes"
            },
            "memberName": "getLength"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "get",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputsOrNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputsOrNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_i",
         "identifier": {
          "type": "Identifier",
          "name": "_i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "out",
         "identifier": {
          "type": "Identifier",
          "name": "out"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutputsOrNotes"
            },
            "memberName": "get"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_i"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractProofOutput",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "inputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "inputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "outputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "outputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractChallenge",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "challenge",
         "identifier": {
          "type": "Identifier",
          "name": "challenge"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            "memberName": "extractChallenge"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_note",
         "identifier": {
          "type": "Identifier",
          "name": "_note"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_note"
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNoteType",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_note",
         "identifier": {
          "type": "Identifier",
          "name": "_note"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "noteType",
         "identifier": {
          "type": "Identifier",
          "name": "noteType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_note"
            },
            "memberName": "getNoteType"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/libs/LibEIP712Test.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/LibEIP712.sol",
      "parts": [
       "../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "LibEIP712Test",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "_hashEIP712Message",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hashStruct",
         "identifier": {
          "type": "Identifier",
          "name": "_hashStruct"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_result",
         "identifier": {
          "type": "Identifier",
          "name": "_result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_result"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "super"
             },
             "memberName": "hashEIP712Message"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_hashStruct"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_recoverSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_message",
         "identifier": {
          "type": "Identifier",
          "name": "_message"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_signer",
         "identifier": {
          "type": "Identifier",
          "name": "_signer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_signer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "super"
             },
             "memberName": "recoverSignature"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_message"
             },
             {
              "type": "Identifier",
              "name": "_signature"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ERC20/ERC20BrokenTransferTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ERC20/ERC20Mintable.sol",
      "parts": [
       "../../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20BrokenTransferTest",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Mintable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BooleanLiteral",
              "value": true
             },
             "right": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "you shall not pass",
             "parts": [
              "you shall not pass"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ERC20/ERC20BrokenTransferFromTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ERC20/ERC20Mintable.sol",
      "parts": [
       "../../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20BrokenTransferFromTest",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Mintable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_from",
         "identifier": {
          "type": "Identifier",
          "name": "_from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BooleanLiteral",
              "value": true
             },
             "right": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "you shall not pass",
             "parts": [
              "you shall not pass"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_from"
            },
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ERC1724/ZkAssetTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ERC1724/ZkAsset.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ERC1724/ZkAsset.sol",
      "parts": [
       "../../ERC1724/ZkAsset.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/MetaDataUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/MetaDataUtils.sol",
      "parts": [
       "../../libs/MetaDataUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetTest",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAsset"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAsset",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateNoteMetaData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metaData",
         "identifier": {
          "type": "Identifier",
          "name": "metaData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "noteOwner",
            "identifier": {
             "type": "Identifier",
             "name": "noteOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getNote"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "only unspent notes can be approved",
             "parts": [
              "only unspent notes can be approved"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "addressToApprove",
            "identifier": {
             "type": "Identifier",
             "name": "addressToApprove"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MetaDataUtils"
            },
            "memberName": "extractAddresses"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "noteAccess"
            },
            "index": {
             "type": "Identifier",
             "name": "addressToApprove"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "noteHash"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ApprovedAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "addressToApprove"
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UpdateNoteMetaData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "noteOwner"
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            },
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ERC1724/ZkAssetOwnableTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ERC1724/ZkAssetOwnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ERC1724/ZkAssetOwnable.sol",
      "parts": [
       "../../ERC1724/ZkAssetOwnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetOwnableTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ZkAssetOwnable"
         },
         "name": "zkAssetOwnable",
         "identifier": {
          "type": "Identifier",
          "name": "zkAssetOwnable"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setZkAssetOwnableAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_zkAssetOwnableAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_zkAssetOwnableAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "zkAssetOwnable"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ZkAssetOwnable"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_zkAssetOwnableAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "callValidateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "zkAssetOwnable"
              },
              "memberName": "ace"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "callConfidentialTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "zkAssetOwnable"
            },
            "memberName": "confidentialTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofOutput"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/TestFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/noteRegistry/epochs/201907/base/FactoryBase201907.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/noteRegistry/epochs/201907/base/FactoryBase201907.sol",
      "parts": [
       "../../ACE/noteRegistry/epochs/201907/base/FactoryBase201907.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/noteRegistry/proxies/BaseAdminUpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/noteRegistry/proxies/BaseAdminUpgradeabilityProxy.sol",
      "parts": [
       "../../ACE/noteRegistry/proxies/BaseAdminUpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TestFactory",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "FactoryBase201907"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "FactoryBase201907",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getImplementation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": "payable"
         },
         "name": "_proxyAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_proxyAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "implementation"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "BaseAdminUpgradeabilityProxy"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proxyAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "implementation"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/BehaviourWithConflictTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ContractDefinition",
     "name": "BehaviourWithConflictTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "ReachedBehaviour",
       "parameters": [],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ReachedBehaviour"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "0x0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/ACETest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/ACE.sol",
      "parts": [
       "../../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ACETest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "DebugValidateProofs",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "proofOutputs"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ACE"
         },
         "name": "ace",
         "identifier": {
          "type": "Identifier",
          "name": "ace"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setACEAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "ace"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ACE"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aceAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_sender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DebugValidateProofs"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "proofOutputs"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/swap/SwapABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/swap/SwapABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/swap/SwapABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SwapABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "SwapABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/publicRange/PublicRangeABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/publicRange/PublicRangeABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/publicRange/PublicRangeABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/publicRange/PublicRangeABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../libs/LibEIP712.sol",
      "parts": [
       "../../../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "PublicRangeABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validatePublicRange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "PublicRangeABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/privateRange/PrivateRangeABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/privateRange/PrivateRangeABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/privateRange/PrivateRangeABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/privateRange/PrivateRangeABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "PrivateRangeABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validatePrivateRange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "PrivateRangeABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitFluidABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateJoinSplitFluid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "JoinSplitFluidABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/joinSplit/JoinSplitABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/joinSplit/JoinSplitABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/joinSplit/JoinSplitABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/joinSplit/JoinSplitABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../libs/LibEIP712.sol",
      "parts": [
       "../../../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateJoinSplit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "JoinSplitABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/dividend/DividendABIEncoderTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../ACE/validators/dividend/DividendABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../ACE/validators/dividend/DividendABIEncoder.sol",
      "parts": [
       "../../../../ACE/validators/dividend/DividendABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "DividendABIEncoderTest",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateDividend",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "DividendABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/VersioningUtils.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "VersioningUtils",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getVersionComponents",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "version",
         "identifier": {
          "type": "Identifier",
          "name": "version"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "first",
         "identifier": {
          "type": "Identifier",
          "name": "first"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "second",
         "identifier": {
          "type": "Identifier",
          "name": "second"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "third",
         "identifier": {
          "type": "Identifier",
          "name": "third"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "third"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "version",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "second"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "div",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "version",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "first"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "div",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "version",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10000"
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "first"
            },
            {
             "type": "Identifier",
             "name": "second"
            },
            {
             "type": "Identifier",
             "name": "third"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/SafeMath8.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <=0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "SafeMath8",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "a"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "b"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "c"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "256",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "uint8 mul triggered integer overflow",
             "parts": [
              "uint8 mul triggered integer overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint8",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "c"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "div",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "uint8 sub triggered integer underflow",
             "parts": [
              "uint8 sub triggered integer underflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "c"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "uint8 add triggered integer overflow",
             "parts": [
              "uint8 add triggered integer overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/ProofUtils.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "ProofUtils",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getProofComponents",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "proof",
         "identifier": {
          "type": "Identifier",
          "name": "proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "epoch",
         "identifier": {
          "type": "Identifier",
          "name": "epoch"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "category",
         "identifier": {
          "type": "Identifier",
          "name": "category"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "id",
         "identifier": {
          "type": "Identifier",
          "name": "id"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "id"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "proof",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "category"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "div",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "proof",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "epoch"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "div",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "proof",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10000"
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "epoch"
            },
            {
             "type": "Identifier",
             "name": "category"
            },
            {
             "type": "Identifier",
             "name": "id"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/NoteUtils.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "NoteUtils",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputsOrNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputsOrNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "len",
         "identifier": {
          "type": "Identifier",
          "name": "len"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "len"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_proofOutputsOrNotes",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "get",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputsOrNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputsOrNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_i",
         "identifier": {
          "type": "Identifier",
          "name": "_i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "out",
         "identifier": {
          "type": "Identifier",
          "name": "out"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "valid",
            "identifier": {
             "type": "Identifier",
             "name": "valid"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "valid"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proofOutputsOrNotes",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "out"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "_proofOutputsOrNotes",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "_i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "_proofOutputsOrNotes",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "valid"
            },
            {
             "type": "StringLiteral",
             "value": "AZTEC array index is out of bounds",
             "parts": [
              "AZTEC array index is out of bounds"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractProofOutput",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "inputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "inputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "outputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "outputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "inputNotes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_proofOutput",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proofOutput",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "outputNotes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_proofOutput",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proofOutput",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "publicOwner"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proofOutput",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffffffffffffffffffffffffffffffffff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "publicValue"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_proofOutput",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractChallenge",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "challenge",
         "identifier": {
          "type": "Identifier",
          "name": "challenge"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "challenge"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_proofOutput",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_note",
         "identifier": {
          "type": "Identifier",
          "name": "_note"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "owner"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_note",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffffffffffffffffffffffffffffffffff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "noteHash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_note",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_note",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x80"
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNoteType",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_note",
         "identifier": {
          "type": "Identifier",
          "name": "_note"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "noteType",
         "identifier": {
          "type": "Identifier",
          "name": "noteType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "noteType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_note",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/MetaDataUtils.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <=0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "MetaDataUtils",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "MetaData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "extractAddresses",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metaData",
         "identifier": {
          "type": "Identifier",
          "name": "metaData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addressToApprove",
         "identifier": {
          "type": "Identifier",
          "name": "addressToApprove"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MetaData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "addressToApprove"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "metaData",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/LibEIP712.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "LibEIP712",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_NAME",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_NAME"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "AZTEC_CRYPTOGRAPHY_ENGINE",
          "parts": [
           "AZTEC_CRYPTOGRAPHY_ENGINE"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "AZTEC_CRYPTOGRAPHY_ENGINE",
        "parts": [
         "AZTEC_CRYPTOGRAPHY_ENGINE"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_VERSION",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_VERSION"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "1",
          "parts": [
           "1"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "1",
        "parts": [
         "1"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "EIP712Domain(",
              "parts": [
               "EIP712Domain("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "string name,",
              "parts": [
               "string name,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "string version,",
              "parts": [
               "string version,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address verifyingContract",
              "parts": [
               "address verifyingContract"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "EIP712Domain(",
            "parts": [
             "EIP712Domain("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "string name,",
            "parts": [
             "string name,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "string version,",
            "parts": [
             "string version,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address verifyingContract",
            "parts": [
             "address verifyingContract"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_HASH"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "EIP712_DOMAIN_HASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encode"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "EIP712_DOMAIN_NAME"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "EIP712_DOMAIN_VERSION"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "hashEIP712Message",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hashStruct",
         "identifier": {
          "type": "Identifier",
          "name": "_hashStruct"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_result",
         "identifier": {
          "type": "Identifier",
          "name": "_result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "eip712DomainHash",
            "identifier": {
             "type": "Identifier",
             "name": "eip712DomainHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "EIP712_DOMAIN_HASH"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "memPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x1901"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "eip712DomainHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "AssemblyCall",
               "functionName": "_hashStruct",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x1e"
               },
               {
                "type": "HexNumber",
                "value": "0x42"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "AssemblyCall",
               "functionName": "memPtr",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "recoverSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_message",
         "identifier": {
          "type": "Identifier",
          "name": "_message"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_signer",
         "identifier": {
          "type": "Identifier",
          "name": "_signer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "byteLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_signature",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_signature",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_message",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "248"
               },
               {
                "type": "AssemblyCall",
                "functionName": "v",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "_signature",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "_signature",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x40"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "_signature",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "_signature",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "_signature",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "v",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "and",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "byteLength",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x41"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "byteLength",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "v",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "27"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "v",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "28"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "staticcall",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "gas",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "eq",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_message",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 }
                ]
               }
              ]
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "_signer"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "mload",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "_signature",
                     "arguments": []
                    }
                   ]
                  }
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_signature",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "byteLength",
               "arguments": []
              }
             ]
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "Identifier",
               "name": "result"
              },
              "right": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "Identifier",
                  "name": "_signer"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0x0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ],
               "isArray": false
              }
             }
            ],
            "isArray": false
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "_signer"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "signer address cannot be 0",
                "parts": [
                 "signer address cannot be 0"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "result"
               },
               {
                "type": "StringLiteral",
                "value": "signature recovery failed",
                "parts": [
                 "signature recovery failed"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/libs/GenericABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "GenericABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "NOTE_TYPE",
         "identifier": {
          "type": "Identifier",
          "name": "NOTE_TYPE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeProofOutputsOne",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "noteInfo",
         "identifier": {
          "type": "Identifier",
          "name": "noteInfo"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "size",
            "identifier": {
             "type": "Identifier",
             "name": "size"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "NumberLiteral",
            "number": "0x80",
            "subdenomination": null
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "encodeProofOutput"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0x1e0",
              "subdenomination": null
             },
             {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "&",
                "left": {
                 "type": "Identifier",
                 "name": "noteInfo"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0xff",
                 "subdenomination": null
                }
               }
              ],
              "isArray": false
             },
             {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": ">>",
                 "left": {
                  "type": "Identifier",
                  "name": "noteInfo"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "8",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xff",
               "subdenomination": null
              }
             },
             {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": ">>",
                 "left": {
                  "type": "Identifier",
                  "name": "noteInfo"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xffff",
               "subdenomination": null
              }
             },
             {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": ">>",
                 "left": {
                  "type": "Identifier",
                  "name": "noteInfo"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "32",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xffff",
               "subdenomination": null
              }
             },
             {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": ">>",
                 "left": {
                  "type": "Identifier",
                  "name": "noteInfo"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "48",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xffff",
               "subdenomination": null
              }
             },
             {
              "type": "Identifier",
              "name": "publicOwner"
             },
             {
              "type": "Identifier",
              "name": "publicValue"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "size",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "size",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeProofOutput",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "freePtr",
         "identifier": {
          "type": "Identifier",
          "name": "freePtr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "numNotes",
         "identifier": {
          "type": "Identifier",
          "name": "numNotes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "numInputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "numInputNotes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "offsetToNotes",
         "identifier": {
          "type": "Identifier",
          "name": "offsetToNotes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "ownerPtr",
         "identifier": {
          "type": "Identifier",
          "name": "ownerPtr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "metadataPtr",
         "identifier": {
          "type": "Identifier",
          "name": "metadataPtr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "proofOutputSize",
         "identifier": {
          "type": "Identifier",
          "name": "proofOutputSize"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "freePtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0xa0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "freePtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "publicOwner",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "freePtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x80"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "publicValue",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "proofOutputSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "encodeInputNotes",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "freePtr",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "numInputNotes",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "offsetToNotes",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "ownerPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "freePtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofOutputSize",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "proofOutputSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "proofOutputSize",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "encodeOutputNotes",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "freePtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xa0"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "proofOutputSize",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "numNotes",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "numInputNotes",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offsetToNotes",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "numInputNotes",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xc0"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "ownerPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "numInputNotes",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "numInputNotes",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "proofOutputSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "proofOutputSize",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0xa0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "freePtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofOutputSize",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "encodeInputNotes",
             "arguments": [
              {
               "type": "Identifier",
               "name": "memPtr"
              },
              {
               "type": "Identifier",
               "name": "len"
              },
              {
               "type": "Identifier",
               "name": "notePtr"
              },
              {
               "type": "Identifier",
               "name": "ownerPtr"
              }
             ],
             "returnArguments": [
              {
               "type": "Identifier",
               "name": "inputNotesLength"
              }
             ],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "memPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "len",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notePtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "memPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "len",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "len",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "memPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mul",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "i",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x20"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "memPtr",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notePtr",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "calldataload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "ownerPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mul",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "i",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0xc0"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x60"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "keccak256",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x00"
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xa0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xa0"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "HexNumber",
                         "value": "0x20"
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mload",
                           "arguments": [
                            {
                             "type": "HexNumber",
                             "value": "0x40"
                            }
                           ]
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x01"
                          }
                         ]
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xc0"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "HexNumber",
                         "value": "0x60"
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mload",
                           "arguments": [
                            {
                             "type": "HexNumber",
                             "value": "0x80"
                            }
                           ]
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x01"
                          }
                         ]
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "notePtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "memPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "memPtr",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "inputNotesLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notePtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "memPtr",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "encodeOutputNotes",
             "arguments": [
              {
               "type": "Identifier",
               "name": "memPtr"
              },
              {
               "type": "Identifier",
               "name": "len"
              },
              {
               "type": "Identifier",
               "name": "notePtr"
              },
              {
               "type": "Identifier",
               "name": "ownerPtr"
              },
              {
               "type": "Identifier",
               "name": "metadataPtr"
              }
             ],
             "returnArguments": [
              {
               "type": "Identifier",
               "name": "outputNotesLength"
              }
             ],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "memPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "len",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notePtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "memPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "len",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "len",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "memPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mul",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "i",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x20"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "memPtr",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "metadataIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "metadataPtr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mul",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "i",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x20"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "metadataLength"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "metadataPtr",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "metadataIndex",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notePtr",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "calldataload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "ownerPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mul",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "i",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0xc0"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x60"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "keccak256",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x00"
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xa0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadataLength",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xa0"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "HexNumber",
                         "value": "0x20"
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mload",
                           "arguments": [
                            {
                             "type": "HexNumber",
                             "value": "0x40"
                            }
                           ]
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x01"
                          }
                         ]
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xc0"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "HexNumber",
                         "value": "0x60"
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mload",
                           "arguments": [
                            {
                             "type": "HexNumber",
                             "value": "0x80"
                            }
                           ]
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x01"
                          }
                         ]
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notePtr",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xe0"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadataIndex",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "metadataPtr",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x20"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataLength",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "notePtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0xe0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "metadataLength",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "memPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notePtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "memPtr",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "outputNotesLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notePtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "memPtr",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/SwapInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "SwapInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "PublicRangeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validatePublicRange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "PrivateRangeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validatePrivateRange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateJoinSplit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitFluidInterface",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateJoinSplitFluid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IZkAssetMintable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC1724/ZkAsset.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC1724/ZkAsset.sol",
      "parts": [
       "../ERC1724/ZkAsset.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC20/ERC20Mintable.sol",
      "parts": [
       "../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC1724/ZkAssetOwnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC1724/ZkAssetOwnable.sol",
      "parts": [
       "../ERC1724/ZkAssetOwnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "IZkAssetMintable",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "confidentialMint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IZkAssetBurnable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC1724/ZkAsset.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC1724/ZkAsset.sol",
      "parts": [
       "../ERC1724/ZkAsset.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC1724/ZkAssetOwnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC1724/ZkAssetOwnable.sol",
      "parts": [
       "../ERC1724/ZkAssetOwnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "IZkAssetBurnable",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "confidentialBurn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IZkAsset.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "IZkAsset",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "CreateZkAsset",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "aceAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "linkedTokenAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ApprovedAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addressApproved",
         "identifier": {
          "type": "Identifier",
          "name": "addressApproved"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CreateNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "noteRegistryId",
         "identifier": {
          "type": "Identifier",
          "name": "noteRegistryId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CreateNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DestroyNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ConvertTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RedeemTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UpdateNoteMetaData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialApprove",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_status",
         "identifier": {
          "type": "Identifier",
          "name": "_status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IERC20.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "IERC20",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "who",
         "identifier": {
          "type": "Identifier",
          "name": "who"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "EventDefinition",
       "name": "Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Approval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IAZTEC.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "IAZTEC",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EnumDefinition",
       "name": "ProofCategory",
       "members": [
        {
         "type": "EnumValue",
         "name": "NULL"
        },
        {
         "type": "EnumValue",
         "name": "BALANCED"
        },
        {
         "type": "EnumValue",
         "name": "MINT"
        },
        {
         "type": "EnumValue",
         "name": "BURN"
        },
        {
         "type": "EnumValue",
         "name": "UTILITY"
        }
       ]
      },
      {
       "type": "EnumDefinition",
       "name": "NoteStatus",
       "members": [
        {
         "type": "EnumValue",
         "name": "DOES_NOT_EXIST"
        },
        {
         "type": "EnumValue",
         "name": "UNSPENT"
        },
        {
         "type": "EnumValue",
         "name": "SPENT"
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "JOIN_SPLIT_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "JOIN_SPLIT_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "65793",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "65793",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "MINT_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "MINT_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "66049",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "66049",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "BURN_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "BURN_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "66305",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "66305",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "PRIVATE_RANGE_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "PRIVATE_RANGE_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "66562",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "66562",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "PUBLIC_RANGE_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "PUBLIC_RANGE_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "66563",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "66563",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "DIVIDEND_PROOF",
         "identifier": {
          "type": "Identifier",
          "name": "DIVIDEND_PROOF"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "66561",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "66561",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "ZERO_VALUE_NOTE_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "ZERO_VALUE_NOTE_HASH"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0xcbc417524e52b95c42a4c42d357938497e3d199eb9b4a0139c92551d4000bc3c",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0xcbc417524e52b95c42a4c42d357938497e3d199eb9b4a0139c92551d4000bc3c",
        "subdenomination": null
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/IACE.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAZTEC.sol",
      "parts": [
       "../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/NoteUtils.sol",
      "parts": [
       "../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/SafeMath8.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/SafeMath8.sol",
      "parts": [
       "../libs/SafeMath8.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "IACE",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proofSender",
         "identifier": {
          "type": "Identifier",
          "name": "_proofSender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proofSender",
         "identifier": {
          "type": "Identifier",
          "name": "_proofSender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "clearProofByHashes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_proofHashes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHashes"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCommonReferenceString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": "_commonReferenceString",
         "identifier": {
          "type": "Identifier",
          "name": "_commonReferenceString"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "invalidateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProofByHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_proofHash",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_validatorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementLatestEpoch",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCommonReferenceString",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getValidatorAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "validatorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "validatorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_registryOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "createdOn",
         "identifier": {
          "type": "Identifier",
          "name": "createdOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "destroyedOn",
         "identifier": {
          "type": "Identifier",
          "name": "destroyedOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/DividendInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "DividendInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateDividend",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/MultiSig/MultiSigWalletWithTimeLock.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.7"
    },
    {
     "type": "ImportDirective",
     "path": "./MultiSigWallet.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MultiSigWallet.sol",
      "parts": [
       "./MultiSigWallet.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "MultiSigWalletWithTimeLock",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MultiSigWallet"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "ConfirmationTimeSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "confirmationTime",
         "identifier": {
          "type": "Identifier",
          "name": "confirmationTime"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TimeLockChange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "secondsTimeLocked",
         "identifier": {
          "type": "Identifier",
          "name": "secondsTimeLocked"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "secondsTimeLocked",
         "identifier": {
          "type": "Identifier",
          "name": "secondsTimeLocked"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "confirmationTimes",
         "identifier": {
          "type": "Identifier",
          "name": "confirmationTimes"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "notFullyConfirmed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "isConfirmed"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "TX_FULLY_CONFIRMED",
             "parts": [
              "TX_FULLY_CONFIRMED"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "fullyConfirmed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isConfirmed"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "transactionId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "TX_NOT_FULLY_CONFIRMED",
             "parts": [
              "TX_NOT_FULLY_CONFIRMED"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "pastTimeLock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "confirmationTimes"
               },
               "index": {
                "type": "Identifier",
                "name": "transactionId"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "secondsTimeLocked"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "TIME_LOCK_INCOMPLETE",
             "parts": [
              "TIME_LOCK_INCOMPLETE"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_owners",
         "identifier": {
          "type": "Identifier",
          "name": "_owners"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_required",
         "identifier": {
          "type": "Identifier",
          "name": "_required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_secondsTimeLocked",
         "identifier": {
          "type": "Identifier",
          "name": "_secondsTimeLocked"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "secondsTimeLocked"
           },
           "right": {
            "type": "Identifier",
            "name": "_secondsTimeLocked"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "MultiSigWallet",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_owners"
          },
          {
           "type": "Identifier",
           "name": "_required"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeTimeLock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_secondsTimeLocked",
         "identifier": {
          "type": "Identifier",
          "name": "_secondsTimeLocked"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "secondsTimeLocked"
           },
           "right": {
            "type": "Identifier",
            "name": "_secondsTimeLocked"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TimeLockChange"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_secondsTimeLocked"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWallet",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "transactionId"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Confirmation"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isConfirmed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setConfirmationTime"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "transactionExists",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notConfirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notFullyConfirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Transaction"
            },
            "name": "txn",
            "identifier": {
             "type": "Identifier",
             "name": "txn"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "transactions"
           },
           "index": {
            "type": "Identifier",
            "name": "transactionId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "txn"
            },
            "memberName": "executed"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "external_call"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "destination"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "txn"
              },
              "memberName": "data"
             },
             "memberName": "length"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "data"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Execution"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ExecutionFailure"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "txn"
               },
               "memberName": "executed"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": false
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "notExecuted",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "fullyConfirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "pastTimeLock",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfirmationTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "confirmationTime",
         "identifier": {
          "type": "Identifier",
          "name": "confirmationTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "confirmationTimes"
            },
            "index": {
             "type": "Identifier",
             "name": "transactionId"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "confirmationTime"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ConfirmationTimeSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            },
            {
             "type": "Identifier",
             "name": "confirmationTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/MultiSig/MultiSigWallet.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.7"
    },
    {
     "type": "ContractDefinition",
     "name": "MultiSigWallet",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Confirmation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Revocation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Submission",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Execution",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ExecutionFailure",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "OwnerAddition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "OwnerRemoval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RequirementChange",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "MAX_OWNER_COUNT",
         "identifier": {
          "type": "Identifier",
          "name": "MAX_OWNER_COUNT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "50",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "50",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Transaction"
          },
          "valueName": null
         },
         "name": "transactions",
         "identifier": {
          "type": "Identifier",
          "name": "transactions"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "confirmations",
         "identifier": {
          "type": "Identifier",
          "name": "confirmations"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isOwner",
         "identifier": {
          "type": "Identifier",
          "name": "isOwner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "owners",
         "identifier": {
          "type": "Identifier",
          "name": "owners"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionCount",
         "identifier": {
          "type": "Identifier",
          "name": "transactionCount"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StructDefinition",
       "name": "Transaction",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "destination",
         "identifier": {
          "type": "Identifier",
          "name": "destination"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "executed",
         "identifier": {
          "type": "Identifier",
          "name": "executed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyWallet",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "ownerDoesNotExist",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isOwner"
              },
              "index": {
               "type": "Identifier",
               "name": "owner"
              }
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "ownerExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isOwner"
             },
             "index": {
              "type": "Identifier",
              "name": "owner"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "transactionExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "transactions"
               },
               "index": {
                "type": "Identifier",
                "name": "transactionId"
               }
              },
              "memberName": "destination"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "confirmed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "confirmations"
              },
              "index": {
               "type": "Identifier",
               "name": "transactionId"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "owner"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "notConfirmed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "confirmations"
               },
               "index": {
                "type": "Identifier",
                "name": "transactionId"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "owner"
              }
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "notExecuted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "transactions"
               },
               "index": {
                "type": "Identifier",
                "name": "transactionId"
               }
              },
              "memberName": "executed"
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "notNull",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_address"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "validRequirement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "ownerCount",
         "identifier": {
          "type": "Identifier",
          "name": "ownerCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_required",
         "identifier": {
          "type": "Identifier",
          "name": "_required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "ownerCount"
                },
                "right": {
                 "type": "Identifier",
                 "name": "MAX_OWNER_COUNT"
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "_required"
                },
                "right": {
                 "type": "Identifier",
                 "name": "ownerCount"
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "_required"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "ownerCount"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "EmitStatement",
           "eventCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Deposit"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_owners",
         "identifier": {
          "type": "Identifier",
          "name": "_owners"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_required",
         "identifier": {
          "type": "Identifier",
          "name": "_required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_owners"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "isOwner"
                  },
                  "index": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_owners"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 },
                 "isPrefix": true
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_owners"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0x0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "isOwner"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_owners"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owners"
           },
           "right": {
            "type": "Identifier",
            "name": "_owners"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "required"
           },
           "right": {
            "type": "Identifier",
            "name": "_required"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "validRequirement",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_owners"
           },
           "memberName": "length"
          },
          {
           "type": "Identifier",
           "name": "_required"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isOwner"
            },
            "index": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnerAddition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWallet",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "ownerDoesNotExist",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notNull",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "validRequirement",
         "arguments": [
          {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          {
           "type": "Identifier",
           "name": "required"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isOwner"
            },
            "index": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "owners"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "owners"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "owners"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "owners"
                },
                "index": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "owners"
                  },
                  "memberName": "length"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               }
              }
             },
             {
              "type": "BreakStatement"
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "required"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "changeRequirement"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "owners"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnerRemoval"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWallet",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "replaceOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "owners"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "owners"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "newOwner"
               }
              }
             },
             {
              "type": "BreakStatement"
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isOwner"
            },
            "index": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isOwner"
            },
            "index": {
             "type": "Identifier",
             "name": "newOwner"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnerRemoval"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnerAddition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWallet",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "ownerDoesNotExist",
         "arguments": [
          {
           "type": "Identifier",
           "name": "newOwner"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeRequirement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_required",
         "identifier": {
          "type": "Identifier",
          "name": "_required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "required"
           },
           "right": {
            "type": "Identifier",
            "name": "_required"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RequirementChange"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_required"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWallet",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "validRequirement",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "owners"
           },
           "memberName": "length"
          },
          {
           "type": "Identifier",
           "name": "_required"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "submitTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "destination",
         "identifier": {
          "type": "Identifier",
          "name": "destination"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "transactionId"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "addTransaction"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "destination"
             },
             {
              "type": "Identifier",
              "name": "value"
             },
             {
              "type": "Identifier",
              "name": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "confirmTransaction"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "transactionId"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Confirmation"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "executeTransaction"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "transactionExists",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notConfirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "revokeConfirmation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "transactionId"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Revocation"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "confirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notExecuted",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isConfirmed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Transaction"
               },
               "name": "txn",
               "identifier": {
                "type": "Identifier",
                "name": "txn"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "transactions"
              },
              "index": {
               "type": "Identifier",
               "name": "transactionId"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "txn"
               },
               "memberName": "executed"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "external_call"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "txn"
                },
                "memberName": "destination"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "txn"
                },
                "memberName": "value"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "txn"
                 },
                 "memberName": "data"
                },
                "memberName": "length"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "txn"
                },
                "memberName": "data"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "trueBody": {
              "type": "EmitStatement",
              "eventCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "Execution"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "transactionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "ExecutionFailure"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "transactionId"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "txn"
                  },
                  "memberName": "executed"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ownerExists",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "confirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "notExecuted",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "external_call",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "destination",
         "identifier": {
          "type": "Identifier",
          "name": "destination"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "dataLength",
         "identifier": {
          "type": "Identifier",
          "name": "dataLength"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "d"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "data",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "32"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "call",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "gas",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "34710"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "destination",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "value",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "d",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "result"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isConfirmed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "confirmations"
               },
               "index": {
                "type": "Identifier",
                "name": "transactionId"
               }
              },
              "index": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "owners"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "count"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "count"
              },
              "right": {
               "type": "Identifier",
               "name": "required"
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "BooleanLiteral",
               "value": true
              }
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "addTransaction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "destination",
         "identifier": {
          "type": "Identifier",
          "name": "destination"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "transactionId"
           },
           "right": {
            "type": "Identifier",
            "name": "transactionCount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "transactions"
            },
            "index": {
             "type": "Identifier",
             "name": "transactionId"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Transaction"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "destination"
             },
             {
              "type": "Identifier",
              "name": "value"
             },
             {
              "type": "Identifier",
              "name": "data"
             },
             {
              "type": "BooleanLiteral",
              "value": false
             }
            ],
            "names": [
             "destination",
             "value",
             "data",
             "executed"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "destination"
             },
             {
              "type": "Identifier",
              "name": "value"
             },
             {
              "type": "Identifier",
              "name": "data"
             },
             {
              "type": "Identifier",
              "name": "executed"
             }
            ]
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "transactionCount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Submission"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "notNull",
         "arguments": [
          {
           "type": "Identifier",
           "name": "destination"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getConfirmationCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "count",
         "identifier": {
          "type": "Identifier",
          "name": "count"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "transactionId"
             }
            },
            "index": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "owners"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           },
           "trueBody": {
            "type": "ExpressionStatement",
            "expression": {
             "type": "BinaryOperation",
             "operator": "+=",
             "left": {
              "type": "Identifier",
              "name": "count"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           },
           "falseBody": null
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTransactionCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "pending",
         "identifier": {
          "type": "Identifier",
          "name": "pending"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "executed",
         "identifier": {
          "type": "Identifier",
          "name": "executed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "count",
         "identifier": {
          "type": "Identifier",
          "name": "count"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "transactionCount"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "||",
            "left": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "Identifier",
              "name": "pending"
             },
             "right": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "transactions"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "executed"
              },
              "isPrefix": true
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "Identifier",
              "name": "executed"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "transactions"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "memberName": "executed"
             }
            }
           },
           "trueBody": {
            "type": "ExpressionStatement",
            "expression": {
             "type": "BinaryOperation",
             "operator": "+=",
             "left": {
              "type": "Identifier",
              "name": "count"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           },
           "falseBody": null
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getOwners",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "owners"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getConfirmations",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_confirmations",
         "identifier": {
          "type": "Identifier",
          "name": "_confirmations"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            },
            "name": "confirmationsTemp",
            "identifier": {
             "type": "Identifier",
             "name": "confirmationsTemp"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "owners"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "owners"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "transactionId"
             }
            },
            "index": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "owners"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "confirmationsTemp"
                },
                "index": {
                 "type": "Identifier",
                 "name": "count"
                }
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "owners"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "count"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_confirmations"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "address",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "count"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "count"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_confirmations"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confirmationsTemp"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTransactionIds",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "pending",
         "identifier": {
          "type": "Identifier",
          "name": "pending"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "executed",
         "identifier": {
          "type": "Identifier",
          "name": "executed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_transactionIds",
         "identifier": {
          "type": "Identifier",
          "name": "_transactionIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "transactionIdsTemp",
            "identifier": {
             "type": "Identifier",
             "name": "transactionIdsTemp"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "transactionCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "transactionCount"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "||",
            "left": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "Identifier",
              "name": "pending"
             },
             "right": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "transactions"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "executed"
              },
              "isPrefix": true
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "Identifier",
              "name": "executed"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "transactions"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "memberName": "executed"
             }
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "transactionIdsTemp"
                },
                "index": {
                 "type": "Identifier",
                 "name": "count"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "i"
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "count"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_transactionIds"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "to"
              },
              "right": {
               "type": "Identifier",
               "name": "from"
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "Identifier",
             "name": "from"
            }
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "to"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_transactionIds"
             },
             "index": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "from"
              }
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "transactionIdsTemp"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC20/ERC20Mintable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20Mintable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAssetOwnable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetOwnableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetOwnableBase.sol",
      "parts": [
       "./base/ZkAssetOwnableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/SafeMath8.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/SafeMath8.sol",
      "parts": [
       "../libs/SafeMath8.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetOwnable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetOwnableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetOwnableBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": false
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAssetMintable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC20/ERC20Mintable.sol",
      "parts": [
       "../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetMintableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetMintableBase.sol",
      "parts": [
       "./base/ZkAssetMintableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetMintable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetMintableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_optionalMintProofId",
         "identifier": {
          "type": "Identifier",
          "name": "_optionalMintProofId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_optionalInitialisationMint",
         "identifier": {
          "type": "Identifier",
          "name": "_optionalInitialisationMint"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "_optionalMintProofId"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_optionalInitialisationMint"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "confidentialMint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_optionalMintProofId"
               },
               {
                "type": "Identifier",
                "name": "_optionalInitialisationMint"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetOwnableBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": true
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAssetDetailed.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetBase.sol",
      "parts": [
       "./base/ZkAssetBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetDetailed",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol",
         "identifier": {
          "type": "Identifier",
          "name": "symbol"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "name"
           },
           "right": {
            "type": "Identifier",
            "name": "_name"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "symbol"
           },
           "right": {
            "type": "Identifier",
            "name": "_symbol"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": false
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAssetBurnable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetBurnableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetBurnableBase.sol",
      "parts": [
       "./base/ZkAssetBurnableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetBurnable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetBurnableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetOwnableBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": true
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAssetAdjustable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ERC20/ERC20Mintable.sol",
      "parts": [
       "../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/LibEIP712.sol",
      "parts": [
       "../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetMintableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetMintableBase.sol",
      "parts": [
       "./base/ZkAssetMintableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetBurnableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetBurnableBase.sol",
      "parts": [
       "./base/ZkAssetBurnableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetAdjustable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetMintableBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetBurnableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_optionalMintProofId",
         "identifier": {
          "type": "Identifier",
          "name": "_optionalMintProofId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_optionalInitialisationMint",
         "identifier": {
          "type": "Identifier",
          "name": "_optionalInitialisationMint"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "_optionalMintProofId"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_optionalInitialisationMint"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "confidentialMint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_optionalMintProofId"
               },
               {
                "type": "Identifier",
                "name": "_optionalInitialisationMint"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetOwnableBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": true
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/ZkAsset.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../ACE/ACE.sol",
      "parts": [
       "../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./base/ZkAssetBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./base/ZkAssetBase.sol",
      "parts": [
       "./base/ZkAssetBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAsset",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "BooleanLiteral",
           "value": false
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/base/ZkAssetOwnableBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./ZkAssetBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ZkAssetBase.sol",
      "parts": [
       "./ZkAssetBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/ProofUtils.sol",
      "parts": [
       "../../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/SafeMath8.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/SafeMath8.sol",
      "parts": [
       "../../libs/SafeMath8.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetOwnableBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint24",
        "stateMutability": null
       },
       "libraryName": "ProofUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint8",
        "stateMutability": null
       },
       "libraryName": "SafeMath8",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint8",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "proofs",
         "identifier": {
          "type": "Identifier",
          "name": "proofs"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ZkAssetBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          },
          {
           "type": "Identifier",
           "name": "_linkedTokenAddress"
          },
          {
           "type": "Identifier",
           "name": "_scalingFactor"
          },
          {
           "type": "Identifier",
           "name": "_canAdjustSupply"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setProofs",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_epoch",
         "identifier": {
          "type": "Identifier",
          "name": "_epoch"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proofs",
         "identifier": {
          "type": "Identifier",
          "name": "_proofs"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "proofs"
            },
            "index": {
             "type": "Identifier",
             "name": "_epoch"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_proofs"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "supportsProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "result"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected proof to be supported",
             "parts": [
              "expected proof to be supported"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "confidentialTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofOutput"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "supportsProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "epoch",
            "identifier": {
             "type": "Identifier",
             "name": "epoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "category",
            "identifier": {
             "type": "Identifier",
             "name": "category"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "id",
            "identifier": {
             "type": "Identifier",
             "name": "id"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "category"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "ProofCategory"
                },
                "memberName": "BALANCED"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset only supports balanced proofs",
             "parts": [
              "this asset only supports balanced proofs"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "bit",
            "identifier": {
             "type": "Identifier",
             "name": "bit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint8",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">>",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "proofs"
               },
               "index": {
                "type": "Identifier",
                "name": "epoch"
               }
              },
              "right": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "id"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "isArray": false
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "bit"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeRegistryVersion",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_factoryId",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "upgradeNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_factoryId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/base/ZkAssetMintableBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/ACE.sol",
      "parts": [
       "../../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../ERC20/ERC20Mintable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ERC20/ERC20Mintable.sol",
      "parts": [
       "../../ERC20/ERC20Mintable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/LibEIP712.sol",
      "parts": [
       "../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/ProofUtils.sol",
      "parts": [
       "../../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./ZkAssetOwnableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ZkAssetOwnableBase.sol",
      "parts": [
       "./ZkAssetOwnableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetMintableBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetOwnableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "UpdateTotalMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metaData",
         "identifier": {
          "type": "Identifier",
          "name": "metaData"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialMint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofData"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "proof invalid",
             "parts": [
              "proof invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "_proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "_proofOutputs"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "owner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "newTotal",
            "identifier": {
             "type": "Identifier",
             "name": "newTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "mintedNotes",
            "identifier": {
             "type": "Identifier",
             "name": "mintedNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "noteHash",
            "identifier": {
             "type": "Identifier",
             "name": "noteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "metaData",
            "identifier": {
             "type": "Identifier",
             "name": "metaData"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logOutputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "mintedNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UpdateTotalMinted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "noteHash"
            },
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "JOIN_SPLIT_PROOF"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "proofOutputs"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "proof invalid",
             "parts": [
              "proof invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "proofOutput",
            "identifier": {
             "type": "Identifier",
             "name": "proofOutput"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            "memberName": "get"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "publicValue",
            "identifier": {
             "type": "Identifier",
             "name": "publicValue"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "proofOutput"
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "scalingFactor",
            "identifier": {
             "type": "Identifier",
             "name": "scalingFactor"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "totalSupply",
            "identifier": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getRegistry"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "publicValue"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "supplementValue",
                  "identifier": {
                   "type": "Identifier",
                   "name": "supplementValue"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "publicValue"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "totalSupply"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "ERC20Mintable"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "linkedToken"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "supplementValue"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "scalingFactor"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "ERC20Mintable"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "linkedToken"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "approve"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "ace"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "supplementValue"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "scalingFactor"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ace"
                  },
                  "memberName": "supplementTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "supplementValue"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "confidentialTransferInternal"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            {
             "type": "Identifier",
             "name": "_signatures"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "inputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "outputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "outputNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "publicOwner",
            "identifier": {
             "type": "Identifier",
             "name": "publicOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "publicValue",
            "identifier": {
             "type": "Identifier",
             "name": "publicValue"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "memberName": "getLength"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              null,
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "inputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "confidentialApproved"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "noteHash"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                },
                "right": {
                 "type": "BooleanLiteral",
                 "value": true
                }
               },
               {
                "type": "StringLiteral",
                "value": "sender does not have approval to spend input note",
                "parts": [
                 "sender does not have approval to spend input note"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "scalingFactor",
            "identifier": {
             "type": "Identifier",
             "name": "scalingFactor"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "totalSupply",
            "identifier": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getRegistry"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "publicValue"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "supplementValue",
                  "identifier": {
                   "type": "Identifier",
                   "name": "supplementValue"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "publicValue"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "totalSupply"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "ERC20Mintable"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "linkedToken"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "supplementValue"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "scalingFactor"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "ERC20Mintable"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "linkedToken"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "approve"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "ace"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "supplementValue"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "scalingFactor"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ace"
                  },
                  "memberName": "supplementTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "supplementValue"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "updateNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logInputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "inputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logOutputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "outputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ConvertTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "publicOwner"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "UnaryOperation",
                  "operator": "-",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "publicValue"
                  },
                  "isPrefix": true
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RedeemTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "publicOwner"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "publicValue"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/base/ZkAssetBurnableBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/ACE.sol",
      "parts": [
       "../../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/LibEIP712.sol",
      "parts": [
       "../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/ProofUtils.sol",
      "parts": [
       "../../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./ZkAssetOwnableBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ZkAssetOwnableBase.sol",
      "parts": [
       "./ZkAssetOwnableBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetBurnableBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZkAssetOwnableBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "UpdateTotalBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "noteData",
         "identifier": {
          "type": "Identifier",
          "name": "noteData"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialBurn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofData"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "proof invalid",
             "parts": [
              "proof invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "_proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "_proofOutputs"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "owner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "newTotal",
            "identifier": {
             "type": "Identifier",
             "name": "newTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "burnedNotes",
            "identifier": {
             "type": "Identifier",
             "name": "burnedNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "noteHash",
            "identifier": {
             "type": "Identifier",
             "name": "noteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "metadata",
            "identifier": {
             "type": "Identifier",
             "name": "metadata"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logInputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "burnedNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UpdateTotalBurned"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "noteHash"
            },
            {
             "type": "Identifier",
             "name": "metadata"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/base/ZkAssetBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../ACE/ACE.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../ACE/ACE.sol",
      "parts": [
       "../../ACE/ACE.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interfaces/IAZTEC.sol",
      "parts": [
       "../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interfaces/IZkAsset.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interfaces/IZkAsset.sol",
      "parts": [
       "../../interfaces/IZkAsset.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/LibEIP712.sol",
      "parts": [
       "../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/MetaDataUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/MetaDataUtils.sol",
      "parts": [
       "../../libs/MetaDataUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/ProofUtils.sol",
      "parts": [
       "../../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ZkAssetBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IZkAsset"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAZTEC"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "libraryName": "NoteUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_NAME",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_NAME"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "ZK_ASSET",
          "parts": [
           "ZK_ASSET"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "ZK_ASSET",
        "parts": [
         "ZK_ASSET"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "NOTE_SIGNATURE_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "NOTE_SIGNATURE_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "NoteSignature(",
              "parts": [
               "NoteSignature("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "bytes32 noteHash,",
              "parts": [
               "bytes32 noteHash,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address spender,",
              "parts": [
               "address spender,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "bool status",
              "parts": [
               "bool status"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "NoteSignature(",
            "parts": [
             "NoteSignature("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "bytes32 noteHash,",
            "parts": [
             "bytes32 noteHash,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address spender,",
            "parts": [
             "address spender,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "bool status",
            "parts": [
             "bool status"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "JOIN_SPLIT_SIGNATURE_TYPE_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "JOIN_SPLIT_SIGNATURE_TYPE_HASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "JoinSplitSignature(",
              "parts": [
               "JoinSplitSignature("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint24 proof,",
              "parts": [
               "uint24 proof,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "bytes32 noteHash,",
              "parts": [
               "bytes32 noteHash,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 challenge,",
              "parts": [
               "uint256 challenge,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address sender",
              "parts": [
               "address sender"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "JoinSplitSignature(",
            "parts": [
             "JoinSplitSignature("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint24 proof,",
            "parts": [
             "uint24 proof,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "bytes32 noteHash,",
            "parts": [
             "bytes32 noteHash,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 challenge,",
            "parts": [
             "uint256 challenge,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address sender",
            "parts": [
             "address sender"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ACE"
         },
         "name": "ace",
         "identifier": {
          "type": "Identifier",
          "name": "ace"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "linkedToken",
         "identifier": {
          "type": "Identifier",
          "name": "linkedToken"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "confidentialApproved",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialApproved"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "noteAccess",
         "identifier": {
          "type": "Identifier",
          "name": "noteAccess"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "canConvert",
            "identifier": {
             "type": "Identifier",
             "name": "canConvert"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "_linkedTokenAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0x0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ],
            "isArray": false
           },
           "trueExpression": {
            "type": "BooleanLiteral",
            "value": false
           },
           "falseExpression": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "EIP712_DOMAIN_HASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "EIP712_DOMAIN_NAME"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "EIP712_DOMAIN_VERSION"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "bytes32",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "this"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "ace"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ACE"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aceAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "linkedToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_linkedTokenAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "createNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_linkedTokenAddress"
            },
            {
             "type": "Identifier",
             "name": "_scalingFactor"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            },
            {
             "type": "Identifier",
             "name": "canConvert"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "CreateZkAsset"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_aceAddress"
            },
            {
             "type": "Identifier",
             "name": "_linkedTokenAddress"
            },
            {
             "type": "Identifier",
             "name": "_scalingFactor"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            },
            {
             "type": "Identifier",
             "name": "canConvert"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "JOIN_SPLIT_PROOF"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "confidentialTransferInternal"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            {
             "type": "Identifier",
             "name": "_signatures"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialApprove",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_status",
         "identifier": {
          "type": "Identifier",
          "name": "_status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getNote"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "only unspent notes can be approved",
             "parts": [
              "only unspent notes can be approved"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "_hashStruct",
            "identifier": {
             "type": "Identifier",
             "name": "_hashStruct"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encode"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "NOTE_SIGNATURE_TYPEHASH"
              },
              {
               "type": "Identifier",
               "name": "_noteHash"
              },
              {
               "type": "Identifier",
               "name": "_spender"
              },
              {
               "type": "Identifier",
               "name": "status"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_hashStruct"
            },
            {
             "type": "Identifier",
             "name": "_noteHash"
            },
            {
             "type": "Identifier",
             "name": "_signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "confidentialApproved"
             },
             "index": {
              "type": "Identifier",
              "name": "_noteHash"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "_spender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_status"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hashStruct",
         "identifier": {
          "type": "Identifier",
          "name": "_hashStruct"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "noteOwner",
            "identifier": {
             "type": "Identifier",
             "name": "noteOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getNote"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "signer",
            "identifier": {
             "type": "Identifier",
             "name": "signer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_signature"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "msgHash",
               "identifier": {
                "type": "Identifier",
                "name": "msgHash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "hashEIP712Message"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_hashStruct"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "signer"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "recoverSignature"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "msgHash"
                },
                {
                 "type": "Identifier",
                 "name": "_signature"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "signer"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "signer"
             },
             "right": {
              "type": "Identifier",
              "name": "noteOwner"
             }
            },
            {
             "type": "StringLiteral",
             "value": "the note owner did not sign this message",
             "parts": [
              "the note owner did not sign this message"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "extractSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_i",
         "identifier": {
          "type": "Identifier",
          "name": "_i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_signatures",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_i",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_signatures",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_i",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_signatures",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_i",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_signature"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encode"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "v"
             },
             {
              "type": "Identifier",
              "name": "r"
             },
             {
              "type": "Identifier",
              "name": "s"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "inputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "outputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "outputNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "publicOwner",
            "identifier": {
             "type": "Identifier",
             "name": "publicOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "publicValue",
            "identifier": {
             "type": "Identifier",
             "name": "publicValue"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "memberName": "getLength"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              null,
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "inputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "confidentialApproved"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "noteHash"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                },
                "right": {
                 "type": "BooleanLiteral",
                 "value": true
                }
               },
               {
                "type": "StringLiteral",
                "value": "sender does not have approval to spend input note",
                "parts": [
                 "sender does not have approval to spend input note"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "updateNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofOutput"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logInputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "inputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "logOutputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "outputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ConvertTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "publicOwner"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "UnaryOperation",
                  "operator": "-",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "publicValue"
                  },
                  "isPrefix": true
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RedeemTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "publicOwner"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "publicValue"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confidentialTransferInternal",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "proofOutputs"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signatures",
         "identifier": {
          "type": "Identifier",
          "name": "_signatures"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "_challenge",
            "identifier": {
             "type": "Identifier",
             "name": "_challenge"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_challenge"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_proofData",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "proofOutputs"
             },
             "memberName": "getLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "name": "proofOutput",
               "identifier": {
                "type": "Identifier",
                "name": "proofOutput"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "proofOutputs"
               },
               "memberName": "get"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "i"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ace"
               },
               "memberName": "updateNoteRegistry"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "JOIN_SPLIT_PROOF"
               },
               {
                "type": "Identifier",
                "name": "proofOutput"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "inputNotes",
               "identifier": {
                "type": "Identifier",
                "name": "inputNotes"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "outputNotes",
               "identifier": {
                "type": "Identifier",
                "name": "outputNotes"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "publicOwner",
               "identifier": {
                "type": "Identifier",
                "name": "publicOwner"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "publicValue",
               "identifier": {
                "type": "Identifier",
                "name": "publicValue"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "proofOutput"
               },
               "memberName": "extractProofOutput"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "inputNotes"
                },
                "memberName": "getLength"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "inputNotes"
                   },
                   "memberName": "getLength"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes",
                      "stateMutability": null
                     },
                     "name": "_signature",
                     "identifier": {
                      "type": "Identifier",
                      "name": "_signature"
                     },
                     "storageLocation": "memory",
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "extractSignature"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "_signatures"
                     },
                     {
                      "type": "Identifier",
                      "name": "j"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    null,
                    {
                     "type": "VariableDeclaration",
                     "name": "noteHash",
                     "identifier": {
                      "type": "Identifier",
                      "name": "noteHash"
                     },
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32",
                      "stateMutability": null
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    },
                    null
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "inputNotes"
                       },
                       "memberName": "get"
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "j"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "memberName": "extractNote"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bytes32",
                      "stateMutability": null
                     },
                     "name": "hashStruct",
                     "identifier": {
                      "type": "Identifier",
                      "name": "hashStruct"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "keccak256"
                    },
                    "arguments": [
                     {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "abi"
                       },
                       "memberName": "encode"
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "JOIN_SPLIT_SIGNATURE_TYPE_HASH"
                       },
                       {
                        "type": "Identifier",
                        "name": "JOIN_SPLIT_PROOF"
                       },
                       {
                        "type": "Identifier",
                        "name": "noteHash"
                       },
                       {
                        "type": "Identifier",
                        "name": "_challenge"
                       },
                       {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "msg"
                        },
                        "memberName": "sender"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "validateSignature"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "hashStruct"
                     },
                     {
                      "type": "Identifier",
                      "name": "noteHash"
                     },
                     {
                      "type": "Identifier",
                      "name": "_signature"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "logInputNotes"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "inputNotes"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "logOutputNotes"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "outputNotes"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "publicValue"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "ConvertTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "publicOwner"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "UnaryOperation",
                     "operator": "-",
                     "subExpression": {
                      "type": "Identifier",
                      "name": "publicValue"
                     },
                     "isPrefix": true
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "publicValue"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "RedeemTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "publicOwner"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "publicValue"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateNoteMetaData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "metaData",
         "identifier": {
          "type": "Identifier",
          "name": "metaData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "noteOwner",
            "identifier": {
             "type": "Identifier",
             "name": "noteOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ace"
            },
            "memberName": "getNote"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "only unspent notes can be approved",
             "parts": [
              "only unspent notes can be approved"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "noteAccess"
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "noteHash"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "noteOwner"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "caller does not have permission to update metaData",
             "parts": [
              "caller does not have permission to update metaData"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "addressToApprove",
            "identifier": {
             "type": "Identifier",
             "name": "addressToApprove"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MetaDataUtils"
            },
            "memberName": "extractAddresses"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "noteAccess"
            },
            "index": {
             "type": "Identifier",
             "name": "addressToApprove"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "noteHash"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ApprovedAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "addressToApprove"
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UpdateNoteMetaData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "noteOwner"
            },
            {
             "type": "Identifier",
             "name": "noteHash"
            },
            {
             "type": "Identifier",
             "name": "metaData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "logInputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "inputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "inputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "inputNotes"
             },
             "memberName": "getLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "noteOwner",
               "identifier": {
                "type": "Identifier",
                "name": "noteOwner"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "metadata",
               "identifier": {
                "type": "Identifier",
                "name": "metadata"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "inputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "DestroyNote"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "noteOwner"
               },
               {
                "type": "Identifier",
                "name": "noteHash"
               },
               {
                "type": "Identifier",
                "name": "metadata"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "logOutputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "outputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "outputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "outputNotes"
             },
             "memberName": "getLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "noteOwner",
               "identifier": {
                "type": "Identifier",
                "name": "noteOwner"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "metadata",
               "identifier": {
                "type": "Identifier",
                "name": "metadata"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "outputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "CreateNote"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "noteOwner"
               },
               {
                "type": "Identifier",
                "name": "noteHash"
               },
               {
                "type": "Identifier",
                "name": "metadata"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/ACEOwner.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../MultiSig/MultiSigWalletWithTimeLock.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../MultiSig/MultiSigWalletWithTimeLock.sol",
      "parts": [
       "../MultiSig/MultiSigWalletWithTimeLock.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ACEOwner",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MultiSigWalletWithTimeLock"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_owners",
         "identifier": {
          "type": "Identifier",
          "name": "_owners"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_required",
         "identifier": {
          "type": "Identifier",
          "name": "_required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_secondsTimeLocked",
         "identifier": {
          "type": "Identifier",
          "name": "_secondsTimeLocked"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "MultiSigWalletWithTimeLock",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_owners"
          },
          {
           "type": "Identifier",
           "name": "_required"
          },
          {
           "type": "Identifier",
           "name": "_secondsTimeLocked"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "emergencyExecuteInvalidateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transactionId",
         "identifier": {
          "type": "Identifier",
          "name": "transactionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Transaction"
            },
            "name": "txn",
            "identifier": {
             "type": "Identifier",
             "name": "txn"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "transactions"
           },
           "index": {
            "type": "Identifier",
            "name": "transactionId"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "txData",
            "identifier": {
             "type": "Identifier",
             "name": "txData"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "txn"
           },
           "memberName": "data"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "eq",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "224"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "txData",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xcaaaa5d8"
               }
              ]
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "revert",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "txn"
            },
            "memberName": "executed"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "external_call"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "destination"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "txn"
              },
              "memberName": "data"
             },
             "memberName": "length"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "txn"
             },
             "memberName": "data"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Execution"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ExecutionFailure"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "transactionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "txn"
               },
               "memberName": "executed"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": false
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "notExecuted",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "fullyConfirmed",
         "arguments": [
          {
           "type": "Identifier",
           "name": "transactionId"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/ACE.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./noteRegistry/NoteRegistryManager.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./noteRegistry/NoteRegistryManager.sol",
      "parts": [
       "./noteRegistry/NoteRegistryManager.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAZTEC.sol",
      "parts": [
       "../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/NoteUtils.sol",
      "parts": [
       "../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/ProofUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/ProofUtils.sol",
      "parts": [
       "../libs/ProofUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/VersioningUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/VersioningUtils.sol",
      "parts": [
       "../libs/VersioningUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../libs/SafeMath8.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../libs/SafeMath8.sol",
      "parts": [
       "../libs/SafeMath8.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ACE",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAZTEC"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "NoteRegistryManager"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "libraryName": "NoteUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint24",
        "stateMutability": null
       },
       "libraryName": "ProofUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint8",
        "stateMutability": null
       },
       "libraryName": "SafeMath8",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "SetCommonReferenceString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": "_commonReferenceString",
         "identifier": {
          "type": "Identifier",
          "name": "_commonReferenceString"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SetProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "epoch",
         "identifier": {
          "type": "Identifier",
          "name": "epoch"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "category",
         "identifier": {
          "type": "Identifier",
          "name": "category"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "id",
         "identifier": {
          "type": "Identifier",
          "name": "id"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "validatorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "validatorAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "IncrementLatestEpoch",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "newLatestEpoch",
         "identifier": {
          "type": "Identifier",
          "name": "newLatestEpoch"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": "commonReferenceString",
         "identifier": {
          "type": "Identifier",
          "name": "commonReferenceString"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ArrayTypeName",
            "baseTypeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "length": {
             "type": "NumberLiteral",
             "number": "0x100",
             "subdenomination": null
            }
           },
           "length": {
            "type": "NumberLiteral",
            "number": "0x100",
            "subdenomination": null
           }
          },
          "length": {
           "type": "NumberLiteral",
           "number": "0x10000",
           "subdenomination": null
          }
         },
         "name": "validators",
         "identifier": {
          "type": "Identifier",
          "name": "validators"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ArrayTypeName",
            "baseTypeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "length": {
             "type": "NumberLiteral",
             "number": "0x100",
             "subdenomination": null
            }
           },
           "length": {
            "type": "NumberLiteral",
            "number": "0x100",
            "subdenomination": null
           }
          },
          "length": {
           "type": "NumberLiteral",
           "number": "0x10000",
           "subdenomination": null
          }
         },
         "name": "disabledValidators",
         "identifier": {
          "type": "Identifier",
          "name": "disabledValidators"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "latestEpoch",
         "identifier": {
          "type": "Identifier",
          "name": "latestEpoch"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Ownable",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proofSender",
         "identifier": {
          "type": "Identifier",
          "name": "_proofSender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist for the given address",
             "parts": [
              "note registry does not exist for the given address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "category",
            "identifier": {
             "type": "Identifier",
             "name": "category"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "category"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "ProofCategory"
                },
                "memberName": "MINT"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "this is not a mint proof",
             "parts": [
              "this is not a mint proof"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "_proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "_proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "this"
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofSender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_proofOutputs"
               },
               "memberName": "getLength"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "call to validateProof failed",
             "parts": [
              "call to validateProof failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "behaviour"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proofOutputs"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "_proofOutputs"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofData",
         "identifier": {
          "type": "Identifier",
          "name": "_proofData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proofSender",
         "identifier": {
          "type": "Identifier",
          "name": "_proofSender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist for the given address",
             "parts": [
              "note registry does not exist for the given address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "category",
            "identifier": {
             "type": "Identifier",
             "name": "category"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "category"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "ProofCategory"
                },
                "memberName": "BURN"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "this is not a burn proof",
             "parts": [
              "this is not a burn proof"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "_proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "_proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "this"
            },
            "memberName": "validateProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofSender"
            },
            {
             "type": "Identifier",
             "name": "_proofData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_proofOutputs"
               },
               "memberName": "getLength"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "call to validateProof failed",
             "parts": [
              "call to validateProof failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "behaviour"
            },
            "memberName": "burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proofOutputs"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_proofOutputs"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_proof"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected the proof to be valid",
             "parts": [
              "expected the proof to be valid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "validatorAddress",
            "identifier": {
             "type": "Identifier",
             "name": "validatorAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getValidatorAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "proofOutputs",
            "identifier": {
             "type": "Identifier",
             "name": "proofOutputs"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "proofDataLocation"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x04"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x44"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "memPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x04"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x100"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x24"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "_sender",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x44"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "commonReferenceString_slot",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x64"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "commonReferenceString_slot",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x84"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x02"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "commonReferenceString_slot",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xa4"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x03"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "commonReferenceString_slot",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xc4"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x04"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "commonReferenceString_slot",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xe4"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x05"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "commonReferenceString_slot",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "destination"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "memPtr",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x104"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "proofDataSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "proofDataLocation",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "destination",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "proofDataLocation",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "proofDataSize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "callSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "proofDataSize",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x104"
               }
              ]
             }
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "staticcall",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "validatorAddress",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "memPtr",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "callSize",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x00"
               }
              ]
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "400"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "revert",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "returndatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "memPtr",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "AssemblyCall",
               "functionName": "returndatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "returndatasize",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "proofOutputs"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "memPtr",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "memPtr",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": ">>",
                 "left": {
                  "type": "Identifier",
                  "name": "_proof"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "8",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xff",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ProofCategory"
              },
              "memberName": "BALANCED"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "length",
               "identifier": {
                "type": "Identifier",
                "name": "length"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "proofOutputs"
               },
               "memberName": "getLength"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "name": "proofHash",
                  "identifier": {
                   "type": "Identifier",
                   "name": "proofHash"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "keccak256"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "proofOutputs"
                    },
                    "memberName": "get"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "name": "validatedProofHash",
                  "identifier": {
                   "type": "Identifier",
                   "name": "validatedProofHash"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "keccak256"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "abi"
                    },
                    "memberName": "encode"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "proofHash"
                    },
                    {
                     "type": "Identifier",
                     "name": "_proof"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "msg"
                     },
                     "memberName": "sender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "validatedProofs"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "validatedProofHash"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "proofOutputs"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "clearProofByHashes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_proofHashes",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHashes"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_proofHashes"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "proofHash",
               "identifier": {
                "type": "Identifier",
                "name": "proofHash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_proofHashes"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "proofHash"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes32",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "expected no empty proof hash",
                "parts": [
                 "expected no empty proof hash"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "validatedProofHash",
               "identifier": {
                "type": "Identifier",
                "name": "validatedProofHash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encode"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "proofHash"
                 },
                 {
                  "type": "Identifier",
                  "name": "_proof"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "validatedProofs"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "validatedProofHash"
                 }
                },
                "right": {
                 "type": "BooleanLiteral",
                 "value": true
                }
               },
               {
                "type": "StringLiteral",
                "value": "can only clear previously validated proofs",
                "parts": [
                 "can only clear previously validated proofs"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "validatedProofs"
               },
               "index": {
                "type": "Identifier",
                "name": "validatedProofHash"
               }
              },
              "right": {
               "type": "BooleanLiteral",
               "value": false
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCommonReferenceString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": "_commonReferenceString",
         "identifier": {
          "type": "Identifier",
          "name": "_commonReferenceString"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isOwner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "only the owner can set the common reference string",
             "parts": [
              "only the owner can set the common reference string"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "commonReferenceString"
           },
           "right": {
            "type": "Identifier",
            "name": "_commonReferenceString"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SetCommonReferenceString"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_commonReferenceString"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "invalidateProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isOwner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "only the owner can invalidate a proof",
             "parts": [
              "only the owner can invalidate a proof"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "epoch",
            "identifier": {
             "type": "Identifier",
             "name": "epoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "category",
            "identifier": {
             "type": "Identifier",
             "name": "category"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "id",
            "identifier": {
             "type": "Identifier",
             "name": "id"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "validators"
                },
                "index": {
                 "type": "Identifier",
                 "name": "epoch"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "category"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "id"
              }
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "can only invalidate proofs that exist",
             "parts": [
              "can only invalidate proofs that exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "disabledValidators"
              },
              "index": {
               "type": "Identifier",
               "name": "epoch"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "category"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "id"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProofByHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_proofHash",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "validatedProofHash",
            "identifier": {
             "type": "Identifier",
             "name": "validatedProofHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "isValidatorDisabled",
            "identifier": {
             "type": "Identifier",
             "name": "isValidatorDisabled"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "isValidatorDisabled"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shl",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x03"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "and",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proof",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x1f"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "sload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "5"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "_proof",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "disabledValidators_slot",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "memPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "AssemblyCall",
               "functionName": "_proofHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "_proof",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "AssemblyCall",
               "functionName": "_sender",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "validatedProofHash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x60"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "AssemblyCall",
               "functionName": "memPtr",
               "arguments": []
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "isValidatorDisabled"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "proof id has been invalidated",
             "parts": [
              "proof id has been invalidated"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "validatedProofs"
           },
           "index": {
            "type": "Identifier",
            "name": "validatedProofHash"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_validatorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isOwner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "only the owner can set a proof",
             "parts": [
              "only the owner can set a proof"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_validatorAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected the validator address to exist",
             "parts": [
              "expected the validator address to exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "epoch",
            "identifier": {
             "type": "Identifier",
             "name": "epoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "category",
            "identifier": {
             "type": "Identifier",
             "name": "category"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "id",
            "identifier": {
             "type": "Identifier",
             "name": "id"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_proof"
            },
            "memberName": "getProofComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "epoch"
             },
             "right": {
              "type": "Identifier",
              "name": "latestEpoch"
             }
            },
            {
             "type": "StringLiteral",
             "value": "the proof epoch cannot be bigger than the latest epoch",
             "parts": [
              "the proof epoch cannot be bigger than the latest epoch"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "validators"
                },
                "index": {
                 "type": "Identifier",
                 "name": "epoch"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "category"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "id"
              }
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "existing proofs cannot be modified",
             "parts": [
              "existing proofs cannot be modified"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "validators"
              },
              "index": {
               "type": "Identifier",
               "name": "epoch"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "category"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "id"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_validatorAddress"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SetProof"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "epoch"
            },
            {
             "type": "Identifier",
             "name": "category"
            },
            {
             "type": "Identifier",
             "name": "id"
            },
            {
             "type": "Identifier",
             "name": "_validatorAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementLatestEpoch",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isOwner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "only the owner can update the latest epoch",
             "parts": [
              "only the owner can update the latest epoch"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "latestEpoch"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "latestEpoch"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IncrementLatestEpoch"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "latestEpoch"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCommonReferenceString",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "6",
           "subdenomination": null
          }
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "commonReferenceString"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getValidatorAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "validatorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "validatorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "isValidatorDisabled",
            "identifier": {
             "type": "Identifier",
             "name": "isValidatorDisabled"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "queryInvalid",
            "identifier": {
             "type": "Identifier",
             "name": "queryInvalid"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "validatorAddress"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_proof",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "validators_slot",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "isValidatorDisabled"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shl",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x03"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "and",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_proof",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x1f"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "sload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "5"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "_proof",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "disabledValidators_slot",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "queryInvalid"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "or",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "iszero",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "validatorAddress",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "isValidatorDisabled",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "queryInvalid"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "validatorAddress"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "expected the validator address to exist",
                "parts": [
                 "expected the validator address to exist"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "Identifier",
                 "name": "isValidatorDisabled"
                },
                "right": {
                 "type": "BooleanLiteral",
                 "value": false
                }
               },
               {
                "type": "StringLiteral",
                "value": "expected the validator address to not be disabled",
                "parts": [
                 "expected the validator address to not be disabled"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "SwapABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x144"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "noteOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x164"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "and",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "eq",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x02"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "metadataPtr",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "eq",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x04"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteOwners",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x02"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "HexNumber",
               "value": "0x200"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x260"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2a0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2c0"
              },
              {
               "type": "HexNumber",
               "value": "0x120"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2e0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x300"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x320"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x340"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x360"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "noteOwners",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x380"
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3a0"
              },
              {
               "type": "HexNumber",
               "value": "0x40"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3c0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x420"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x440"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x1e0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x480"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4a0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "noteOwners",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x40"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4c0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "metadataPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataIndex",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x40"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x500"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x520"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x540"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataIndex",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "metadataPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "metadataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x460"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x400"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x120"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x320"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x3c0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "proofPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x540"
               },
               {
                "type": "AssemblyCall",
                "functionName": "metadataLength",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x200"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x80"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0xe0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xe0"
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x120"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xe0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x100"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x2a0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x120"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x140"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x160"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "noteOwners",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x180"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x1a0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x40"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x1c0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x1e0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x220"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x240"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x120"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x280"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x2a0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "noteOwners",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x2c0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataPtr",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataIndex",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x2e0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x40"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x300"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x320"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x340"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataIndex",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "metadataPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "metadataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x260"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x200"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x120"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "proofPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x320"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x3c0"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "metadataLength",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x200"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/Swap.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./SwapABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./SwapABIEncoder.sol",
      "parts": [
       "./SwapABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Swap",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validateSwap",
             "arguments": []
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateSwap",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notes",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x04"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x124"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x300"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": null
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "1"
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sub",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "noteIndex",
                             "arguments": []
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x180"
                            }
                           ]
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "noteIndex",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2e0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2e0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x300"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x300"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "SwapABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "PublicRangeABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x164"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "2"
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "m"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "1"
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "outputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1a4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x260"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "HexNumber",
              "value": "0x2a0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "m",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x2e0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "m",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputOwners",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x60"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0xa0"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0xe0"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "s",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "n",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "n",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadata",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "m",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadata",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataIndex",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "outputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "m",
                          "arguments": []
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "metadata",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataLength",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "m",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "s",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notesLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x2a0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x100"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x140"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./PublicRangeABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./PublicRangeABIEncoder.sol",
      "parts": [
       "./PublicRangeABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/PublicRangeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/PublicRangeInterface.sol",
      "parts": [
       "../../../interfaces/PublicRangeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "PublicRange",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validatePublicRange",
             "arguments": []
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePublicRange",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x164"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "2"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "m"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "1"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x124"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "publicComparison"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x300"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "publicComparison",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x320"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x340"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x360"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": null
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "calldataload",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "sub",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "noteIndex",
                               "arguments": []
                              },
                              {
                               "type": "HexNumber",
                               "value": "0xc0"
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "sub",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gen_order",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "c",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "publicComparison",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "noteIndex",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "x"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "HexNumber",
                           "value": "0x00"
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "k"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "k",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "a"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "a",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "c"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "challenge",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "c",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x220"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x220"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x260"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x1a0"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x1e0"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "validatePairing",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x84"
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2e0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2e0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePairing",
             "arguments": [
              {
               "type": "Identifier",
               "name": "t2"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "t2",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "or",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "or",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "or",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "or",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "or",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_1",
                                 "arguments": []
                                }
                               ]
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_2",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iszero",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "t2_y_1",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iszero",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "t2_y_2",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "t2_x_1",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "t2_x_2",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "eq",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "t2_y_1",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2_y_2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x1e0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x200"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xe0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x280"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x120"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x180"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x160"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "staticcall",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x360"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x360"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "PublicRangeABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "PrivateRangeABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x144"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "3"
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "m"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "2"
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x164"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "outputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1a4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "kPublic"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x260"
              },
              {
               "type": "AssemblyCall",
               "functionName": "kPublic",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "HexNumber",
              "value": "0x2a0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "m",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x2e0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "m",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x60"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0xa0"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0xe0"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "s",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "n",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "n",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadata",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "m",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadata",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataIndex",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "outputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "m",
                          "arguments": []
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "metadata",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataLength",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "m",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "s",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notesLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x2a0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x100"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x140"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/privateRange/PrivateRange.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/PrivateRangeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/PrivateRangeInterface.sol",
      "parts": [
       "../../../interfaces/PrivateRangeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./PrivateRangeABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./PrivateRangeABIEncoder.sol",
      "parts": [
       "./PrivateRangeABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "PrivateRange",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validatePrivateRange",
             "arguments": []
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePrivateRange",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "m"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "2"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "3"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x124"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2a0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2c0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x300"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "noteIndex",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "1"
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "calldataload",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "sub",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "noteIndex",
                               "arguments": []
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x180"
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sub",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "calldataload",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sub",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "noteIndex",
                                 "arguments": []
                                },
                                {
                                 "type": "HexNumber",
                                 "value": "0xc0"
                                }
                               ]
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "noteIndex",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "i",
                    "arguments": []
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyLocalDefinition",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "x"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "HexNumber",
                           "value": "0x00"
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "k"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "k",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "a"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "a",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "c"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mulmod",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "challenge",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "x",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gen_order",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "keccak256",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x00"
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x260"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x280"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x1e0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0xe0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x200"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x100"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "c",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "and",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "staticcall",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gas",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "6"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x1a0"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x80"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x1e0"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x40"
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "staticcall",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gas",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "6"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x220"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x80"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x260"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x40"
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "staticcall",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "gas",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "7"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x60"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x220"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x40"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "validatePairing",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x84"
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2a0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2a0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePairing",
             "arguments": [
              {
               "type": "Identifier",
               "name": "t2"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "t2",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "or",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "or",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "or",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "or",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "or",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_1",
                                 "arguments": []
                                }
                               ]
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_2",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iszero",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "t2_y_1",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iszero",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "t2_y_2",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "t2_x_1",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "t2_x_2",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "eq",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "t2_y_1",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2_y_2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x1e0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x200"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xe0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x280"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x120"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x180"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x160"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "staticcall",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x300"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x300"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "PrivateRangeABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitFluidABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x144"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "notes",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x164"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "outputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1a4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x02"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x260"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2a0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2e0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x300"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "metadata",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x120"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x320"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x340"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x360"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "outputOwners",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x380"
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3a0"
              },
              {
               "type": "HexNumber",
               "value": "0x40"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3c0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "255"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x3e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "255"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "HexNumber",
               "value": "0x200"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x2c0"
              },
              {
               "type": "HexNumber",
               "value": "0x120"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataIndex",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadata",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x400"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x120"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x420"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x440"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notes",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x80"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x460"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x480"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4a0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputOwners",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4c0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x4e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x40"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x500"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "255"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x520"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "255"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x01"
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x540"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataIndex",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "metadata",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "metadataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x440"
                },
                {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "startOfProofOutput"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x540"
               },
               {
                "type": "AssemblyCall",
                "functionName": "metadataLength",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x320"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x3c0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "metadataLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "startOfProofOutput",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x100"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x80"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "keccak256",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x20"
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xe0"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notesPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x100"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "notesPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "n",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "2"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "n",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "2"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x02"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "n",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadata",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x01"
                        }
                       ]
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadata",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataIndex",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "notes",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xc0"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "outputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x01"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shl",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "255"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shl",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "255"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "metadata",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataLength",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "notesPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "notesPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "s",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "notesPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "notesPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "proofOutputLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "startOfProofOutput",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "startOfProofOutput",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "proofOutputLength",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x1a0"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "s",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x160"
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluid.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./JoinSplitFluidABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./JoinSplitFluidABIEncoder.sol",
      "parts": [
       "./JoinSplitFluidABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/JoinSplitFluidInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/JoinSplitFluidInterface.sol",
      "parts": [
       "../../../interfaces/JoinSplitFluidInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../libs/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../libs/LibEIP712.sol",
      "parts": [
       "../../../libs/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitFluid",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validateJoinSplitFluid",
             "arguments": []
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateJoinSplitFluid",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "m"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "1"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notes",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x124"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "gt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "m",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "eq",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "m",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "kn"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2a0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2c0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x300"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": null
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "kn",
                         "arguments": []
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "noteIndex",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "kn"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "kn",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sub",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyLocalDefinition",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "x"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mload",
                           "arguments": [
                            {
                             "type": "HexNumber",
                             "value": "0x00"
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "a"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "c"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "challenge",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mstore",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x00"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "keccak256",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x00"
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x20"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "kn"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "kn",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x260"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x280"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x1e0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0xe0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x200"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x100"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "c",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "7"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x20"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x60"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x220"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "6"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x220"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x80"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x260"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "6"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1a0"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x80"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1e0"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "m",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "validatePairing",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x84"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2a0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2a0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePairing",
             "arguments": [
              {
               "type": "Identifier",
               "name": "t2"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "t2",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "or",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "or",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "or",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "or",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "or",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_1",
                                 "arguments": []
                                }
                               ]
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_2",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iszero",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "t2_y_1",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iszero",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "t2_y_2",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "t2_x_1",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "t2_x_2",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "eq",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "t2_y_1",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2_y_2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x1e0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x200"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xe0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x280"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x120"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x180"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x160"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "staticcall",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x300"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x300"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "JoinSplitFluidABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplitABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "notes",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "m"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1a4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "outputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1e4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x164"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "kPublic"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "notes",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "calldataload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xc0"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "gt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "kPublic",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "10944121435919637611123202872628637544274182200208017171849102093287904247808"
               }
              ]
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "kPublic",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "1"
               },
               "default": false
              },
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "kPublic",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x144"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "HexNumber",
              "value": "0x2a0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "m",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x2e0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "m",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10101"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x60"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0xa0"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0xe0"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "s",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "n",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "n",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadata",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "m",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadata",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataIndex",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "outputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "m",
                          "arguments": []
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "metadata",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataLength",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "m",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "s",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notesLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x2a0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x100"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x140"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./JoinSplitABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./JoinSplitABIEncoder.sol",
      "parts": [
       "./JoinSplitABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/JoinSplitInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/JoinSplitInterface.sol",
      "parts": [
       "../../../interfaces/JoinSplitInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "JoinSplit",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validateJoinSplit",
             "arguments": []
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateJoinSplit",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x184"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "m"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x124"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notes",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "gt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "m",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "kn"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sub",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "notes",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "notes",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "HexNumber",
                         "value": "0xc0"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2a0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2c0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "kn",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x300"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x164"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "kn"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mulmod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sub",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "gen_order",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "kn",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "challenge",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x320"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "noteIndex",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "kn",
                         "arguments": []
                        }
                       },
                       {
                        "type": "AssemblySwitch",
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "m",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "n",
                           "arguments": []
                          }
                         ]
                        },
                        "cases": [
                         {
                          "type": "AssemblyCase",
                          "block": {
                           "type": "AssemblyBlock",
                           "operations": [
                            {
                             "type": "AssemblyAssignment",
                             "names": [
                              {
                               "type": "Identifier",
                               "name": "k"
                              }
                             ],
                             "expression": {
                              "type": "AssemblyCall",
                              "functionName": "sub",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "gen_order",
                                "arguments": []
                               },
                               {
                                "type": "AssemblyCall",
                                "functionName": "k",
                                "arguments": []
                               }
                              ]
                             }
                            }
                           ]
                          },
                          "value": {
                           "type": "DecimalNumber",
                           "value": "1"
                          },
                          "default": false
                         }
                        ]
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "kn"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "kn",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sub",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyLocalDefinition",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "x"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "HexNumber",
                           "value": "0x00"
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "a"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "c"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "challenge",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "x",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mstore",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x00"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "keccak256",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x00"
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x20"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "kn"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "kn",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x260"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x280"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x1e0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0xe0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x200"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x100"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "c",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "and",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "and",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "staticcall",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gas",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "6"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x1a0"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x80"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x1e0"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x40"
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "staticcall",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gas",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "6"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x220"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x80"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x260"
                              },
                              {
                               "type": "HexNumber",
                               "value": "0x40"
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "staticcall",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "gas",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "7"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x60"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x220"
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x40"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "m",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "validatePairing",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x84"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2a0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2a0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePairing",
             "arguments": [
              {
               "type": "Identifier",
               "name": "t2"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "t2",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "or",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "or",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "or",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "or",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "or",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_1",
                                 "arguments": []
                                }
                               ]
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_2",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iszero",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "t2_y_1",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iszero",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "t2_y_2",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "t2_x_1",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "t2_x_2",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "eq",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "t2_y_1",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2_y_2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x1e0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x200"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xe0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x280"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x120"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x180"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x160"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "staticcall",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x320"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x320"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "JoinSplitABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/dividend/DividendABIEncoder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "DividendABIEncoder",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeAndExit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notes"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x104"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x184"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "notes",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "m"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "1"
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1a4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "outputOwners"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x124"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "metadata"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x144"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1e4"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1a0"
              },
              {
               "type": "HexNumber",
               "value": "0x01"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c0"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x200"
              },
              {
               "type": "HexNumber",
               "value": "0xc0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x240"
              },
              {
               "type": "HexNumber",
               "value": "0x00"
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "kPublic"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x260"
              },
              {
               "type": "AssemblyCall",
               "functionName": "kPublic",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x280"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x124"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "HexNumber",
              "value": "0x2a0"
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "m",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x2e0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "m",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "m",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputOwners",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0x60"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "calldataload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "noteIndex",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0xa0"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0xe0"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x220"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xc0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "inputPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "s",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "inputPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "n",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "m",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "m",
                 "arguments": []
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "n",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x01"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "noteIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "notes",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadata",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "m",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "metadataLength"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "metadata",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "metadataIndex",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "noteIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "s",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x01"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "outputOwners",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "m",
                          "arguments": []
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x00"
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x80"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataLength",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x01"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatacopy",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "metadataIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "metadata",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "metadataLength",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "inputPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "sub",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "m",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "s",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "inputPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "s",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "inputPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "s",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "inputPtr",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "notesLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "s",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x2a0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1e0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x180"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x100"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "HexNumber",
               "value": "0x20"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "return",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x160"
              },
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x140"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "notesLength",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/dividend/Dividend.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "./DividendABIEncoder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./DividendABIEncoder.sol",
      "parts": [
       "./DividendABIEncoder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/DividendInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/DividendInterface.sol",
      "parts": [
       "../../../interfaces/DividendInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Dividend",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "validateDividend",
             "arguments": []
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x40"
              },
              {
               "type": "HexNumber",
               "value": "0x60"
              }
             ]
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateDividend",
             "arguments": [],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x44"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x64"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "notes"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x184"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "n"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "notes",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "challenge"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x124"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "za"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x144"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "zb"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x164"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "gt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "za",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1048576"
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "gt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "zb",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1048576"
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2a0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x24"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2c0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "za",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x2e0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "zb",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "hashCommitments",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notes",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "n",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "b"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x300"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "3"
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "noteIndex"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mul",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "i",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xc0"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": null
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "noteIndex",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "challenge",
                    "arguments": []
                   }
                  },
                  {
                   "type": "AssemblySwitch",
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "1"
                     }
                    ]
                   },
                   "cases": [
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "calldataload",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sub",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "noteIndex",
                                 "arguments": []
                                },
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "add",
                                 "arguments": [
                                  {
                                   "type": "HexNumber",
                                   "value": "0xc0"
                                  },
                                  {
                                   "type": "HexNumber",
                                   "value": "0xc0"
                                  }
                                 ]
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "zb",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "sub",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gen_order",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "calldataload",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "sub",
                                 "arguments": [
                                  {
                                   "type": "AssemblyCall",
                                   "functionName": "noteIndex",
                                   "arguments": []
                                  },
                                  {
                                   "type": "HexNumber",
                                   "value": "0xc0"
                                  }
                                 ]
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "za",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gen_order",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "1"
                     },
                     "default": false
                    },
                    {
                     "type": "AssemblyCase",
                     "block": {
                      "type": "AssemblyBlock",
                      "operations": [
                       {
                        "type": "AssemblyAssignment",
                        "names": [
                         {
                          "type": "Identifier",
                          "name": "k"
                         }
                        ],
                        "expression": {
                         "type": "AssemblyCall",
                         "functionName": "calldataload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "noteIndex",
                           "arguments": []
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "value": {
                      "type": "DecimalNumber",
                      "value": "0"
                     },
                     "default": false
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "validateCommitment",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "gen_order",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "k"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "k",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "x",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "gen_order",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "a",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "x",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "gen_order",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "c"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "challenge",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "x",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "gen_order",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "keccak256",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x00"
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xe0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x80"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "noteIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x40"
                      }
                     ]
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x120"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "gen_order",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "c",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "k",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xc0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "a",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "staticcall",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "gas",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "7"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0xe0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x1a0"
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "7"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x120"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "and",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "staticcall",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "gas",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "6"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x160"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x80"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "b",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x40"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x260"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x280"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x40"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x1e0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0xe0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x200"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "sub",
                        "arguments": [
                         {
                          "type": "HexNumber",
                          "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "HexNumber",
                            "value": "0x100"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "0"
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "c",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "7"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x20"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x60"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x220"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "6"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x220"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x80"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x260"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "result"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "result",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "staticcall",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gas",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "6"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1a0"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x80"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1e0"
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x40"
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "result",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "400"
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x00"
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x20"
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "b"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "b",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "validatePairing",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x84"
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "expected"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "keccak256",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x2a0"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "b",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x2a0"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gen_order",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "expected",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "challenge",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "404"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validatePairing",
             "arguments": [
              {
               "type": "Identifier",
               "name": "t2"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "t2",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_x_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "t2_y_2"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "or",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "or",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "or",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "or",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "or",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "or",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_1",
                                 "arguments": []
                                }
                               ]
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "iszero",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "t2_x_2",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iszero",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "t2_y_1",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iszero",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "t2_y_2",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "t2_x_1",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "t2_x_2",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "eq",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "t2_y_1",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "eq",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "t2_y_2",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x1e0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x200"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xc0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xa0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xe0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x100"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x280"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x140"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x120"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_x_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x180"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_1",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x160"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "t2_y_2",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "staticcall",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x180"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "iszero",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "validateCommitment",
             "arguments": [
              {
               "type": "Identifier",
               "name": "note"
              },
              {
               "type": "Identifier",
               "name": "k"
              },
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gen_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "field_order"
                 }
                ],
                "expression": {
                 "type": "HexNumber",
                 "value": "0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47"
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "gammaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x60"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaX"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "sigmaY"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "calldataload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "note",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xa0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "a",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "a",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "and",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "k",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gen_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "gt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "k",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "1"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "sigmaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "sigmaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sigmaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "eq",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "addmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "mulmod",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mulmod",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "gammaX",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "field_order",
                               "arguments": []
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "gammaX",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "field_order",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "3"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mulmod",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "gammaY",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "field_order",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "400"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0x00"
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyFunctionDefinition",
             "name": "hashCommitments",
             "arguments": [
              {
               "type": "Identifier",
               "name": "notes"
              },
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "returnArguments": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyFor",
                "pre": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "DecimalNumber",
                    "value": "0"
                   }
                  }
                 ]
                },
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "lt",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "n",
                   "arguments": []
                  }
                 ]
                },
                "post": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x01"
                     }
                    ]
                   }
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "index"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "notes",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "i",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0xc0"
                         }
                        ]
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldatacopy",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "HexNumber",
                       "value": "0x300"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x80"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "index",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x80"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x300"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "n",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "DividendABIEncoder"
            },
            "memberName": "encodeAndExit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/NoteRegistryManager.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interfaces/IAZTEC.sol",
      "parts": [
       "../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../libs/VersioningUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../libs/VersioningUtils.sol",
      "parts": [
       "../../libs/VersioningUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/NoteRegistryBehaviour.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/NoteRegistryBehaviour.sol",
      "parts": [
       "./interfaces/NoteRegistryBehaviour.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/NoteRegistryFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/NoteRegistryFactory.sol",
      "parts": [
       "./interfaces/NoteRegistryFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./proxies/AdminUpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./proxies/AdminUpgradeabilityProxy.sol",
      "parts": [
       "./proxies/AdminUpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "NoteRegistryManager",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAZTEC"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint24",
        "stateMutability": null
       },
       "libraryName": "VersioningUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "SetFactory",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "epoch",
         "identifier": {
          "type": "Identifier",
          "name": "epoch"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "cryptoSystem",
         "identifier": {
          "type": "Identifier",
          "name": "cryptoSystem"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "assetType",
         "identifier": {
          "type": "Identifier",
          "name": "assetType"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "factoryAddress",
         "identifier": {
          "type": "Identifier",
          "name": "factoryAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CreateNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "registryOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "registryAddress",
         "identifier": {
          "type": "Identifier",
          "name": "registryAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "linkedTokenAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "canAdjustSupply"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "canConvert"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UpgradeNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "registryOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "proxyAddress",
         "identifier": {
          "type": "Identifier",
          "name": "proxyAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newBehaviourAddress",
         "identifier": {
          "type": "Identifier",
          "name": "newBehaviourAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StructDefinition",
       "name": "NoteRegistry",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "NoteRegistryBehaviour"
         },
         "name": "behaviour",
         "identifier": {
          "type": "Identifier",
          "name": "behaviour"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "linkedToken",
         "identifier": {
          "type": "Identifier",
          "name": "linkedToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "latestFactory",
         "identifier": {
          "type": "Identifier",
          "name": "latestFactory"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupplemented",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupplemented"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "bytes32",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "publicApprovals",
         "identifier": {
          "type": "Identifier",
          "name": "publicApprovals"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "NoteRegistry"
          },
          "valueName": null
         },
         "name": "registries",
         "identifier": {
          "type": "Identifier",
          "name": "registries"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ArrayTypeName",
            "baseTypeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "length": {
             "type": "NumberLiteral",
             "number": "0x100",
             "subdenomination": null
            }
           },
           "length": {
            "type": "NumberLiteral",
            "number": "0x100",
            "subdenomination": null
           }
          },
          "length": {
           "type": "NumberLiteral",
           "number": "0x10000",
           "subdenomination": null
          }
         },
         "name": "factories",
         "identifier": {
          "type": "Identifier",
          "name": "factories"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "defaultRegistryEpoch",
         "identifier": {
          "type": "Identifier",
          "name": "defaultRegistryEpoch"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "defaultCryptoSystem",
         "identifier": {
          "type": "Identifier",
          "name": "defaultCryptoSystem"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "validatedProofs",
         "identifier": {
          "type": "Identifier",
          "name": "validatedProofs"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementDefaultRegistryEpoch",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "defaultRegistryEpoch"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "defaultRegistryEpoch"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setDefaultCryptoSystem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_defaultCryptoSystem",
         "identifier": {
          "type": "Identifier",
          "name": "_defaultCryptoSystem"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "defaultCryptoSystem"
           },
           "right": {
            "type": "Identifier",
            "name": "_defaultCryptoSystem"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setFactory",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_factoryId",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_factoryAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_factoryAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected the factory contract to exist",
             "parts": [
              "expected the factory contract to exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "epoch",
            "identifier": {
             "type": "Identifier",
             "name": "epoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "cryptoSystem",
            "identifier": {
             "type": "Identifier",
             "name": "cryptoSystem"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "assetType",
            "identifier": {
             "type": "Identifier",
             "name": "assetType"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_factoryId"
            },
            "memberName": "getVersionComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "factories"
                },
                "index": {
                 "type": "Identifier",
                 "name": "epoch"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "cryptoSystem"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "assetType"
              }
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "existing factories cannot be modified",
             "parts": [
              "existing factories cannot be modified"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "factories"
              },
              "index": {
               "type": "Identifier",
               "name": "epoch"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "cryptoSystem"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "assetType"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_factoryAddress"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SetFactory"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "epoch"
            },
            {
             "type": "Identifier",
             "name": "cryptoSystem"
            },
            {
             "type": "Identifier",
             "name": "assetType"
            },
            {
             "type": "Identifier",
             "name": "_factoryAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getFactoryAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_factoryId",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "factoryAddress",
         "identifier": {
          "type": "Identifier",
          "name": "factoryAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "queryInvalid",
            "identifier": {
             "type": "Identifier",
             "name": "queryInvalid"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "factoryAddress"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_factoryId",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "factories_slot",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "queryInvalid"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "factoryAddress",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "queryInvalid"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "factoryAddress"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "expected the factory address to exist",
                "parts": [
                 "expected the factory address to exist"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "supplementTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist",
             "parts": [
              "note registry does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "totalSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "totalSupply"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "totalSupplemented"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "totalSupplemented"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "scalingFactor",
            "identifier": {
             "type": "Identifier",
             "name": "scalingFactor"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "canConvert",
            "identifier": {
             "type": "Identifier",
             "name": "canConvert"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "canAdjustSupply",
            "identifier": {
             "type": "Identifier",
             "name": "canAdjustSupply"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "behaviour"
            },
            "memberName": "getRegistry"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "canConvert"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not have conversion rights",
             "parts": [
              "note registry does not have conversion rights"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not have mint and burn rights",
             "parts": [
              "note registry does not have mint and burn rights"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "linkedToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_value"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "scalingFactor"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateProofByHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_proofHash",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sender",
         "identifier": {
          "type": "Identifier",
          "name": "_sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "createNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "assetType",
            "identifier": {
             "type": "Identifier",
             "name": "assetType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAssetTypeFromFlags"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_canConvert"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint24",
             "stateMutability": null
            },
            "name": "factoryId",
            "identifier": {
             "type": "Identifier",
             "name": "factoryId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "computeVersionFromComponents"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "defaultRegistryEpoch"
            },
            {
             "type": "Identifier",
             "name": "defaultCryptoSystem"
            },
            {
             "type": "Identifier",
             "name": "assetType"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "createNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_linkedTokenAddress"
            },
            {
             "type": "Identifier",
             "name": "_scalingFactor"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            },
            {
             "type": "Identifier",
             "name": "_canConvert"
            },
            {
             "type": "Identifier",
             "name": "factoryId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_linkedTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_linkedTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_factoryId",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "registries"
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "address already has a linked note registry",
             "parts": [
              "address already has a linked note registry"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_canConvert"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "_linkedTokenAddress"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "expected the linked token address to exist",
                "parts": [
                 "expected the linked token address to exist"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           null,
           {
            "type": "VariableDeclaration",
            "name": "assetType",
            "identifier": {
             "type": "Identifier",
             "name": "assetType"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_factoryId"
            },
            "memberName": "getVersionComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "flagAssetType",
            "identifier": {
             "type": "Identifier",
             "name": "flagAssetType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAssetTypeFromFlags"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_canConvert"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "flagAssetType"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "can not create asset with convert and adjust flags set to false",
             "parts": [
              "can not create asset with convert and adjust flags set to false"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "flagAssetType"
             },
             "right": {
              "type": "Identifier",
              "name": "assetType"
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected note registry to match flags",
             "parts": [
              "expected note registry to match flags"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "factory",
            "identifier": {
             "type": "Identifier",
             "name": "factory"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getFactoryAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_factoryId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "behaviourAddress",
            "identifier": {
             "type": "Identifier",
             "name": "behaviourAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "NoteRegistryFactory"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "factory"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "deployNewBehaviourInstance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "behaviourInitialisation",
            "identifier": {
             "type": "Identifier",
             "name": "behaviourInitialisation"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodeWithSignature"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "initialise(address,uint256,bool,bool)",
             "parts": [
              "initialise(address,uint256,bool,bool)"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_scalingFactor"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            },
            {
             "type": "Identifier",
             "name": "_canConvert"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "proxy",
            "identifier": {
             "type": "Identifier",
             "name": "proxy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "UserDefinedTypeName",
               "namePath": "AdminUpgradeabilityProxy"
              }
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "behaviourAddress"
              },
              {
               "type": "Identifier",
               "name": "factory"
              },
              {
               "type": "Identifier",
               "name": "behaviourInitialisation"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "registries"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "NoteRegistry"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NoteRegistryBehaviour"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "proxy"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_linkedTokenAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "_factoryId"
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [
             "behaviour",
             "linkedToken",
             "latestFactory",
             "totalSupply",
             "totalSupplemented"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "behaviour"
             },
             {
              "type": "Identifier",
              "name": "linkedToken"
             },
             {
              "type": "Identifier",
              "name": "latestFactory"
             },
             {
              "type": "Identifier",
              "name": "totalSupply"
             },
             {
              "type": "Identifier",
              "name": "totalSupplemented"
             }
            ]
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "CreateNoteRegistry"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "proxy"
            },
            {
             "type": "Identifier",
             "name": "_scalingFactor"
            },
            {
             "type": "Identifier",
             "name": "_linkedTokenAddress"
            },
            {
             "type": "Identifier",
             "name": "_canAdjustSupply"
            },
            {
             "type": "Identifier",
             "name": "_canConvert"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_factoryId",
         "identifier": {
          "type": "Identifier",
          "name": "_factoryId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry for sender doesn't exist",
             "parts": [
              "note registry for sender doesn't exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "epoch",
            "identifier": {
             "type": "Identifier",
             "name": "epoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           {
            "type": "VariableDeclaration",
            "name": "assetType",
            "identifier": {
             "type": "Identifier",
             "name": "assetType"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_factoryId"
            },
            "memberName": "getVersionComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint24",
             "stateMutability": null
            },
            "name": "oldFactoryId",
            "identifier": {
             "type": "Identifier",
             "name": "oldFactoryId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "registry"
           },
           "memberName": "latestFactory"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "oldEpoch",
            "identifier": {
             "type": "Identifier",
             "name": "oldEpoch"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           {
            "type": "VariableDeclaration",
            "name": "oldAssetType",
            "identifier": {
             "type": "Identifier",
             "name": "oldAssetType"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "oldFactoryId"
            },
            "memberName": "getVersionComponents"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "epoch"
             },
             "right": {
              "type": "Identifier",
              "name": "oldEpoch"
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected new registry to be of epoch equal or greater than existing registry",
             "parts": [
              "expected new registry to be of epoch equal or greater than existing registry"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "assetType"
             },
             "right": {
              "type": "Identifier",
              "name": "oldAssetType"
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected assetType to be the same for old and new registry",
             "parts": [
              "expected assetType to be the same for old and new registry"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "factory",
            "identifier": {
             "type": "Identifier",
             "name": "factory"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getFactoryAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_factoryId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "newBehaviour",
            "identifier": {
             "type": "Identifier",
             "name": "newBehaviour"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "NoteRegistryFactory"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "factory"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "deployNewBehaviourInstance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "oldFactory",
            "identifier": {
             "type": "Identifier",
             "name": "oldFactory"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getFactoryAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oldFactoryId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "latestFactory"
           },
           "right": {
            "type": "Identifier",
            "name": "_factoryId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "NoteRegistryFactory"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "oldFactory"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "handoverBehaviour"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "behaviour"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "newBehaviour"
            },
            {
             "type": "Identifier",
             "name": "factory"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UpgradeNoteRegistry"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "behaviour"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "newBehaviour"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferPublicTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_transferValue",
         "identifier": {
          "type": "Identifier",
          "name": "_transferValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "_publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "_publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_proofHash",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "_publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "approvalForAddressForHash",
               "identifier": {
                "type": "Identifier",
                "name": "approvalForAddressForHash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "publicApprovals"
               },
               "index": {
                "type": "Identifier",
                "name": "_publicOwner"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "_proofHash"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "totalSupply"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "totalSupply"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "UnaryOperation",
                   "operator": "-",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "_publicValue"
                   },
                   "isPrefix": true
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "Identifier",
                 "name": "approvalForAddressForHash"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "UnaryOperation",
                   "operator": "-",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "_publicValue"
                   },
                   "isPrefix": true
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "public owner has not validated a transfer of tokens",
                "parts": [
                 "public owner has not validated a transfer of tokens"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "publicApprovals"
                },
                "index": {
                 "type": "Identifier",
                 "name": "_publicOwner"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "_proofHash"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "approvalForAddressForHash"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "UnaryOperation",
                   "operator": "-",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "_publicValue"
                   },
                   "isPrefix": true
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "linkedToken"
               },
               "memberName": "transferFrom"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_publicOwner"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "_transferValue"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "totalSupply"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "totalSupply"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_publicValue"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "linkedToken"
               },
               "memberName": "transfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_publicOwner"
               },
               {
                "type": "Identifier",
                "name": "_transferValue"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proofSender",
         "identifier": {
          "type": "Identifier",
          "name": "_proofSender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist",
             "parts": [
              "note registry does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "proofHash",
            "identifier": {
             "type": "Identifier",
             "name": "proofHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proofOutput"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "validateProofByHash"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proof"
               },
               {
                "type": "Identifier",
                "name": "proofHash"
               },
               {
                "type": "Identifier",
                "name": "_proofSender"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "ACE has not validated a matching proof",
             "parts": [
              "ACE has not validated a matching proof"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "validatedProofs"
            },
            "index": {
             "type": "Identifier",
             "name": "proofHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "publicOwner",
            "identifier": {
             "type": "Identifier",
             "name": "publicOwner"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "transferValue",
            "identifier": {
             "type": "Identifier",
             "name": "transferValue"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "publicValue",
            "identifier": {
             "type": "Identifier",
             "name": "publicValue"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "behaviour"
            },
            "memberName": "updateNoteRegistry"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proof"
            },
            {
             "type": "Identifier",
             "name": "_proofOutput"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "transferPublicTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "publicOwner"
               },
               {
                "type": "Identifier",
                "name": "transferValue"
               },
               {
                "type": "Identifier",
                "name": "publicValue"
               },
               {
                "type": "Identifier",
                "name": "proofHash"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "publicApprove",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_registryOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_proofHash",
         "identifier": {
          "type": "Identifier",
          "name": "_proofHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "Identifier",
            "name": "_registryOwner"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "behaviour"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist",
             "parts": [
              "note registry does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "publicApprovals"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "_proofHash"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_value"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_registryOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "linkedToken",
         "identifier": {
          "type": "Identifier",
          "name": "linkedToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalMinted",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalMinted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalBurned",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalBurned"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupplemented",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupplemented"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "Identifier",
            "name": "_registryOwner"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "scalingFactor"
             },
             {
              "type": "Identifier",
              "name": "confidentialTotalMinted"
             },
             {
              "type": "Identifier",
              "name": "confidentialTotalBurned"
             },
             {
              "type": "Identifier",
              "name": "canConvert"
             },
             {
              "type": "Identifier",
              "name": "canAdjustSupply"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "behaviour"
             },
             "memberName": "getRegistry"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "linkedToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "linkedToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "totalSupply"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalSupplemented"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "totalSupplemented"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registryOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_registryOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "createdOn",
         "identifier": {
          "type": "Identifier",
          "name": "createdOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "destroyedOn",
         "identifier": {
          "type": "Identifier",
          "name": "destroyedOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "NoteRegistry"
            },
            "name": "registry",
            "identifier": {
             "type": "Identifier",
             "name": "registry"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "registries"
           },
           "index": {
            "type": "Identifier",
            "name": "_registryOwner"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "behaviour"
            },
            "memberName": "getNote"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_noteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAssetTypeFromFlags",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjust",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjust"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "assetType",
         "identifier": {
          "type": "Identifier",
          "name": "assetType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "convert",
            "identifier": {
             "type": "Identifier",
             "name": "convert"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "_canConvert"
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "adjust",
            "identifier": {
             "type": "Identifier",
             "name": "adjust"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "_canAdjust"
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "assetType"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "convert"
            },
            "right": {
             "type": "Identifier",
             "name": "adjust"
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "computeVersionFromComponents",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_first",
         "identifier": {
          "type": "Identifier",
          "name": "_first"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_second",
         "identifier": {
          "type": "Identifier",
          "name": "_second"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_third",
         "identifier": {
          "type": "Identifier",
          "name": "_third"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "version",
         "identifier": {
          "type": "Identifier",
          "name": "version"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "version"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "or",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_first",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10000"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "or",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_second",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x100"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "_third",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/proxies/UpgradeabilityProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ImportDirective",
     "path": "./BaseUpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./BaseUpgradeabilityProxy.sol",
      "parts": [
       "./BaseUpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "UpgradeabilityProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "BaseUpgradeabilityProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_logic",
         "identifier": {
          "type": "Identifier",
          "name": "_logic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "IMPLEMENTATION_SLOT"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "eip1967.proxy.implementation",
                     "parts": [
                      "eip1967.proxy.implementation"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setImplementation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_logic"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_data"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_logic"
               },
               "memberName": "delegatecall"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_data"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "success"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/proxies/Proxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ContractDefinition",
     "name": "Proxy",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "_implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_delegate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "delegatecall",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "implementation",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatasize",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "returndatacopy",
             "arguments": [
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "returndatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "result",
              "arguments": []
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "revert",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              },
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "return",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": null,
               "default": true
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_willFallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_fallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_willFallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_delegate"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_implementation"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/proxies/BaseUpgradeabilityProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/Address.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/Address.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/Address.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Proxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Proxy.sol",
      "parts": [
       "./Proxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "BaseUpgradeabilityProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Proxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Upgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "IMPLEMENTATION_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "IMPLEMENTATION_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "_implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "impl",
         "identifier": {
          "type": "Identifier",
          "name": "impl"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "IMPLEMENTATION_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "impl"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setImplementation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Upgraded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_setImplementation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Address"
              },
              "memberName": "isContract"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "newImplementation"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Cannot set a proxy implementation to a non-contract address",
             "parts": [
              "Cannot set a proxy implementation to a non-contract address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "IMPLEMENTATION_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "newImplementation",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/proxies/BaseAdminUpgradeabilityProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ImportDirective",
     "path": "./UpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./UpgradeabilityProxy.sol",
      "parts": [
       "./UpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "BaseAdminUpgradeabilityProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "BaseUpgradeabilityProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "AdminChanged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "previousAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "previousAdmin"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "ADMIN_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "ADMIN_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
        "subdenomination": null
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "ifAdmin",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_admin"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "Identifier",
              "name": "_"
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_fallback"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_admin"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_implementation"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "newAdmin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot change the admin of a proxy to the zero address",
             "parts": [
              "Cannot change the admin of a proxy to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AdminChanged"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_admin"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "newAdmin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newAdmin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeToAndCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "newImplementation"
            },
            "memberName": "delegatecall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "_admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "adm",
         "identifier": {
          "type": "Identifier",
          "name": "adm"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "ADMIN_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "adm"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_setAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "ADMIN_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "newAdmin",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_willFallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_admin"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot call fallback function from the proxy admin",
             "parts": [
              "Cannot call fallback function from the proxy admin"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "_willFallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/proxies/AdminUpgradeabilityProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ImportDirective",
     "path": "./BaseAdminUpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./BaseAdminUpgradeabilityProxy.sol",
      "parts": [
       "./BaseAdminUpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AdminUpgradeabilityProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "BaseAdminUpgradeabilityProxy"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UpgradeabilityProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_logic",
         "identifier": {
          "type": "Identifier",
          "name": "_logic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "ADMIN_SLOT"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "eip1967.proxy.admin",
                     "parts": [
                      "eip1967.proxy.admin"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_admin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "UpgradeabilityProxy",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_logic"
          },
          {
           "type": "Identifier",
           "name": "_data"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/interfaces/ProxyAdmin.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.0"
    },
    {
     "type": "ContractDefinition",
     "name": "ProxyAdmin",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "_newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "_newAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/IAZTEC.sol",
      "parts": [
       "../../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./ProxyAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ProxyAdmin.sol",
      "parts": [
       "./ProxyAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "NoteRegistryFactory",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAZTEC"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "NoteRegistryDeployed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "behaviourContract",
         "identifier": {
          "type": "Identifier",
          "name": "behaviourContract"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "transferOwnership"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_aceAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Ownable",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deployNewBehaviourInstance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "handoverBehaviour",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_proxy",
         "identifier": {
          "type": "Identifier",
          "name": "_proxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "_newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newProxyAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "_newProxyAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "ProxyAdmin"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_proxy"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "admin"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "this is not the admin of the proxy",
             "parts": [
              "this is not the admin of the proxy"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "ProxyAdmin"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_proxy"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "ProxyAdmin"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_proxy"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "changeAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_newProxyAdmin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryBehaviour.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "parts": [
       "openzeppelin-solidity/contracts/ownership/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/IAZTEC.sol",
      "parts": [
       "../../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "NoteRegistryBehaviour",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAZTEC"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isActiveBehaviour",
         "identifier": {
          "type": "Identifier",
          "name": "isActiveBehaviour"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialised",
         "identifier": {
          "type": "Identifier",
          "name": "initialised"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dataLocation",
         "identifier": {
          "type": "Identifier",
          "name": "dataLocation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "isActiveBehaviour"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Ownable",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialise",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_newOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRegistry",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalMinted",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalMinted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalBurned",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalBurned"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputs"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputs"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transferValue",
         "identifier": {
          "type": "Identifier",
          "name": "transferValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_newTotalNoteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_newTotalNoteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_newTotalNoteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_newTotalNoteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "createdOn",
         "identifier": {
          "type": "Identifier",
          "name": "createdOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "destroyedOn",
         "identifier": {
          "type": "Identifier",
          "name": "destroyedOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "updateInputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_inputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_inputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateOutputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_outputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "_outputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/epochs/201907/Behaviour201907.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interfaces/IAZTEC.sol",
      "parts": [
       "../../../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../libs/NoteUtils.sol",
      "parts": [
       "../../../../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interfaces/NoteRegistryBehaviour.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interfaces/NoteRegistryBehaviour.sol",
      "parts": [
       "../../interfaces/NoteRegistryBehaviour.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../NoteRegistryManager.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../NoteRegistryManager.sol",
      "parts": [
       "../../NoteRegistryManager.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Behaviour201907",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "NoteRegistryBehaviour"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "libraryName": "NoteUtils",
       "functions": [],
       "operators": []
      },
      {
       "type": "StructDefinition",
       "name": "Note",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "createdOn",
         "identifier": {
          "type": "Identifier",
          "name": "createdOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "destroyedOn",
         "identifier": {
          "type": "Identifier",
          "name": "destroyedOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Registry",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "active",
         "identifier": {
          "type": "Identifier",
          "name": "active"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalMinted",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalMinted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalBurned",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalBurned"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Note"
          },
          "valueName": null
         },
         "name": "notes",
         "identifier": {
          "type": "Identifier",
          "name": "notes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Registry"
         },
         "name": "registry",
         "identifier": {
          "type": "Identifier",
          "name": "registry"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "NoteRegistryBehaviour",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialise",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_newOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "_scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "_canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "initialised"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "registry already initialised",
             "parts": [
              "registry already initialised"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transferOwnership"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_newOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "dataLocation"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registry"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Registry"
            },
            "arguments": [
             {
              "type": "BooleanLiteral",
              "value": true
             },
             {
              "type": "Identifier",
              "name": "_scalingFactor"
             },
             {
              "type": "Identifier",
              "name": "ZERO_VALUE_NOTE_HASH"
             },
             {
              "type": "Identifier",
              "name": "ZERO_VALUE_NOTE_HASH"
             },
             {
              "type": "Identifier",
              "name": "_canConvert"
             },
             {
              "type": "Identifier",
              "name": "_canAdjustSupply"
             }
            ],
            "names": [
             "active",
             "scalingFactor",
             "confidentialTotalMinted",
             "confidentialTotalBurned",
             "canConvert",
             "canAdjustSupply"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "active"
             },
             {
              "type": "Identifier",
              "name": "scalingFactor"
             },
             {
              "type": "Identifier",
              "name": "confidentialTotalMinted"
             },
             {
              "type": "Identifier",
              "name": "confidentialTotalBurned"
             },
             {
              "type": "Identifier",
              "name": "canConvert"
             },
             {
              "type": "Identifier",
              "name": "canAdjustSupply"
             }
            ]
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initialised"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRegistry",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scalingFactor",
         "identifier": {
          "type": "Identifier",
          "name": "scalingFactor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalMinted",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalMinted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "confidentialTotalBurned",
         "identifier": {
          "type": "Identifier",
          "name": "confidentialTotalBurned"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canConvert",
         "identifier": {
          "type": "Identifier",
          "name": "canConvert"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "canAdjustSupply",
         "identifier": {
          "type": "Identifier",
          "name": "canAdjustSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "active"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected registry to be created",
             "parts": [
              "expected registry to be created"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "scalingFactor"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "scalingFactor"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "confidentialTotalMinted"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "confidentialTotalMinted"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "confidentialTotalBurned"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "confidentialTotalBurned"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "canConvert"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "canConvert"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "canAdjustSupply"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "canAdjustSupply"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not burnable",
             "parts": [
              "this asset is not burnable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not mintable",
             "parts": [
              "this asset is not mintable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateNoteRegistry",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint24",
          "stateMutability": null
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutput",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutput"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "publicOwner",
         "identifier": {
          "type": "Identifier",
          "name": "publicOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "transferValue",
         "identifier": {
          "type": "Identifier",
          "name": "transferValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "publicValue",
         "identifier": {
          "type": "Identifier",
          "name": "publicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "active"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "note registry does not exist for the given address",
             "parts": [
              "note registry does not exist for the given address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "inputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "outputNotes",
            "identifier": {
             "type": "Identifier",
             "name": "outputNotes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "inputNotes"
             },
             {
              "type": "Identifier",
              "name": "outputNotes"
             },
             {
              "type": "Identifier",
              "name": "publicOwner"
             },
             {
              "type": "Identifier",
              "name": "publicValue"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_proofOutput"
             },
             "memberName": "extractProofOutput"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateInputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "inputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateOutputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "outputNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "publicValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "canConvert"
                },
                "right": {
                 "type": "BooleanLiteral",
                 "value": true
                }
               },
               {
                "type": "StringLiteral",
                "value": "asset cannot be converted into public tokens",
                "parts": [
                 "asset cannot be converted into public tokens"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "publicValue"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "transferValue"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                       "type": "Identifier",
                       "name": "publicValue"
                      },
                      "isPrefix": true
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "scalingFactor"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "transferValue"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "publicValue"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "scalingFactor"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not mintable",
             "parts": [
              "this asset is not mintable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not burnable",
             "parts": [
              "this asset is not burnable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "createdOn",
         "identifier": {
          "type": "Identifier",
          "name": "createdOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "destroyedOn",
         "identifier": {
          "type": "Identifier",
          "name": "destroyedOn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "notes"
               },
               "index": {
                "type": "Identifier",
                "name": "_noteHash"
               }
              },
              "memberName": "status"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "NoteStatus"
                },
                "memberName": "DOES_NOT_EXIST"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "expected note to exist",
             "parts": [
              "expected note to exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Note"
            },
            "name": "notePtr",
            "identifier": {
             "type": "Identifier",
             "name": "notePtr"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "notes"
           },
           "index": {
            "type": "Identifier",
            "name": "_noteHash"
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "note"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "notePtr_slot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "status"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "note",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "createdOn"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "8"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "note",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "destroyedOn"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "48"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "note",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "noteOwner"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "88"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "note",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffffffffffffffffffffffffffffffffff"
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "updateInputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "inputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "inputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "inputNotes"
            },
            "memberName": "getLength"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "noteOwner",
               "identifier": {
                "type": "Identifier",
                "name": "noteOwner"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "inputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "deleteNote"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "noteHash"
               },
               {
                "type": "Identifier",
                "name": "noteOwner"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateOutputNotes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "outputNotes",
         "identifier": {
          "type": "Identifier",
          "name": "outputNotes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "outputNotes"
            },
            "memberName": "getLength"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+=",
            "left": {
             "type": "Identifier",
             "name": "i"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "noteOwner",
               "identifier": {
                "type": "Identifier",
                "name": "noteOwner"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "noteHash",
               "identifier": {
                "type": "Identifier",
                "name": "noteHash"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "outputNotes"
                 },
                 "memberName": "get"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "extractNote"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "noteOwner"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "output note owner cannot be address(0x0)",
                "parts": [
                 "output note owner cannot be address(0x0)"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "createNote"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "noteHash"
               },
               {
                "type": "Identifier",
                "name": "noteOwner"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "noteStatusNew",
            "identifier": {
             "type": "Identifier",
             "name": "noteStatusNew"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "NoteStatus"
             },
             "memberName": "UNSPENT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "noteStatusOld",
            "identifier": {
             "type": "Identifier",
             "name": "noteStatusOld"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Note"
            },
            "name": "notePtr",
            "identifier": {
             "type": "Identifier",
             "name": "notePtr"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "notes"
           },
           "index": {
            "type": "Identifier",
            "name": "_noteHash"
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "noteStatusOld"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "notePtr_slot",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "notePtr_slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteStatusNew",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xff"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "shl",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "8"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "timestamp",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xffffffffff"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "88"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "_noteOwner",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "noteStatusOld"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "NoteStatus"
                },
                "memberName": "DOES_NOT_EXIST"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "output note exists",
             "parts": [
              "output note exists"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteNote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_noteHash",
         "identifier": {
          "type": "Identifier",
          "name": "_noteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_noteOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_noteOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "noteStatusNew",
            "identifier": {
             "type": "Identifier",
             "name": "noteStatusNew"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "NoteStatus"
             },
             "memberName": "SPENT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "noteStatusOld",
            "identifier": {
             "type": "Identifier",
             "name": "noteStatusOld"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "storedNoteOwner",
            "identifier": {
             "type": "Identifier",
             "name": "storedNoteOwner"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Note"
            },
            "name": "notePtr",
            "identifier": {
             "type": "Identifier",
             "name": "notePtr"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "notes"
           },
           "index": {
            "type": "Identifier",
            "name": "_noteHash"
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "storedNote"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "notePtr_slot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "noteStatusOld"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "storedNote",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0xff"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "storedNoteOwner"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "88"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "storedNote",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0xffffffffffffffffffffffffffffffffffffffff"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "notePtr_slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "and",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "storedNote",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "not",
                   "arguments": [
                    {
                     "type": "HexNumber",
                     "value": "0xffffffffff0000000000ff"
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "shl",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "48"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "and",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "timestamp",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0xffffffffff"
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "noteStatusNew",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0xff"
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "noteStatusOld"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "NoteStatus"
                },
                "memberName": "UNSPENT"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "input note status is not UNSPENT",
             "parts": [
              "input note status is not UNSPENT"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "storedNoteOwner"
             },
             "right": {
              "type": "Identifier",
              "name": "_noteOwner"
             }
            },
            {
             "type": "StringLiteral",
             "value": "input note owner does not match",
             "parts": [
              "input note owner does not match"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/epochs/201907/base/FactoryBase201907.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/NoteRegistryFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/NoteRegistryFactory.sol",
      "parts": [
       "../../../interfaces/NoteRegistryFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./BehaviourBase201907.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./BehaviourBase201907.sol",
      "parts": [
       "./BehaviourBase201907.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "FactoryBase201907",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "NoteRegistryFactory"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "NoteRegistryFactory",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deployNewBehaviourInstance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BehaviourBase201907"
            },
            "name": "behaviourContract",
            "identifier": {
             "type": "Identifier",
             "name": "behaviourContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BehaviourBase201907"
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NoteRegistryDeployed"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "behaviourContract"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "behaviourContract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/epochs/201907/base/BehaviourBase201907.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../../interfaces/IAZTEC.sol",
      "parts": [
       "../../../../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../../libs/NoteUtils.sol",
      "parts": [
       "../../../../../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Behaviour201907.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Behaviour201907.sol",
      "parts": [
       "../Behaviour201907.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "BehaviourBase201907",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Behaviour201907"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Behaviour201907",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/epochs/201907/adjustable/FactoryAdjustable201907.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../interfaces/NoteRegistryFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interfaces/NoteRegistryFactory.sol",
      "parts": [
       "../../../interfaces/NoteRegistryFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./BehaviourAdjustable201907.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./BehaviourAdjustable201907.sol",
      "parts": [
       "./BehaviourAdjustable201907.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "FactoryAdjustable201907",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "NoteRegistryFactory"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aceAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_aceAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "NoteRegistryFactory",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_aceAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deployNewBehaviourInstance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BehaviourAdjustable201907"
            },
            "name": "behaviourContract",
            "identifier": {
             "type": "Identifier",
             "name": "behaviourContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BehaviourAdjustable201907"
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NoteRegistryDeployed"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "behaviourContract"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "behaviourContract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/noteRegistry/epochs/201907/adjustable/BehaviourAdjustable201907.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.5.0 <0.6.0"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../../interfaces/IAZTEC.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../../interfaces/IAZTEC.sol",
      "parts": [
       "../../../../../interfaces/IAZTEC.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../../libs/NoteUtils.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../../libs/NoteUtils.sol",
      "parts": [
       "../../../../../libs/NoteUtils.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Behaviour201907.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Behaviour201907.sol",
      "parts": [
       "../Behaviour201907.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "BehaviourAdjustable201907",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Behaviour201907"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Behaviour201907",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputs"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not burnable",
             "parts": [
              "this asset is not burnable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "oldTotal",
            "identifier": {
             "type": "Identifier",
             "name": "oldTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "newTotal",
            "identifier": {
             "type": "Identifier",
             "name": "newTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "burnedNotes",
            "identifier": {
             "type": "Identifier",
             "name": "burnedNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "oldTotalNoteHash",
            "identifier": {
             "type": "Identifier",
             "name": "oldTotalNoteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "oldTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "oldTotalNoteHash"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "confidentialTotalBurned"
             }
            },
            {
             "type": "StringLiteral",
             "value": "provided total burned note does not match",
             "parts": [
              "provided total burned note does not match"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "newTotalNoteHash",
            "identifier": {
             "type": "Identifier",
             "name": "newTotalNoteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setConfidentialTotalBurned"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newTotalNoteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateInputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "burnedNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_proofOutputs",
         "identifier": {
          "type": "Identifier",
          "name": "_proofOutputs"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "canAdjustSupply"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "this asset is not mintable",
             "parts": [
              "this asset is not mintable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "oldTotal",
            "identifier": {
             "type": "Identifier",
             "name": "oldTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "newTotal",
            "identifier": {
             "type": "Identifier",
             "name": "newTotal"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "mintedNotes",
            "identifier": {
             "type": "Identifier",
             "name": "mintedNotes"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_proofOutputs"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractProofOutput"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "oldTotalNoteHash",
            "identifier": {
             "type": "Identifier",
             "name": "oldTotalNoteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "oldTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "oldTotalNoteHash"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "confidentialTotalMinted"
             }
            },
            {
             "type": "StringLiteral",
             "value": "provided total burned note does not match",
             "parts": [
              "provided total burned note does not match"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "newTotalNoteHash",
            "identifier": {
             "type": "Identifier",
             "name": "newTotalNoteHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTotal"
              },
              "memberName": "get"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "extractNote"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setConfidentialTotalMinted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newTotalNoteHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateOutputNotes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "mintedNotes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "newTotalNoteHash",
         "identifier": {
          "type": "Identifier",
          "name": "newTotalNoteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "confidentialTotalMinted"
           },
           "right": {
            "type": "Identifier",
            "name": "newTotalNoteHash"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "newTotalNoteHash"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setConfidentialTotalBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "newTotalNoteHash",
         "identifier": {
          "type": "Identifier",
          "name": "newTotalNoteHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registry"
            },
            "memberName": "confidentialTotalBurned"
           },
           "right": {
            "type": "Identifier",
            "name": "newTotalNoteHash"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "newTotalNoteHash"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]