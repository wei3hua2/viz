[
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/scripts/preamble.sol",
  "ast": {
   "type": "SourceUnit",
   "children": []
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/Migrations.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "Migrations",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "last_completed_migration",
         "identifier": {
          "type": "Identifier",
          "name": "last_completed_migration"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "restricted",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "owner"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCompleted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "completed",
         "identifier": {
          "type": "Identifier",
          "name": "completed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "last_completed_migration"
           },
           "right": {
            "type": "Identifier",
            "name": "completed"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "newAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Migrations"
            },
            "name": "upgraded",
            "identifier": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Migrations"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "memberName": "setCompleted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "last_completed_migration"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/types/SettingType.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "EnumDefinition",
     "name": "SettingType",
     "members": [
      {
       "type": "EnumValue",
       "name": "UINT256"
      },
      {
       "type": "EnumValue",
       "name": "BOOL"
      },
      {
       "type": "EnumValue",
       "name": "ADDRESS"
      },
      {
       "type": "EnumValue",
       "name": "STRING"
      },
      {
       "type": "EnumValue",
       "name": "BYTES"
      },
      {
       "type": "EnumValue",
       "name": "BYTES32"
      },
      {
       "type": "EnumValue",
       "name": "INT256"
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/types/MinipoolStatus.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "EnumDefinition",
     "name": "MinipoolStatus",
     "members": [
      {
       "type": "EnumValue",
       "name": "Initialized"
      },
      {
       "type": "EnumValue",
       "name": "Prelaunch"
      },
      {
       "type": "EnumValue",
       "name": "Staking"
      },
      {
       "type": "EnumValue",
       "name": "Withdrawable"
      },
      {
       "type": "EnumValue",
       "name": "Dissolved"
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/types/MinipoolDeposit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "EnumDefinition",
     "name": "MinipoolDeposit",
     "members": [
      {
       "type": "EnumValue",
       "name": "None"
      },
      {
       "type": "EnumValue",
       "name": "Full"
      },
      {
       "type": "EnumValue",
       "name": "Half"
      },
      {
       "type": "EnumValue",
       "name": "Empty"
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/RocketVaultWithdrawerInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketVaultWithdrawerInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "receiveVaultWithdrawalETH",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/RocketVaultInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketVaultInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositEther",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawEther",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_withdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_withdrawalAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOfToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transferToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burnToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ERC20Burnable"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/RocketStorageInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketStorageInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getGuardian",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setGuardian",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_newAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmGuardian",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "subUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodePendingWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newWithdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_newWithdrawalAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirm",
         "identifier": {
          "type": "Identifier",
          "name": "_confirm"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/util/AddressSetStorageInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "AddressSetStorageInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getIndexOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "addItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/util/AddressQueueStorageInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "AddressQueueStorageInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getIndexOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "enqueueItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/token/RocketTokenRPLInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketTokenRPLInterface",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getInflationCalcTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalsPassed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalStartTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationRewardsContractAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "inflationCalculate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "inflationMintTokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "swapTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/token/RocketTokenRETHInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketTokenRETHInterface",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getEthValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_rethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRethValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExchangeRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalCollateral",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCollateralRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositExcess",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositExcessCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_rethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/rewards/RocketRewardsPoolInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketRewardsPoolInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTimeStart",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTimeStartComputed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalsPassed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimTimeLastMade",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalRewardsTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractTotalClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserTotalNext",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserTotalCurrent",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserHasClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalStartTime",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalStartTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserCanClaim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserRegisteredTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractAllowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractPercLast",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractEnabled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimerAmountPerc",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAmountPerc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "registerClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enabled",
         "identifier": {
          "type": "Identifier",
          "name": "_enabled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_toAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_toAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimerAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimTrustedNodeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimPossible",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "register",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNode",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enable",
         "identifier": {
          "type": "Identifier",
          "name": "_enable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/rewards/claims/RocketClaimNodeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimNodeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimPossible",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "register",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enable",
         "identifier": {
          "type": "Identifier",
          "name": "_enable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/rewards/claims/RocketClaimDAOInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimDAOInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "spend",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/node/RocketNodeStakingInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeStakingInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getTotalRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRPLStakedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalEffectiveRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateTotalEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinimumRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMaximumRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "stakeRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "slashRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethSlashAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethSlashAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/node/RocketNodeManagerInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeManagerInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "TimezoneCount",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "timezone",
         "identifier": {
          "type": "Identifier",
          "name": "timezone"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "count",
         "identifier": {
          "type": "Identifier",
          "name": "count"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeCountPerTimezone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "TimezoneCount"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodePendingWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeTimezoneLocation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "registerNode",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_timezoneLocation",
         "identifier": {
          "type": "Identifier",
          "name": "_timezoneLocation"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setTimezoneLocation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_timezoneLocation",
         "identifier": {
          "type": "Identifier",
          "name": "_timezoneLocation"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/node/RocketNodeDepositInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeDepositInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_minimumNodeFee",
         "identifier": {
          "type": "Identifier",
          "name": "_minimumNodeFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/network/RocketNetworkPricesInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkPricesInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getPricesBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRPLPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveRPLStakeUpdatedBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLatestReportableBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "inConsensus",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "submitPrices",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "_effectiveRplStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeUpdatePrices",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "_effectiveRplStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/network/RocketNetworkFeesInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkFeesInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getNodeDemand",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFeeByDemand",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "_nodeDemand",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeDemand"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/network/RocketNetworkBalancesInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkBalancesInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getBalancesBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLatestReportableBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalETHBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStakingETHBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalRETHSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getETHUtilizationRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "submitBalances",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_total",
         "identifier": {
          "type": "Identifier",
          "name": "_total"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_staking",
         "identifier": {
          "type": "Identifier",
          "name": "_staking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_rethSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeUpdateBalances",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "_totalEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "_stakingEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_rethSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolStatusInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolStatusInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "submitMinipoolWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeMinipoolWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolQueueInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolQueueInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getTotalLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNextCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNextDeposit",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "enqueueMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipool",
         "identifier": {
          "type": "Identifier",
          "name": "_minipool"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueMinipool",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueMinipoolByDeposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolPenaltyInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolPenaltyInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "setMaxPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rate",
         "identifier": {
          "type": "Identifier",
          "name": "_rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaxPenaltyRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rate",
         "identifier": {
          "type": "Identifier",
          "name": "_rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolManagerInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketMinipoolInterface.sol",
      "parts": [
       "./RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolManagerInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStakingMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFinalisedMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getActiveMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolCountPerStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeActiveMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFinalisedMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeValidatingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeValidatingMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolByPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_pubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_pubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "createMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketMinipoolInterface"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "destroyMinipool",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decrementNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNodeFinalisedMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setMinipoolPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_pubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_pubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolStatus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolStatus.sol",
      "parts": [
       "../../types/MinipoolStatus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketStorageInterface.sol",
      "parts": [
       "../RocketStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "initialise",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatus",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFinalised",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatusBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatusTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositType",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeDepositBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRefundBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeDepositAssigned",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositAssigned",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositAssignedTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getWithdrawalCredentials",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateNodeShare",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_balance",
         "identifier": {
          "type": "Identifier",
          "name": "_balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateUserShare",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_balance",
         "identifier": {
          "type": "Identifier",
          "name": "_balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "nodeDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "userDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "distributeBalance",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "distributeBalanceAndFinalise",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "refund",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "slash",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "finalise",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "stake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_validatorPubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorPubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_validatorSignature",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorSignature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_depositDataRoot",
         "identifier": {
          "type": "Identifier",
          "name": "_depositDataRoot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setWithdrawable",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dissolve",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "close",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/minipool/RocketMinipoolFactoryInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolFactoryInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "createMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/deposit/RocketDepositPoolInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDepositPoolInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExcessBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleDissolvedDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleExcessCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleLiquidatedStake",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "assignDeposits",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawExcessBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserLastDepositBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/RocketDAOProposalInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProposalInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EnumDefinition",
       "name": "ProposalState",
       "members": [
        {
         "type": "EnumValue",
         "name": "Pending"
        },
        {
         "type": "EnumValue",
         "name": "Active"
        },
        {
         "type": "EnumValue",
         "name": "Cancelled"
        },
        {
         "type": "EnumValue",
         "name": "Defeated"
        },
        {
         "type": "EnumValue",
         "name": "Succeeded"
        },
        {
         "type": "EnumValue",
         "name": "Expired"
        },
        {
         "type": "EnumValue",
         "name": "Executed"
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDAO",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getProposer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMessage",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStart",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEnd",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExpires",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesFor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesAgainst",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCancelled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecuted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPayload",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReceiptHasVoted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReceiptSupported",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getState",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProposalState"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_dao",
         "identifier": {
          "type": "Identifier",
          "name": "_dao"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_message",
         "identifier": {
          "type": "Identifier",
          "name": "_message"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_startBlock",
         "identifier": {
          "type": "Identifier",
          "name": "_startBlock"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_durationBlocks",
         "identifier": {
          "type": "Identifier",
          "name": "_durationBlocks"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_expiresBlocks",
         "identifier": {
          "type": "Identifier",
          "name": "_expiresBlocks"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_votesRequired",
         "identifier": {
          "type": "Identifier",
          "name": "_votesRequired"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_payload",
         "identifier": {
          "type": "Identifier",
          "name": "_payload"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "vote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_votes",
         "identifier": {
          "type": "Identifier",
          "name": "_votes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_support",
         "identifier": {
          "type": "Identifier",
          "name": "_support"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ImportDirective",
     "path": "../../../types/SettingType.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../types/SettingType.sol",
      "parts": [
       "../../../types/SettingType.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolProposalsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingMulti",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingContractNames",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractNames"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingPaths",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPaths"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "SettingType"
          },
          "length": null
         },
         "name": "_types",
         "identifier": {
          "type": "Identifier",
          "name": "_types"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingRewardsClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSpendTreasury",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/RocketDAOProtocolInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ImportDirective",
     "path": "../../../types/SettingType.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../types/SettingType.sol",
      "parts": [
       "../../../types/SettingType.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getBootstrapModeDisabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingMulti",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingContractNames",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractNames"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingPaths",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPaths"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "SettingType"
          },
          "length": null
         },
         "name": "_types",
         "identifier": {
          "type": "Identifier",
          "name": "_types"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_values",
         "identifier": {
          "type": "Identifier",
          "name": "_values"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSpendTreasury",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapDisable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirmDisableBootstrapMode",
         "identifier": {
          "type": "Identifier",
          "name": "_confirmDisableBootstrapMode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/RocketDAOProtocolActionsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolActionsInterface",
     "baseContracts": [],
     "subNodes": [],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsRewardsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "setSettingRewardsClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimerPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimerPercTimeUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimersPercTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsNodeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getRegistrationEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumPerMinipoolStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumPerMinipoolStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsNetworkInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getNodeConsensusThreshold",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitBalancesEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitBalancesFrequency",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitPricesEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitPricesFrequency",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTargetNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFeeDemandRange",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTargetRethCollateralRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRethDepositDelay",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../types/MinipoolDeposit.sol",
      "parts": [
       "../../../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsMinipoolInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getLaunchBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositNodeAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFullDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getHalfDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEmptyDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositUserAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFullDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getHalfDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEmptyDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitWithdrawableEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLaunchTimeout",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsInflationInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalStartTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsDepositInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getDepositEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAssignDepositsEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumDeposit",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumDepositPoolSize",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumDepositAssignments",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsAuctionInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getCreateLotEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBidOnLotEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotMinimumEthValue",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotMaximumEthValue",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotDuration",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStartingPriceRatio",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReservePriceRatio",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedUpgradeInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "upgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedProposalsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "propose",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_proposalMessage",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_payload",
         "identifier": {
          "type": "Identifier",
          "name": "_payload"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "vote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_support",
         "identifier": {
          "type": "Identifier",
          "name": "_support"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalInvite",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalLeave",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalKick",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplFine",
         "identifier": {
          "type": "Identifier",
          "name": "_rplFine"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/RocketDAONodeTrustedInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getBootstrapModeDisabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberQuorumVotesRequired",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberMinRequired",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberIsValid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberLastProposalTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberUrl",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberJoinedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberProposalExecutedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_proposalType",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalType"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberRPLBondAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberIsChallenged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decrementMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapMember",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapDisable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirmDisableBootstrapMode",
         "identifier": {
          "type": "Identifier",
          "name": "_confirmDisableBootstrapMode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "memberJoinRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedActionsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "actionJoin",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionJoinRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionLeave",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_rplBondRefundAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rplBondRefundAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionKick",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplFine",
         "identifier": {
          "type": "Identifier",
          "name": "_rplFine"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionChallengeMake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "actionChallengeDecide",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettingsProposalsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getCooldownTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVoteTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVoteDelayTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecuteTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getActionTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettingsMembersInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getQuorum",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRPLBond",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolUnbondedMax",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolUnbondedMinFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeCooldown",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeWindow",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeCost",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettingsInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/casper/DepositInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "DepositInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_pubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_pubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_withdrawalCredentials",
         "identifier": {
          "type": "Identifier",
          "name": "_withdrawalCredentials"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_depositDataRoot",
         "identifier": {
          "type": "Identifier",
          "name": "_depositDataRoot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/interface/auction/RocketAuctionManagerInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RocketAuctionManagerInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getTotalRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAllottedRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemainingRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotStartBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotEndBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotStartPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotReservePrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotTotalRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotTotalBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotAddressBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_bidder",
         "identifier": {
          "type": "Identifier",
          "name": "_bidder"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotRPLRecovered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceAtBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceAtCurrentBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceByTotalBids",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotCurrentPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotClaimedRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotRemainingRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotIsCleared",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "createLot",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "placeBid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "claimBid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "recoverUnclaimedRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketVault.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketBase.sol",
      "parts": [
       "./RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interface/RocketVaultInterface.sol",
      "parts": [
       "../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interface/RocketVaultWithdrawerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interface/RocketVaultWithdrawerInterface.sol",
      "parts": [
       "../interface/RocketVaultWithdrawerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketVault",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketVaultInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "etherBalances",
         "identifier": {
          "type": "Identifier",
          "name": "etherBalances"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "tokenBalances",
         "identifier": {
          "type": "Identifier",
          "name": "tokenBalances"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "EtherDeposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EtherWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokenDeposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokenWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokenBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokenTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "etherBalances"
           },
           "index": {
            "type": "Identifier",
            "name": "_networkContractName"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOfToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "tokenBalances"
           },
           "index": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_networkContractName"
               },
               {
                "type": "Identifier",
                "name": "_tokenAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositEther",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No valid amount of ETH given to deposit",
             "parts": [
              "No valid amount of ETH given to deposit"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "contractName",
            "identifier": {
             "type": "Identifier",
             "name": "contractName"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractName"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "etherBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractName"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "etherBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractName"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherDeposited"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractName"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawEther",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No valid amount of ETH given to withdraw",
             "parts": [
              "No valid amount of ETH given to withdraw"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "contractName",
            "identifier": {
             "type": "Identifier",
             "name": "contractName"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractName"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "etherBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractName"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "_amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient contract ETH balance",
             "parts": [
              "Insufficient contract ETH balance"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "etherBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractName"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "etherBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractName"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultWithdrawerInterface"
            },
            "name": "withdrawer",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultWithdrawerInterface"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "withdrawer"
             },
             "memberName": "receiveVaultWithdrawalETH"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ]
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherWithdrawn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractName"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenContract",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenContract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No valid amount of tokens given to deposit",
             "parts": [
              "No valid amount of tokens given to deposit"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getContractAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_networkContractName"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not a valid network contract",
             "parts": [
              "Not a valid network contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "contractKey",
            "identifier": {
             "type": "Identifier",
             "name": "contractKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_networkContractName"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_tokenContract"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokenContract"
              },
              "memberName": "transferFrom"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Token transfer was not successful",
             "parts": [
              "Token transfer was not successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractKey"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "tokenBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractKey"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenDeposited"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_tokenContract"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_withdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_withdrawalAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No valid amount of tokens given to withdraw",
             "parts": [
              "No valid amount of tokens given to withdraw"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "contractKey",
            "identifier": {
             "type": "Identifier",
             "name": "contractKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractName"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractKey"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "tokenBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractKey"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "tokenContract",
            "identifier": {
             "type": "Identifier",
             "name": "tokenContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "tokenContract"
              },
              "memberName": "transfer"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_withdrawalAddress"
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Rocket Vault token withdrawal unsuccessful",
             "parts": [
              "Rocket Vault token withdrawal unsuccessful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenWithdrawn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_networkContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_networkContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No valid amount of tokens given to transfer",
             "parts": [
              "No valid amount of tokens given to transfer"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getContractAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_networkContractName"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not a valid network contract",
             "parts": [
              "Not a valid network contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "contractKeyFrom",
            "identifier": {
             "type": "Identifier",
             "name": "contractKeyFrom"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractName"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "contractKeyTo",
            "identifier": {
             "type": "Identifier",
             "name": "contractKeyTo"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_networkContractName"
              },
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractKeyFrom"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "tokenBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractKeyFrom"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractKeyTo"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "tokenBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractKeyTo"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractKeyFrom"
            },
            {
             "type": "Identifier",
             "name": "contractKeyTo"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burnToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ERC20Burnable"
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "contractKey",
            "identifier": {
             "type": "Identifier",
             "name": "contractKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractName"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenBalances"
            },
            "index": {
             "type": "Identifier",
             "name": "contractKey"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "tokenBalances"
              },
              "index": {
               "type": "Identifier",
               "name": "contractKey"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ERC20Burnable"
            },
            "name": "tokenContract",
            "identifier": {
             "type": "Identifier",
             "name": "tokenContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ERC20Burnable"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "tokenContract"
            },
            "memberName": "burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenBurned"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../interface/RocketStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interface/RocketStorageInterface.sol",
      "parts": [
       "../interface/RocketStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketStorage",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketStorageInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "NodeWithdrawalAddressSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "withdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawalAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "GuardianChanged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oldGuardian",
         "identifier": {
          "type": "Identifier",
          "name": "oldGuardian"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newGuardian",
         "identifier": {
          "type": "Identifier",
          "name": "newGuardian"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "stringStorage",
         "identifier": {
          "type": "Identifier",
          "name": "stringStorage"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "bytesStorage",
         "identifier": {
          "type": "Identifier",
          "name": "bytesStorage"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "withdrawalAddresses",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawalAddresses"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "pendingWithdrawalAddresses",
         "identifier": {
          "type": "Identifier",
          "name": "pendingWithdrawalAddresses"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "guardian",
         "identifier": {
          "type": "Identifier",
          "name": "guardian"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newGuardian",
         "identifier": {
          "type": "Identifier",
          "name": "newGuardian"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "storageInit",
         "identifier": {
          "type": "Identifier",
          "name": "storageInit"
         },
         "expression": {
          "type": "BooleanLiteral",
          "value": false
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BooleanLiteral",
        "value": false
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyLatestRocketNetworkContract",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "storageInit"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_getBool"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodePacked"
                    },
                    "arguments": [
                     {
                      "type": "StringLiteral",
                      "value": "contract.exists",
                      "parts": [
                       "contract.exists"
                      ],
                      "isUnicode": [
                       false
                      ]
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "Invalid or outdated network contract",
                "parts": [
                 "Invalid or outdated network contract"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "_getBool"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "keccak256"
                     },
                     "arguments": [
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "abi"
                        },
                        "memberName": "encodePacked"
                       },
                       "arguments": [
                        {
                         "type": "StringLiteral",
                         "value": "contract.exists",
                         "parts": [
                          "contract.exists"
                         ],
                         "isUnicode": [
                          false
                         ]
                        },
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "msg"
                         },
                         "memberName": "sender"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "tx"
                    },
                    "memberName": "origin"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "guardian"
                   }
                  }
                 }
                ],
                "isArray": false
               },
               {
                "type": "StringLiteral",
                "value": "Invalid or outdated network contract attempting access during deployment",
                "parts": [
                 "Invalid or outdated network contract attempting access during deployment"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "guardian"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getGuardian",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "guardian"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setGuardian",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_newAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "guardian"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Is not guardian account",
             "parts": [
              "Is not guardian account"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "newGuardian"
           },
           "right": {
            "type": "Identifier",
            "name": "_newAddress"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmGuardian",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "newGuardian"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Confirmation must come from new guardian address",
             "parts": [
              "Confirmation must come from new guardian address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "oldGuardian",
            "identifier": {
             "type": "Identifier",
             "name": "oldGuardian"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "guardian"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "guardian"
           },
           "right": {
            "type": "Identifier",
            "name": "newGuardian"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "delete",
           "subExpression": {
            "type": "Identifier",
            "name": "newGuardian"
           },
           "isPrefix": true
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "GuardianChanged"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oldGuardian"
            },
            {
             "type": "Identifier",
             "name": "guardian"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getDeployedStatus",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "storageInit"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setDeployedStatus",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "guardian"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Is not guardian account",
             "parts": [
              "Is not guardian account"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "storageInit"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "node.exists",
                  "parts": [
                   "node.exists"
                  ],
                  "isUnicode": [
                   false
                  ]
                 },
                 {
                  "type": "Identifier",
                  "name": "_nodeAddress"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "withdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "withdrawalAddresses"
           },
           "index": {
            "type": "Identifier",
            "name": "_nodeAddress"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "withdrawalAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "_nodeAddress"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "withdrawalAddress"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodePendingWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "pendingWithdrawalAddresses"
           },
           "index": {
            "type": "Identifier",
            "name": "_nodeAddress"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newWithdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_newWithdrawalAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirm",
         "identifier": {
          "type": "Identifier",
          "name": "_confirm"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_newWithdrawalAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid withdrawal address",
             "parts": [
              "Invalid withdrawal address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "withdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "withdrawalAddress"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only a tx from a node's withdrawal address can update it",
             "parts": [
              "Only a tx from a node's withdrawal address can update it"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_confirm"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updateWithdrawalAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               },
               {
                "type": "Identifier",
                "name": "_newWithdrawalAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "pendingWithdrawalAddresses"
               },
               "index": {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "_newWithdrawalAddress"
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "confirmWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "pendingWithdrawalAddresses"
              },
              "index": {
               "type": "Identifier",
               "name": "_nodeAddress"
              }
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Confirmation must come from the pending withdrawal address",
             "parts": [
              "Confirmation must come from the pending withdrawal address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "delete",
           "subExpression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "pendingWithdrawalAddresses"
            },
            "index": {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           },
           "isPrefix": true
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_newWithdrawalAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_newWithdrawalAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "withdrawalAddresses"
            },
            "index": {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_newWithdrawalAddress"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NodeWithdrawalAddressSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "_newWithdrawalAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "stringStorage"
           },
           "index": {
            "type": "Identifier",
            "name": "_key"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "bytesStorage"
           },
           "index": {
            "type": "Identifier",
            "name": "_key"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "stringStorage"
            },
            "index": {
             "type": "Identifier",
             "name": "_key"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_value"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "bytesStorage"
            },
            "index": {
             "type": "Identifier",
             "name": "_key"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_value"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "delete",
           "subExpression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "stringStorage"
            },
            "index": {
             "type": "Identifier",
             "name": "_key"
            }
           },
           "isPrefix": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "delete",
           "subExpression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "bytesStorage"
            },
            "index": {
             "type": "Identifier",
             "name": "_key"
            }
           },
           "isPrefix": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "a",
            "identifier": {
             "type": "Identifier",
             "name": "a"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "b",
            "identifier": {
             "type": "Identifier",
             "name": "b"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "b"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "a",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "_amount",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "b",
               "arguments": []
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: addition overflow",
             "parts": [
              "SafeMath: addition overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "subUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "a",
            "identifier": {
             "type": "Identifier",
             "name": "a"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: subtraction overflow",
             "parts": [
              "SafeMath: subtraction overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "a"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "a",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "_amount",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "a",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestRocketNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_getBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_key",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_setBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "_key",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "_value",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../interface/RocketStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interface/RocketStorageInterface.sol",
      "parts": [
       "../interface/RocketStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketBase",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "calcBase",
         "identifier": {
          "type": "Identifier",
          "name": "calcBase"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": "ether"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": "ether"
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "version",
         "identifier": {
          "type": "Identifier",
          "name": "version"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "rocketStorage",
         "identifier": {
          "type": "Identifier",
          "name": "rocketStorage"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "RocketStorageInterface"
          },
          "arguments": [
           {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "RocketStorageInterface"
        },
        "arguments": [
         {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyLatestNetworkContract",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getBool"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "contract.exists",
                   "parts": [
                    "contract.exists"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid or outdated network contract",
             "parts": [
              "Invalid or outdated network contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyLatestContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "contract.address",
                    "parts": [
                     "contract.address"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid or outdated contract",
             "parts": [
              "Invalid or outdated contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyRegisteredNode",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getBool"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "node.exists",
                   "parts": [
                    "node.exists"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "Identifier",
                   "name": "_nodeAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid node",
             "parts": [
              "Invalid node"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyTrustedNode",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getBool"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "dao.trustednodes.",
                   "parts": [
                    "dao.trustednodes."
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "StringLiteral",
                   "value": "member",
                   "parts": [
                    "member"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "Identifier",
                   "name": "_nodeAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid trusted node",
             "parts": [
              "Invalid trusted node"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyRegisteredMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getBool"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "minipool.exists",
                   "parts": [
                    "minipool.exists"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "Identifier",
                   "name": "_minipoolAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid minipool",
             "parts": [
              "Invalid minipool"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyGuardian",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketStorage"
               },
               "memberName": "getGuardian"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Account is not a temporary guardian",
             "parts": [
              "Account is not a temporary guardian"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketStorage"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "RocketStorageInterface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_rocketStorageAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "contractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "contractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract not found",
             "parts": [
              "Contract not found"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractAddress"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractAddressUnsafe",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "contractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "contractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractAddress"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractName",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "contractName",
            "identifier": {
             "type": "Identifier",
             "name": "contractName"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.name",
                 "parts": [
                  "contract.name"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "contractName"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract not found",
             "parts": [
              "Contract not found"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractName"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRevertMsg",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_returnData",
         "identifier": {
          "type": "Identifier",
          "name": "_returnData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_returnData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "68",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "StringLiteral",
            "value": "Transaction reverted silently",
            "parts": [
             "Transaction reverted silently"
            ],
            "isUnicode": [
             false
            ]
           }
          },
          "falseBody": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_returnData"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_returnData",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x04"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_returnData"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "string",
               "stateMutability": null
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getString"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getBytes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getInt"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getBytes32"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setString"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setBytes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setInt"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "setBytes32"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteString",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteString"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteBytes"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteInt"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deleteBytes32",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "deleteBytes32"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "addUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "subUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "subUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/util/AddressSetStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AddressSetStorage",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "AddressSetStorageInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".count",
                 "parts": [
                  ".count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".item",
                 "parts": [
                  ".item"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getIndexOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "int",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "addItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Item already exists in set",
             "parts": [
              "Item already exists in set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".count",
                 "parts": [
                  ".count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".item",
                 "parts": [
                  ".item"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "count"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "count"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".count",
                 "parts": [
                  ".count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "count"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "addressSetStorage",
           "parts": [
            "addressSetStorage"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "UnaryOperation",
              "operator": "--",
              "subExpression": {
               "type": "Identifier",
               "name": "index"
              },
              "isPrefix": false
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Item does not exist in set",
             "parts": [
              "Item does not exist in set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".count",
                 "parts": [
                  ".count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "count"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "lastItem",
               "identifier": {
                "type": "Identifier",
                "name": "lastItem"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".item",
                    "parts": [
                     ".item"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "count"
                     },
                     "memberName": "sub"
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".item",
                    "parts": [
                     ".item"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "index"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "lastItem"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "lastItem"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "index"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".count",
                 "parts": [
                  ".count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "count"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "addressSetStorage",
           "parts": [
            "addressSetStorage"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/util/AddressQueueStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressQueueStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressQueueStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressQueueStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AddressQueueStorage",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "AddressQueueStorageInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capacity",
         "identifier": {
          "type": "Identifier",
          "name": "capacity"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "**",
          "left": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          },
          "right": {
           "type": "NumberLiteral",
           "number": "255",
           "subdenomination": null
          }
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "**",
        "left": {
         "type": "NumberLiteral",
         "number": "2",
         "subdenomination": null
        },
        "right": {
         "type": "NumberLiteral",
         "number": "255",
         "subdenomination": null
        }
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "start",
            "identifier": {
             "type": "Identifier",
             "name": "start"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".start",
                 "parts": [
                  ".start"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "end",
            "identifier": {
             "type": "Identifier",
             "name": "end"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".end",
                 "parts": [
                  ".end"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "end"
           },
           "right": {
            "type": "Identifier",
            "name": "start"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "end"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "end"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "capacity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "end"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "start"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getUint"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_key"
                  },
                  {
                   "type": "StringLiteral",
                   "value": ".start",
                   "parts": [
                    ".start"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "Identifier",
            "name": "capacity"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "index"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "index"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "capacity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".item",
                 "parts": [
                  ".item"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getIndexOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "int",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "UnaryOperation",
            "operator": "-",
            "subExpression": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            },
            "isPrefix": true
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "Identifier",
               "name": "index"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "int",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getUint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "abi"
                      },
                      "memberName": "encodePacked"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "_key"
                      },
                      {
                       "type": "StringLiteral",
                       "value": ".start",
                       "parts": [
                        ".start"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "index"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "index"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "int",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "capacity"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "index"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "enqueueItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLength"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_key"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "capacity"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Queue is at capacity",
             "parts": [
              "Queue is at capacity"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Item already exists in queue",
             "parts": [
              "Item already exists in queue"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".end",
                 "parts": [
                  ".end"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".item",
                 "parts": [
                  ".item"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "index"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "index"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "Identifier",
            "name": "capacity"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "index"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "index"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "capacity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".end",
                 "parts": [
                  ".end"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "addressQueueStorage",
           "parts": [
            "addressQueueStorage"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLength"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_key"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Queue is empty",
             "parts": [
              "Queue is empty"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "start",
            "identifier": {
             "type": "Identifier",
             "name": "start"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".start",
                 "parts": [
                  ".start"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "item",
            "identifier": {
             "type": "Identifier",
             "name": "item"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".item",
                 "parts": [
                  ".item"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "start"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "start"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "start"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "start"
           },
           "right": {
            "type": "Identifier",
            "name": "capacity"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "start"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "start"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "capacity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "item"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".start",
                 "parts": [
                  ".start"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "start"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "item"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "addressQueueStorage",
           "parts": [
            "addressQueueStorage"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeItem",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "UnaryOperation",
              "operator": "--",
              "subExpression": {
               "type": "Identifier",
               "name": "index"
              },
              "isPrefix": false
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Item does not exist in queue",
             "parts": [
              "Item does not exist in queue"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "lastIndex",
            "identifier": {
             "type": "Identifier",
             "name": "lastIndex"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".end",
                 "parts": [
                  ".end"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "lastIndex"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "lastIndex"
            },
            "right": {
             "type": "Identifier",
             "name": "capacity"
            }
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lastIndex"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "lastIndex"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "index"
           },
           "right": {
            "type": "Identifier",
            "name": "lastIndex"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "lastItem",
               "identifier": {
                "type": "Identifier",
                "name": "lastItem"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".item",
                    "parts": [
                     ".item"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "lastIndex"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".item",
                    "parts": [
                     ".item"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "index"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "lastItem"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": ".index",
                    "parts": [
                     ".index"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "lastItem"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "index"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".index",
                 "parts": [
                  ".index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_key"
                },
                {
                 "type": "StringLiteral",
                 "value": ".end",
                 "parts": [
                  ".end"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "lastIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "addressQueueStorage",
           "parts": [
            "addressQueueStorage"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/token/RocketTokenRPL.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/token/RocketTokenRPLInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/token/RocketTokenRPLInterface.sol",
      "parts": [
       "../../interface/token/RocketTokenRPLInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketTokenRPL",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Burnable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketTokenRPLInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalInitialSupply",
         "identifier": {
          "type": "Identifier",
          "name": "totalInitialSupply"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "18000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "18000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "inflationInterval",
         "identifier": {
          "type": "Identifier",
          "name": "inflationInterval"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": "days"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": "days"
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSwappedRPL",
         "identifier": {
          "type": "Identifier",
          "name": "totalSwappedRPL"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "inflationCalcTime",
         "identifier": {
          "type": "Identifier",
          "name": "inflationCalcTime"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "rplFixedSupplyContract",
         "identifier": {
          "type": "Identifier",
          "name": "rplFixedSupplyContract"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "IERC20"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "IERC20"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "address"
          },
          "arguments": [
           {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "EventDefinition",
       "name": "RPLInflationLog",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "inflationCalcTime",
         "identifier": {
          "type": "Identifier",
          "name": "inflationCalcTime"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RPLFixedSupplyBurn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_rocketTokenRPLFixedSupplyAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketTokenRPLFixedSupplyAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rplFixedSupplyContract"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_rocketTokenRPLFixedSupplyAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "totalInitialSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "ERC20",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "Rocket Pool Protocol",
           "parts": [
            "Rocket Pool Protocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "StringLiteral",
           "value": "RPL",
           "parts": [
            "RPL"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationCalcTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "inflationStartTime",
            "identifier": {
             "type": "Identifier",
             "name": "inflationStartTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInflationIntervalStartTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "inflationCalcTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "inflationStartTime"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "inflationStartTime"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "inflationCalcTime"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "inflationInterval"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsInflationInterface"
            },
            "name": "daoSettingsInflation",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsInflation"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsInflationInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsInflation",
               "parts": [
                "rocketDAOProtocolSettingsInflation"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoSettingsInflation"
            },
            "memberName": "getInflationIntervalRate"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalStartTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsInflationInterface"
            },
            "name": "daoSettingsInflation",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsInflation"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsInflationInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsInflation",
               "parts": [
                "rocketDAOProtocolSettingsInflation"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoSettingsInflation"
            },
            "memberName": "getInflationIntervalStartTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationRewardsContractAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketRewardsPool",
             "parts": [
              "rocketRewardsPool"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalsPassed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "inflationLastCalculatedTime",
            "identifier": {
             "type": "Identifier",
             "name": "inflationLastCalculatedTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInflationCalcTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getInflationIntervalsPassed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "inflationLastCalculatedTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getInflationIntervalsPassed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_inflationLastCalcTime",
         "identifier": {
          "type": "Identifier",
          "name": "_inflationLastCalcTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_inflationLastCalcTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "block"
                    },
                    "memberName": "timestamp"
                   }
                  ],
                  "isArray": false
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_inflationLastCalcTime"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "inflationInterval"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "inflationCalculate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "intervalsSinceLastMint",
            "identifier": {
             "type": "Identifier",
             "name": "intervalsSinceLastMint"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInflationIntervalsPassed"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_inflationCalculate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "intervalsSinceLastMint"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_inflationCalculate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_intervalsSinceLastMint",
         "identifier": {
          "type": "Identifier",
          "name": "_intervalsSinceLastMint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "inflationTokenAmount",
            "identifier": {
             "type": "Identifier",
             "name": "inflationTokenAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_intervalsSinceLastMint"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "inflationRate",
               "identifier": {
                "type": "Identifier",
                "name": "inflationRate"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getInflationIntervalRate"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "inflationRate"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "totalSupplyCurrent",
                  "identifier": {
                   "type": "Identifier",
                   "name": "totalSupplyCurrent"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "totalSupply"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "newTotalSupply",
                  "identifier": {
                   "type": "Identifier",
                   "name": "newTotalSupply"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "Identifier",
                 "name": "totalSupplyCurrent"
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "i",
                   "identifier": {
                    "type": "Identifier",
                    "name": "i"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_intervalsSinceLastMint"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "isPrefix": false
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "newTotalSupply"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "newTotalSupply"
                        },
                        "memberName": "mul"
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "inflationRate"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      },
                      "memberName": "div"
                     },
                     "arguments": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "18",
                        "subdenomination": null
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "inflationTokenAmount"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "newTotalSupply"
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "totalSupplyCurrent"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "inflationTokenAmount"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "inflationMintTokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "inflationLastCalcTime",
            "identifier": {
             "type": "Identifier",
             "name": "inflationLastCalcTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInflationCalcTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "intervalsSinceLastMint",
            "identifier": {
             "type": "Identifier",
             "name": "intervalsSinceLastMint"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getInflationIntervalsPassed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "inflationLastCalcTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "intervalsSinceLastMint"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rocketVaultAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketVault",
             "parts": [
              "rocketVault"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "rocketVaultAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "rocketVault address not set",
             "parts": [
              "rocketVault address not set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVaultContract",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVaultContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newTokens",
            "identifier": {
             "type": "Identifier",
             "name": "newTokens"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_inflationCalculate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "intervalsSinceLastMint"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "inflationCalcTime"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "inflationLastCalcTime"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "inflationInterval"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "intervalsSinceLastMint"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "newTokens"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_mint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "newTokens"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IERC20"
               },
               "name": "rplInflationContract",
               "identifier": {
                "type": "Identifier",
                "name": "rplInflationContract"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "vaultAllowance",
               "identifier": {
                "type": "Identifier",
                "name": "vaultAllowance"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplFixedSupplyContract"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "rocketVaultAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rplInflationContract"
                 },
                 "memberName": "approve"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "rocketVaultAddress"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "vaultAllowance"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "newTokens"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "Allowance for Rocket Vault could not be approved",
                "parts": [
                 "Allowance for Rocket Vault could not be approved"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketVaultContract"
               },
               "memberName": "depositToken"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketRewardsPool",
                "parts": [
                 "rocketRewardsPool"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IERC20"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "this"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "newTokens"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLInflationLog"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "newTokens"
            },
            {
             "type": "Identifier",
             "name": "inflationCalcTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "newTokens"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "swapTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Please enter valid amount of RPL to swap",
             "parts": [
              "Please enter valid amount of RPL to swap"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplFixedSupplyContract"
              },
              "memberName": "transferFrom"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Token transfer from existing RPL contract was not successful",
             "parts": [
              "Token transfer from existing RPL contract was not successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "this"
              },
              "memberName": "transfer"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Token transfer from RPL inflation contract was not successful",
             "parts": [
              "Token transfer from RPL inflation contract was not successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalSwappedRPL"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalSwappedRPL"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLFixedSupplyBurn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/token/RocketTokenRETH.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkBalancesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkBalancesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkBalancesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/token/RocketTokenRETHInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/token/RocketTokenRETHInterface.sol",
      "parts": [
       "../../interface/token/RocketTokenRETHInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketTokenRETH",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketTokenRETHInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "EtherDeposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokensMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "ethAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokensBurned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "ethAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "ERC20",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "Rocket Pool ETH",
           "parts": [
            "Rocket Pool ETH"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "StringLiteral",
           "value": "rETH",
           "parts": [
            "rETH"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherDeposited"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEthValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_rethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkBalancesInterface"
            },
            "name": "rocketNetworkBalances",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkBalancesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkBalances",
               "parts": [
                "rocketNetworkBalances"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalEthBalance",
            "identifier": {
             "type": "Identifier",
             "name": "totalEthBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "memberName": "getTotalETHBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rethSupply",
            "identifier": {
             "type": "Identifier",
             "name": "rethSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "memberName": "getTotalRETHSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "rethSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "_rethAmount"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rethAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "totalEthBalance"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rethSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRethValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkBalancesInterface"
            },
            "name": "rocketNetworkBalances",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkBalancesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkBalances",
               "parts": [
                "rocketNetworkBalances"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalEthBalance",
            "identifier": {
             "type": "Identifier",
             "name": "totalEthBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "memberName": "getTotalETHBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rethSupply",
            "identifier": {
             "type": "Identifier",
             "name": "rethSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkBalances"
            },
            "memberName": "getTotalRETHSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "rethSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "_ethAmount"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "totalEthBalance"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot calculate rETH token amount while total network balance is zero",
             "parts": [
              "Cannot calculate rETH token amount while total network balance is zero"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_ethAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rethSupply"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalEthBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExchangeRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getEthValue"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": "ether"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalCollateral",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDepositPool"
              },
              "memberName": "getExcessBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "balance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCollateralRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalEthValue",
            "identifier": {
             "type": "Identifier",
             "name": "totalEthValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getEthValue"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "totalEthValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "calcBase"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "balance"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalEthValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositExcess",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherDeposited"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDepositPool",
           "parts": [
            "rocketDepositPool"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rethAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rethAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getRethValue"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_ethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "rethAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid token mint amount",
             "parts": [
              "Invalid token mint amount"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "rethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokensMinted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "rethAmount"
            },
            {
             "type": "Identifier",
             "name": "_ethAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDepositPool",
           "parts": [
            "rocketDepositPool"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_rethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_rethAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid token burn amount",
             "parts": [
              "Invalid token burn amount"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "balanceOf"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "_rethAmount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient rETH balance",
             "parts": [
              "Insufficient rETH balance"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ethAmount",
            "identifier": {
             "type": "Identifier",
             "name": "ethAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getEthValue"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ethBalance",
            "identifier": {
             "type": "Identifier",
             "name": "ethBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getTotalCollateral"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "ethBalance"
             },
             "right": {
              "type": "Identifier",
              "name": "ethAmount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient ETH balance for exchange",
             "parts": [
              "Insufficient ETH balance for exchange"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_rethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "withdrawDepositCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "ethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "ethAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokensBurned"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_rethAmount"
            },
            {
             "type": "Identifier",
             "name": "ethAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawDepositCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethRequired",
         "identifier": {
          "type": "Identifier",
          "name": "_ethRequired"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ethBalance",
            "identifier": {
             "type": "Identifier",
             "name": "ethBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "memberName": "balance"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "ethBalance"
           },
           "right": {
            "type": "Identifier",
            "name": "_ethRequired"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "memberName": "withdrawExcessBalance"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_ethRequired"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "ethBalance"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositExcessCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "collateralRate",
            "identifier": {
             "type": "Identifier",
             "name": "collateralRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getCollateralRate"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "targetCollateralRate",
            "identifier": {
             "type": "Identifier",
             "name": "targetCollateralRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getTargetRethCollateralRate"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "collateralRate"
           },
           "right": {
            "type": "Identifier",
            "name": "targetCollateralRate"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "targetCollateral",
               "identifier": {
                "type": "Identifier",
                "name": "targetCollateral"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "balance"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "targetCollateralRate"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateralRate"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "balance"
              },
              "right": {
               "type": "Identifier",
               "name": "targetCollateral"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "excessCollateral",
                  "identifier": {
                   "type": "Identifier",
                   "name": "excessCollateral"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "this"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "balance"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "targetCollateral"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "NameValueExpression",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketDepositPool"
                   },
                   "memberName": "recycleExcessCollateral"
                  },
                  "arguments": {
                   "type": "NameValueList",
                   "names": [
                    "value"
                   ],
                   "identifiers": [
                    {
                     "type": "Identifier",
                     "name": "value"
                    }
                   ],
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "excessCollateral"
                    }
                   ]
                  }
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_beforeTokenTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "from"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "key",
               "identifier": {
                "type": "Identifier",
                "name": "key"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "user.deposit.block",
                  "parts": [
                   "user.deposit.block"
                  ],
                  "isUnicode": [
                   false
                  ]
                 },
                 {
                  "type": "Identifier",
                  "name": "from"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "lastDepositBlock",
               "identifier": {
                "type": "Identifier",
                "name": "lastDepositBlock"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getUint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "key"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "lastDepositBlock"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "depositDelay",
                  "identifier": {
                   "type": "Identifier",
                   "name": "depositDelay"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getUint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "abi"
                      },
                      "memberName": "encodePacked"
                     },
                     "arguments": [
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "keccak256"
                       },
                       "arguments": [
                        {
                         "type": "StringLiteral",
                         "value": "dao.protocol.setting.network",
                         "parts": [
                          "dao.protocol.setting.network"
                         ],
                         "isUnicode": [
                          false
                         ]
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      },
                      {
                       "type": "StringLiteral",
                       "value": "network.reth.deposit.delay",
                       "parts": [
                        "network.reth.deposit.delay"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "blocksPassed",
                  "identifier": {
                   "type": "Identifier",
                   "name": "blocksPassed"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "block"
                   },
                   "memberName": "number"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "lastDepositBlock"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "blocksPassed"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "depositDelay"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Not enough time has passed since deposit",
                   "parts": [
                    "Not enough time has passed since deposit"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "deleteUint"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "key"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/token/temp/RocketTokenDummyRPL.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/access/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/access/Ownable.sol",
      "parts": [
       "@openzeppelin/contracts/access/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketTokenDummyRPL",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimalPlaces",
         "identifier": {
          "type": "Identifier",
          "name": "decimalPlaces"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "18",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "18",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "exponent",
         "identifier": {
          "type": "Identifier",
          "name": "exponent"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "**",
          "left": {
           "type": "NumberLiteral",
           "number": "10",
           "subdenomination": null
          },
          "right": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "decimalPlaces"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "**",
        "left": {
         "type": "NumberLiteral",
         "number": "10",
         "subdenomination": null
        },
        "right": {
         "type": "FunctionCall",
         "expression": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "arguments": [
          {
           "type": "Identifier",
           "name": "decimalPlaces"
          }
         ],
         "names": [],
         "identifiers": []
        }
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupplyCap",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupplyCap"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "*",
          "left": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "NumberLiteral",
            "number": "18.5",
            "subdenomination": null
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "**",
              "left": {
               "type": "NumberLiteral",
               "number": "10",
               "subdenomination": null
              },
              "right": {
               "type": "NumberLiteral",
               "number": "6",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           }
          },
          "right": {
           "type": "Identifier",
           "name": "exponent"
          }
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "*",
        "left": {
         "type": "BinaryOperation",
         "operator": "*",
         "left": {
          "type": "NumberLiteral",
          "number": "18.5",
          "subdenomination": null
         },
         "right": {
          "type": "TupleExpression",
          "components": [
           {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
             "type": "NumberLiteral",
             "number": "10",
             "subdenomination": null
            },
            "right": {
             "type": "NumberLiteral",
             "number": "6",
             "subdenomination": null
            }
           }
          ],
          "isArray": false
         }
        },
        "right": {
         "type": "Identifier",
         "name": "exponent"
        }
       }
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "MintToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minter",
         "identifier": {
          "type": "Identifier",
          "name": "_minter"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ERC20",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "Rocket Pool Dummy RPL",
           "parts": [
            "Rocket Pool Dummy RPL"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "StringLiteral",
           "value": "DRPL",
           "parts": [
            "DRPL"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "totalSupply"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_amount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "totalSupplyCap"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MintToken"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemainingTokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "totalSupplyCap"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/rewards/RocketRewardsPool.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/token/RocketTokenRPLInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/token/RocketTokenRPLInterface.sol",
      "parts": [
       "../../interface/token/RocketTokenRPLInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/rewards/RocketRewardsPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/rewards/RocketRewardsPoolInterface.sol",
      "parts": [
       "../../interface/rewards/RocketRewardsPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketRewardsPool",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketRewardsPoolInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "RPLTokensClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "claimingContract"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "claimingAddress",
         "identifier": {
          "type": "Identifier",
          "name": "claimingAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyClaimContract",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimingContractExists"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractName"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Not a valid rewards claiming contact",
             "parts": [
              "Not a valid rewards claiming contact"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyEnabledClaimContract",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimingContractEnabled"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractName"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Not a valid rewards claiming contact or it has been disabled",
             "parts": [
              "Not a valid rewards claiming contact or it has been disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rewards.pool.claim.interval.time.start",
               "parts": [
                "rewards.pool.claim.interval.time.start"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "balanceOfToken"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketRewardsPool",
             "parts": [
              "rocketRewardsPool"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketTokenRPL",
                 "parts": [
                  "rocketTokenRPL"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTimeStart",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rewards.pool.claim.interval.time.start",
               "parts": [
                "rewards.pool.claim.interval.time.start"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTimeStartComputed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTimeStart",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTimeStart"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalTimeStart"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTime",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimIntervalTimeStartComputed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStart"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getClaimIntervalTimeStartComputed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTimeStart",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTimeStart"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTime",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalsPassed",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalsPassed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimIntervalsPassed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimIntervalTimeStart"
            },
            {
             "type": "Identifier",
             "name": "_claimIntervalTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "claimIntervalsPassed"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "_claimIntervalTimeStart"
           },
           "falseExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_claimIntervalTimeStart"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_claimIntervalTime"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "claimIntervalsPassed"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalsPassed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimIntervalsPassed"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimIntervalTimeStart"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimIntervalTime"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getClaimIntervalsPassed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTimeStart",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTimeStart"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTime",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_claimIntervalTimeStart"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimIntervalTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "daoSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "memberName": "getRewardsClaimIntervalTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimTimeLastMade",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rewards.pool.claim.interval.time.last",
               "parts": [
                "rewards.pool.claim.interval.time.last"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "daoSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoSettingsRewards"
               },
               "memberName": "getRewardsClaimerPercTimeUpdated"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_contractName"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractEnabled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "daoSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "daoSettingsRewards"
              },
              "memberName": "getRewardsClaimerPerc"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_contractName"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "BooleanLiteral",
            "value": true
           },
           "falseExpression": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractTotalClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimingContractTotalClaimed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimIntervalTimeStartComputed"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getClaimingContractTotalClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTimeStartComputed",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTimeStartComputed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.contract.total",
                 "parts": [
                  "rewards.pool.claim.interval.contract.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_claimIntervalTimeStartComputed"
                },
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserHasClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalStartTime",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalStartTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.claimer.address",
                 "parts": [
                  "rewards.pool.claim.interval.claimer.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_claimIntervalStartTime"
                },
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                },
                {
                 "type": "Identifier",
                 "name": "_claimerAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserRegisteredTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.contract.registered.time",
                 "parts": [
                  "rewards.pool.claim.contract.registered.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                },
                {
                 "type": "Identifier",
                 "name": "_claimerAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserCanClaim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimingContractUserCanClaim"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            },
            {
             "type": "Identifier",
             "name": "_claimerAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimIntervalTime"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getClaimingContractUserCanClaim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTime",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "registeredTime",
            "identifier": {
             "type": "Identifier",
             "name": "registeredTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimingContractUserRegisteredTime"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            },
            {
             "type": "Identifier",
             "name": "_claimerAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "registeredTime"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registeredTime"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_claimIntervalTime"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              }
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getClaimingContractPerc"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_claimingContract"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "trueExpression": {
            "type": "BooleanLiteral",
            "value": true
           },
           "falseExpression": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserTotalCurrent",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimIntervalsPassed"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getUint"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rewards.pool.claim.interval.claimers.total.current",
                  "parts": [
                   "rewards.pool.claim.interval.claimers.total.current"
                  ],
                  "isUnicode": [
                   false
                  ]
                 },
                 {
                  "type": "Identifier",
                  "name": "_claimingContract"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "falseExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getClaimingContractUserTotalNext"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_claimingContract"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractUserTotalNext",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.claimers.total.next",
                 "parts": [
                  "rewards.pool.claim.interval.claimers.total.next"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractPercLast",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.contract.perc.current",
                 "parts": [
                  "rewards.pool.claim.interval.contract.perc.current"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimIntervalRewardsTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketTokenRPLInterface"
            },
            "name": "rplContract",
            "identifier": {
             "type": "Identifier",
             "name": "rplContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketTokenRPLInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketTokenRPL",
               "parts": [
                "rocketTokenRPL"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rewardsTotal",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getClaimIntervalsPassed"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "rewardsTotal"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rplContract"
                  },
                  "memberName": "inflationCalculate"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketVault"
                  },
                  "memberName": "balanceOfToken"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "rocketRewardsPool",
                   "parts": [
                    "rocketRewardsPool"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IERC20"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "getContractAddress"
                     },
                     "arguments": [
                      {
                       "type": "StringLiteral",
                       "value": "rocketTokenRPL",
                       "parts": [
                        "rocketTokenRPL"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "rewardsTotal"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getUint"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "keccak256"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "rewards.pool.claim.interval.total",
                   "parts": [
                    "rewards.pool.claim.interval.total"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "rewardsTotal"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "daoSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimContractPerc",
            "identifier": {
             "type": "Identifier",
             "name": "claimContractPerc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoSettingsRewards"
            },
            "memberName": "getRewardsClaimerPerc"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "daoSettingsRewards"
             },
             "memberName": "getRewardsClaimerPercTimeUpdated"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_claimingContract"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getClaimIntervalTimeStartComputed"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "claimContractPerc"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getClaimingContractPercLast"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_claimingContract"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "claimContractPerc"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimingContractAllowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimContractPerc",
            "identifier": {
             "type": "Identifier",
             "name": "claimContractPerc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimingContractPerc"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalRewardsTotal",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalRewardsTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalRewardsTotal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "contractClaimTotal",
            "identifier": {
             "type": "Identifier",
             "name": "contractClaimTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "claimContractPerc"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "claimIntervalRewardsTotal"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "contractClaimTotal"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "claimContractPerc"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "claimIntervalRewardsTotal"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "calcBase"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractClaimTotal"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimerAmountPerc",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAmountPerc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getClaimingContractUserCanClaim"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_claimingContract"
             },
             {
              "type": "Identifier",
              "name": "_claimerAddress"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTimeStartComptued",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComptued"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalTimeStartComputed"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimingContractTotalClaimed",
            "identifier": {
             "type": "Identifier",
             "name": "claimingContractTotalClaimed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimingContractTotalClaimed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComptued"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            },
            {
             "type": "Identifier",
             "name": "_claimerAddress"
            },
            {
             "type": "Identifier",
             "name": "_claimerAmountPerc"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComptued"
            },
            {
             "type": "Identifier",
             "name": "claimingContractTotalClaimed"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getClaimAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_claimingContract",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContract"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimerAmountPerc",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAmountPerc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimIntervalTimeStartComputed",
         "identifier": {
          "type": "Identifier",
          "name": "_claimIntervalTimeStartComputed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimingContractTotalClaimed",
         "identifier": {
          "type": "Identifier",
          "name": "_claimingContractTotalClaimed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "contractClaimTotal",
            "identifier": {
             "type": "Identifier",
             "name": "contractClaimTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimingContractAllowance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_claimingContract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimerTotal",
            "identifier": {
             "type": "Identifier",
             "name": "claimerTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "contractClaimTotal"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "_claimerAmountPerc"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<=",
               "left": {
                "type": "Identifier",
                "name": "_claimerAmountPerc"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "ether"
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "_claimerAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0x0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimingContractEnabled"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_claimingContract"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimingContractUserHasClaimed"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_claimIntervalTimeStartComputed"
              },
              {
               "type": "Identifier",
               "name": "_claimingContract"
              },
              {
               "type": "Identifier",
               "name": "_claimerAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "isPrefix": true
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "claimerTotal"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_claimerAmountPerc"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "contractClaimTotal"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "calcBase"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "claimerTotal"
              },
              "right": {
               "type": "Conditional",
               "condition": {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "claimerTotal"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_claimingContractTotalClaimed"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "Identifier",
                 "name": "contractClaimTotal"
                }
               },
               "trueExpression": {
                "type": "Identifier",
                "name": "claimerTotal"
               },
               "falseExpression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "claimerTotal"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "registerClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enabled",
         "identifier": {
          "type": "Identifier",
          "name": "_enabled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "contractName",
            "identifier": {
             "type": "Identifier",
             "name": "contractName"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractName"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "registeredTime",
            "identifier": {
             "type": "Identifier",
             "name": "registeredTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimersIntervalTotalUpdate",
            "identifier": {
             "type": "Identifier",
             "name": "claimersIntervalTotalUpdate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimingContractUserTotalNext"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractName"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_enabled"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getClaimingContractUserRegisteredTime"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "contractName"
                  },
                  {
                   "type": "Identifier",
                   "name": "_claimerAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "Claimer is already registered",
                "parts": [
                 "Claimer is already registered"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "registeredTime"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rewards.pool.claim.interval.claimers.total.next",
                    "parts": [
                     "rewards.pool.claim.interval.claimers.total.next"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "claimersIntervalTotalUpdate"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getClaimingContractUserRegisteredTime"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "contractName"
                  },
                  {
                   "type": "Identifier",
                   "name": "_claimerAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "Claimer is not registered",
                "parts": [
                 "Claimer is not registered"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rewards.pool.claim.interval.claimers.total.next",
                    "parts": [
                     "rewards.pool.claim.interval.claimers.total.next"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "claimersIntervalTotalUpdate"
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.contract.registered.time",
                 "parts": [
                  "rewards.pool.claim.contract.registered.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "contractName"
                },
                {
                 "type": "Identifier",
                 "name": "_claimerAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "registeredTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyClaimContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_claimerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_toAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_toAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_claimerAmountPerc",
         "identifier": {
          "type": "Identifier",
          "name": "_claimerAmountPerc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "contractName",
            "identifier": {
             "type": "Identifier",
             "name": "contractName"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractName"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTime",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalTime"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getClaimingContractUserCanClaim"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "contractName"
              },
              {
               "type": "Identifier",
               "name": "_claimerAddress"
              },
              {
               "type": "Identifier",
               "name": "claimIntervalTime"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Registered claimer is not registered to claim or has not waited one claim interval",
             "parts": [
              "Registered claimer is not registered to claim or has not waited one claim interval"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rplContractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rplContractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketTokenRPL",
             "parts": [
              "rocketTokenRPL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketTokenRPLInterface"
            },
            "name": "rplContract",
            "identifier": {
             "type": "Identifier",
             "name": "rplContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketTokenRPLInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rplContractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTimeStart",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTimeStart"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getClaimIntervalTimeStart"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalTimeStartComputed",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComputed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimIntervalTimeStartComputed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStart"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimIntervalsPassed",
            "identifier": {
             "type": "Identifier",
             "name": "claimIntervalsPassed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimIntervalsPassed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStart"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "claimIntervalsPassed"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplContract"
               },
               "memberName": "inflationMintTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rewards.pool.claim.interval.total",
                  "parts": [
                   "rewards.pool.claim.interval.total"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketVault"
                 },
                 "memberName": "balanceOfToken"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketRewardsPool",
                  "parts": [
                   "rocketRewardsPool"
                  ],
                  "isUnicode": [
                   false
                  ]
                 },
                 {
                  "type": "Identifier",
                  "name": "rplContract"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rewards.pool.claim.interval.time.start",
                  "parts": [
                   "rewards.pool.claim.interval.time.start"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "claimIntervalTimeStartComputed"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "daoClaimContractAllowance",
               "identifier": {
                "type": "Identifier",
                "name": "daoClaimContractAllowance"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getClaimingContractAllowance"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketClaimDAO",
                "parts": [
                 "rocketClaimDAO"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "daoClaimContractAllowance"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "address",
                   "stateMutability": null
                  },
                  "name": "daoClaimContractAddress",
                  "identifier": {
                   "type": "Identifier",
                   "name": "daoClaimContractAddress"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getContractAddress"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "rocketClaimDAO",
                   "parts": [
                    "rocketClaimDAO"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketVault"
                  },
                  "memberName": "transferToken"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "rocketClaimDAO",
                   "parts": [
                    "rocketClaimDAO"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "Identifier",
                   "name": "rplContract"
                  },
                  {
                   "type": "Identifier",
                   "name": "daoClaimContractAllowance"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "setUint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "abi"
                      },
                      "memberName": "encodePacked"
                     },
                     "arguments": [
                      {
                       "type": "StringLiteral",
                       "value": "rewards.pool.claim.interval.contract.perc.current",
                       "parts": [
                        "rewards.pool.claim.interval.contract.perc.current"
                       ],
                       "isUnicode": [
                        false
                       ]
                      },
                      {
                       "type": "StringLiteral",
                       "value": "rocketClaimDAO",
                       "parts": [
                        "rocketClaimDAO"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "getClaimingContractPerc"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "rocketClaimDAO",
                     "parts": [
                      "rocketClaimDAO"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "setUint"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "abi"
                      },
                      "memberName": "encodePacked"
                     },
                     "arguments": [
                      {
                       "type": "StringLiteral",
                       "value": "rewards.pool.claim.interval.contract.total",
                       "parts": [
                        "rewards.pool.claim.interval.contract.total"
                       ],
                       "isUnicode": [
                        false
                       ]
                      },
                      {
                       "type": "Identifier",
                       "name": "claimIntervalTimeStartComputed"
                      },
                      {
                       "type": "StringLiteral",
                       "value": "rocketClaimDAO",
                       "parts": [
                        "rocketClaimDAO"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "_getClaimingContractTotalClaimed"
                     },
                     "arguments": [
                      {
                       "type": "StringLiteral",
                       "value": "rocketClaimDAO",
                       "parts": [
                        "rocketClaimDAO"
                       ],
                       "isUnicode": [
                        false
                       ]
                      },
                      {
                       "type": "Identifier",
                       "name": "claimIntervalTimeStartComputed"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "add"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "daoClaimContractAllowance"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "RPLTokensClaimed"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "daoClaimContractAddress"
                  },
                  {
                   "type": "Identifier",
                   "name": "daoClaimContractAddress"
                  },
                  {
                   "type": "Identifier",
                   "name": "daoClaimContractAllowance"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "block"
                   },
                   "memberName": "timestamp"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getClaimingContractTotalClaimed"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "contractName"
             },
             {
              "type": "Identifier",
              "name": "claimIntervalTimeStartComputed"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "claimContractAllowance",
               "identifier": {
                "type": "Identifier",
                "name": "claimContractAllowance"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getClaimingContractAllowance"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "contractName"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "claimContractAllowance"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "Claiming contract must have an allowance of more than 0",
                "parts": [
                 "Claiming contract must have an allowance of more than 0"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rewards.pool.claim.interval.contract.perc.current",
                    "parts": [
                     "rewards.pool.claim.interval.contract.perc.current"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getClaimingContractPerc"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "contractName"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rewards.pool.claim.interval.contract.allowance",
                    "parts": [
                     "rewards.pool.claim.interval.contract.allowance"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "claimContractAllowance"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rewards.pool.claim.interval.claimers.total.current",
                    "parts": [
                     "rewards.pool.claim.interval.claimers.total.current"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "contractName"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getClaimingContractUserTotalNext"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "contractName"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimingContractTotalClaimed",
            "identifier": {
             "type": "Identifier",
             "name": "claimingContractTotalClaimed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimingContractTotalClaimed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractName"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComputed"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimAmount",
            "identifier": {
             "type": "Identifier",
             "name": "claimAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getClaimAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractName"
            },
            {
             "type": "Identifier",
             "name": "_claimerAddress"
            },
            {
             "type": "Identifier",
             "name": "_claimerAmountPerc"
            },
            {
             "type": "Identifier",
             "name": "claimIntervalTimeStartComputed"
            },
            {
             "type": "Identifier",
             "name": "claimingContractTotalClaimed"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "claimAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Claimer is not entitled to tokens, they have already claimed in this interval or they are claiming more rewards than available to this claiming contract.",
             "parts": [
              "Claimer is not entitled to tokens, they have already claimed in this interval or they are claiming more rewards than available to this claiming contract."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "withdrawToken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_toAddress"
            },
            {
             "type": "Identifier",
             "name": "rplContract"
            },
            {
             "type": "Identifier",
             "name": "claimAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.claimer.address",
                 "parts": [
                  "rewards.pool.claim.interval.claimer.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "claimIntervalTimeStartComputed"
                },
                {
                 "type": "Identifier",
                 "name": "contractName"
                },
                {
                 "type": "Identifier",
                 "name": "_claimerAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rewards.pool.claim.interval.contract.total",
                 "parts": [
                  "rewards.pool.claim.interval.contract.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "claimIntervalTimeStartComputed"
                },
                {
                 "type": "Identifier",
                 "name": "contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "claimingContractTotalClaimed"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "claimAmount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rewards.pool.claim.interval.time.last",
               "parts": [
                "rewards.pool.claim.interval.time.last"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLTokensClaimed"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "contractName"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_claimerAddress"
            },
            {
             "type": "Identifier",
             "name": "claimAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyEnabledClaimContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/rewards/claims/RocketClaimTrustedNode.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/node/RocketNodeManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/node/RocketNodeManagerInterface.sol",
      "parts": [
       "../../../interface/node/RocketNodeManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
      "parts": [
       "../../../interface/rewards/RocketRewardsPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
      "parts": [
       "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimTrustedNode",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketClaimTrustedNodeInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "getClaimingContractEnabled"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimTrustedNode",
             "parts": [
              "rocketClaimTrustedNode"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimPossible",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "getClaimingContractUserCanClaim"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimTrustedNode",
             "parts": [
              "rocketClaimTrustedNode"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "_trustedNodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_trustedNodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "trustedNodesClaimIntervalTotal",
            "identifier": {
             "type": "Identifier",
             "name": "trustedNodesClaimIntervalTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "getClaimingContractUserTotalCurrent"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimTrustedNode",
             "parts": [
              "rocketClaimTrustedNode"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "trustedNodesClaimIntervalTotal"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "trustedNodesClaimIntervalTotal"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rewardsPool"
                },
                "memberName": "getClaimingContractUserTotalNext"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketClaimTrustedNode",
                 "parts": [
                  "rocketClaimTrustedNode"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimPossible"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_trustedNodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "trustedNodesClaimIntervalTotal"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "trueExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "calcBase"
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "trustedNodesClaimIntervalTotal"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_trustedNodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "getClaimAmount"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimTrustedNode",
             "parts": [
              "rocketClaimTrustedNode"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "_trustedNodeAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimRewardsPerc"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_trustedNodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_trustedNodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "register",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_trustedNodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_trustedNodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enable",
         "identifier": {
          "type": "Identifier",
          "name": "_enable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "registerClaimer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_trustedNodeAddress"
            },
            {
             "type": "Identifier",
             "name": "_enable"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketClaimTrustedNode",
           "parts": [
            "rocketClaimTrustedNode"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedActions",
           "parts": [
            "rocketDAONodeTrustedActions"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_trustedNodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimPossible"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "This trusted node is not able to claim yet and must wait until a full claim interval passes",
             "parts": [
              "This trusted node is not able to claim yet and must wait until a full claim interval passes"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeManagerInterface"
            },
            "name": "rocketNodeManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeManager",
               "parts": [
                "rocketNodeManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeWithdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNodeManager"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "claim"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimRewardsPerc"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketClaimTrustedNode",
           "parts": [
            "rocketClaimTrustedNode"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/rewards/claims/RocketClaimNode.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/node/RocketNodeManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/node/RocketNodeManagerInterface.sol",
      "parts": [
       "../../../interface/node/RocketNodeManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/node/RocketNodeStakingInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/node/RocketNodeStakingInterface.sol",
      "parts": [
       "../../../interface/node/RocketNodeStakingInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
      "parts": [
       "../../../interface/rewards/RocketRewardsPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/claims/RocketClaimNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/claims/RocketClaimNodeInterface.sol",
      "parts": [
       "../../../interface/rewards/claims/RocketClaimNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimNode",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketClaimNodeInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rocketRewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "memberName": "getClaimingContractEnabled"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimNode",
             "parts": [
              "rocketClaimNode"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimPossible",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rocketRewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeStakingInterface"
            },
            "name": "rocketNodeStaking",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeStakingInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeStaking",
               "parts": [
                "rocketNodeStaking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketRewardsPool"
               },
               "memberName": "getClaimingContractUserCanClaim"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketClaimNode",
                "parts": [
                 "rocketClaimNode"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketNodeStaking"
                },
                "memberName": "getNodeRPLStake"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketNodeStaking"
                },
                "memberName": "getNodeMinimumRPLStake"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getClaimPossible"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_nodeAddress"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeStakingInterface"
            },
            "name": "rocketNodeStaking",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeStakingInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeStaking",
               "parts": [
                "rocketNodeStaking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalRplStake",
            "identifier": {
             "type": "Identifier",
             "name": "totalRplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "memberName": "getTotalEffectiveRPLStake"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "totalRplStake"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketNodeStaking"
                },
                "memberName": "getNodeEffectiveRPLStake"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalRplStake"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getClaimRewardsAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rocketRewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "memberName": "getClaimAmount"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimNode",
             "parts": [
              "rocketClaimNode"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimRewardsPerc"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "register",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_enable",
         "identifier": {
          "type": "Identifier",
          "name": "_enable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rocketRewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "memberName": "registerClaimer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "_enable"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketClaimNode",
           "parts": [
            "rocketClaimNode"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeManager",
           "parts": [
            "rocketNodeManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimPossible"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "The node is currently unable to claim",
             "parts": [
              "The node is currently unable to claim"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeManagerInterface"
            },
            "name": "rocketNodeManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeManager",
               "parts": [
                "rocketNodeManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeWithdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNodeManager"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rocketRewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketRewardsPool"
            },
            "memberName": "claim"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getClaimRewardsPerc"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketClaimNode",
           "parts": [
            "rocketClaimNode"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/rewards/claims/RocketClaimDAO.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/RocketRewardsPoolInterface.sol",
      "parts": [
       "../../../interface/rewards/RocketRewardsPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/claims/RocketClaimDAOInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/claims/RocketClaimDAOInterface.sol",
      "parts": [
       "../../../interface/rewards/claims/RocketClaimDAOInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketClaimDAO",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketClaimDAOInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "RPLTokensSentByDAOProtocol",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "invoiceID"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketRewardsPoolInterface"
            },
            "name": "rewardsPool",
            "identifier": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketRewardsPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketRewardsPool",
               "parts": [
                "rocketRewardsPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rewardsPool"
            },
            "memberName": "getClaimingContractEnabled"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketClaimDAO",
             "parts": [
              "rocketClaimDAO"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "spend",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "rplToken",
            "identifier": {
             "type": "Identifier",
             "name": "rplToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketTokenRPL",
               "parts": [
                "rocketTokenRPL"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "_amount"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "_amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketVault"
                },
                "memberName": "balanceOfToken"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketClaimDAO",
                 "parts": [
                  "rocketClaimDAO"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "rplToken"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "You cannot send 0 RPL or more than the DAO has in its account",
             "parts": [
              "You cannot send 0 RPL or more than the DAO has in its account"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "withdrawToken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_recipientAddress"
            },
            {
             "type": "Identifier",
             "name": "rplToken"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLTokensSentByDAOProtocol"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_invoiceID"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_recipientAddress"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocolProposals",
           "parts": [
            "rocketDAOProtocolProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/node/RocketNodeStaking.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkPricesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkPricesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkPricesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeStakingInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeStakingInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeStakingInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeStaking",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNodeStakingInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "RPLStaked",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RPLWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RPLSlashed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ethValue",
         "identifier": {
          "type": "Identifier",
          "name": "ethValue"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rpl.staked.total.amount",
               "parts": [
                "rpl.staked.total.amount"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseTotalRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rpl.staked.total.amount",
               "parts": [
                "rpl.staked.total.amount"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseTotalRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "subUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rpl.staked.total.amount",
               "parts": [
                "rpl.staked.total.amount"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.staked.node.amount",
                 "parts": [
                  "rpl.staked.node.amount"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseNodeRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.staked.node.amount",
                 "parts": [
                  "rpl.staked.node.amount"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseNodeRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "subUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.staked.node.amount",
                 "parts": [
                  "rpl.staked.node.amount"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRPLStakedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.staked.node.time",
                 "parts": [
                  "rpl.staked.node.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setNodeRPLStakedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_time",
         "identifier": {
          "type": "Identifier",
          "name": "_time"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.staked.node.time",
                 "parts": [
                  "rpl.staked.node.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_time"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalEffectiveRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "memberName": "getEffectiveRPLStake"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateTotalEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxRplStakePerMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "maxRplStakePerMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "memberName": "getHalfDepositUserAmount"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNode"
              },
              "memberName": "getMaximumPerMinipoolStake"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "key",
            "identifier": {
             "type": "Identifier",
             "name": "key"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "nodes.index",
             "parts": [
              "nodes.index"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalNodes",
            "identifier": {
             "type": "Identifier",
             "name": "totalNodes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "max",
            "identifier": {
             "type": "Identifier",
             "name": "max"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offset"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "limit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "max"
            },
            "right": {
             "type": "Identifier",
             "name": "totalNodes"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "limit"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "max"
              },
              "right": {
               "type": "Identifier",
               "name": "totalNodes"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "total",
            "identifier": {
             "type": "Identifier",
             "name": "total"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "Identifier",
            "name": "offset"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "max"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "nodeAddress",
               "identifier": {
                "type": "Identifier",
                "name": "nodeAddress"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "addressSetStorage"
               },
               "memberName": "getItem"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "key"
               },
               {
                "type": "Identifier",
                "name": "i"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "rplStake",
               "identifier": {
                "type": "Identifier",
                "name": "rplStake"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getNodeRPLStake"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxRplStake",
               "identifier": {
                "type": "Identifier",
                "name": "maxRplStake"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "maxRplStakePerMinipool"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketMinipoolManager"
                   },
                   "memberName": "getNodeStakingMinipoolCount"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "nodeAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "rplPrice"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "right": {
               "type": "Identifier",
               "name": "maxRplStake"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "total"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "total"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "rplStake"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "total"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "total"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "maxRplStake"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "total"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplStake",
            "identifier": {
             "type": "Identifier",
             "name": "rplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxRplStake",
            "identifier": {
             "type": "Identifier",
             "name": "maxRplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getHalfDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsNode"
                  },
                  "memberName": "getMaximumPerMinipoolStake"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketMinipoolManager"
                },
                "memberName": "getNodeStakingMinipoolCount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "rplStake"
           },
           "right": {
            "type": "Identifier",
            "name": "maxRplStake"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "rplStake"
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "maxRplStake"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinimumRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getHalfDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsNode"
                  },
                  "memberName": "getMinimumPerMinipoolStake"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketMinipoolManager"
                },
                "memberName": "getNodeActiveMinipoolCount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMaximumRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getHalfDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsNode"
                  },
                  "memberName": "getMaximumPerMinipoolStake"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketMinipoolManager"
                },
                "memberName": "getNodeActiveMinipoolCount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getNodeRPLStake"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketNetworkPrices"
                },
                "memberName": "getRPLPrice"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAOProtocolSettingsMinipool"
                },
                "memberName": "getHalfDepositUserAmount"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAOProtocolSettingsNode"
                },
                "memberName": "getMinimumPerMinipoolStake"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "stakeRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rplTokenAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rplTokenAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketTokenRPL",
             "parts": [
              "rocketTokenRPL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rocketVaultAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketVault",
             "parts": [
              "rocketVault"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "rplToken",
            "identifier": {
             "type": "Identifier",
             "name": "rplToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rplTokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplToken"
              },
              "memberName": "transferFrom"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Could not transfer RPL to staking contract",
             "parts": [
              "Could not transfer RPL to staking contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplToken"
              },
              "memberName": "approve"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketVaultAddress"
              },
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Could not approve vault RPL deposit",
             "parts": [
              "Could not approve vault RPL deposit"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "depositToken"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketNodeStaking",
             "parts": [
              "rocketNodeStaking"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "rplToken"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplStake",
            "identifier": {
             "type": "Identifier",
             "name": "rplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "increaseTotalRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "increaseNodeRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateTotalEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "rplStake"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setNodeRPLStakedTime"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLStaked"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeStaking",
           "parts": [
            "rocketNodeStaking"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "rocketDAOProtocolSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getNodeRPLStakedTime"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsRewards"
               },
               "memberName": "getRewardsClaimIntervalTime"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "The withdrawal cooldown period has not passed",
             "parts": [
              "The withdrawal cooldown period has not passed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplStake",
            "identifier": {
             "type": "Identifier",
             "name": "rplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "rplStake"
             },
             "right": {
              "type": "Identifier",
              "name": "_amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Withdrawal amount exceeds node's staked RPL balance",
             "parts": [
              "Withdrawal amount exceeds node's staked RPL balance"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_amount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getNodeMaximumRPLStake"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Node's staked RPL balance after withdrawal is less than required balance",
             "parts": [
              "Node's staked RPL balance after withdrawal is less than required balance"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseTotalRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseNodeRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateTotalEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "rplStake"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "withdrawToken"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketStorage"
              },
              "memberName": "getNodeWithdrawalAddress"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketTokenRPL",
                 "parts": [
                  "rocketTokenRPL"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLWithdrawn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeStaking",
           "parts": [
            "rocketNodeStaking"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateTotalEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_oldStake",
         "identifier": {
          "type": "Identifier",
          "name": "_oldStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_newStake",
         "identifier": {
          "type": "Identifier",
          "name": "_newStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "inConsensus"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Network is not in consensus",
             "parts": [
              "Network is not in consensus"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxRplStake",
            "identifier": {
             "type": "Identifier",
             "name": "maxRplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getHalfDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsNode"
                  },
                  "memberName": "getMaximumPerMinipoolStake"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketMinipoolManager"
                },
                "memberName": "getNodeStakingMinipoolCount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "Identifier",
             "name": "_oldStake"
            },
            "right": {
             "type": "Identifier",
             "name": "maxRplStake"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "Identifier",
             "name": "_newStake"
            },
            "right": {
             "type": "Identifier",
             "name": "maxRplStake"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_oldStake"
           },
           "right": {
            "type": "Identifier",
            "name": "_newStake"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "decrease",
               "identifier": {
                "type": "Identifier",
                "name": "decrease"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_oldStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_newStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "delta",
               "identifier": {
                "type": "Identifier",
                "name": "delta"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "maxRplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_newStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "decrease"
              },
              "right": {
               "type": "Identifier",
               "name": "delta"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "delta"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "decrease"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketNetworkPrices"
               },
               "memberName": "decreaseEffectiveRPLStake"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "delta"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_newStake"
           },
           "right": {
            "type": "Identifier",
            "name": "_oldStake"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "increase",
               "identifier": {
                "type": "Identifier",
                "name": "increase"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_newStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_oldStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "delta",
               "identifier": {
                "type": "Identifier",
                "name": "delta"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "maxRplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_oldStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "delta"
              },
              "right": {
               "type": "Identifier",
               "name": "increase"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "delta"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "increase"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketNetworkPrices"
               },
               "memberName": "increaseEffectiveRPLStake"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "delta"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "slashRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethSlashAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethSlashAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplSlashAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplSlashAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_ethSlashAmount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplStake",
            "identifier": {
             "type": "Identifier",
             "name": "rplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "rplSlashAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "rplStake"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "rplSlashAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "rplStake"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "rplSlashAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketVault"
             },
             "memberName": "transferToken"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketAuctionManager",
              "parts": [
               "rocketAuctionManager"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketTokenRPL",
                  "parts": [
                   "rocketTokenRPL"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "rplSlashAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseTotalRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rplSlashAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseNodeRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplSlashAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateTotalEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplStake"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rplSlashAmount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLSlashed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplSlashAmount"
            },
            {
             "type": "Identifier",
             "name": "_ethSlashAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeStaking",
           "parts": [
            "rocketNodeStaking"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/node/RocketNodeManager.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeManagerInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/rewards/claims/RocketClaimNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/rewards/claims/RocketClaimNodeInterface.sol",
      "parts": [
       "../../interface/rewards/claims/RocketClaimNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeManager",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNodeManagerInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "NodeRegistered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "NodeTimezoneLocationSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "nodes.index",
                 "parts": [
                  "nodes.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeCountPerTimezone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "TimezoneCount"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "nodes.index",
               "parts": [
                "nodes.index"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalNodes",
            "identifier": {
             "type": "Identifier",
             "name": "totalNodes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "max",
            "identifier": {
             "type": "Identifier",
             "name": "max"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offset"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "limit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "max"
            },
            "right": {
             "type": "Identifier",
             "name": "totalNodes"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "limit"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "max"
              },
              "right": {
               "type": "Identifier",
               "name": "totalNodes"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "TimezoneCount"
             },
             "length": null
            },
            "name": "counts",
            "identifier": {
             "type": "Identifier",
             "name": "counts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "TimezoneCount"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "max"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "offset"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "uniqueTimezoneCount",
            "identifier": {
             "type": "Identifier",
             "name": "uniqueTimezoneCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "Identifier",
            "name": "offset"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "max"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "nodeAddress",
               "identifier": {
                "type": "Identifier",
                "name": "nodeAddress"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "addressSetStorage"
               },
               "memberName": "getItem"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeKey"
               },
               {
                "type": "Identifier",
                "name": "i"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "name": "timezone",
               "identifier": {
                "type": "Identifier",
                "name": "timezone"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getString"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "node.timezone.location",
                    "parts": [
                     "node.timezone.location"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "nodeAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "existing",
               "identifier": {
                "type": "Identifier",
                "name": "existing"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "uniqueTimezoneCount"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "bytes",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "counts"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "j"
                       }
                      },
                      "memberName": "timezone"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "bytes",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "timezone"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "existing"
                    },
                    "right": {
                     "type": "BooleanLiteral",
                     "value": true
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "counts"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     },
                     "memberName": "count"
                    },
                    "isPrefix": false
                   }
                  },
                  {
                   "type": "BreakStatement"
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "Identifier",
               "name": "existing"
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "counts"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "uniqueTimezoneCount"
                   }
                  },
                  "memberName": "timezone"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "timezone"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "counts"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "uniqueTimezoneCount"
                   }
                  },
                  "memberName": "count"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "uniqueTimezoneCount"
                 },
                 "isPrefix": false
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "counts",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "uniqueTimezoneCount",
               "arguments": []
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "counts"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "nodes.index",
                 "parts": [
                  "nodes.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.exists",
                 "parts": [
                  "node.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodePendingWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getNodePendingWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeTimezoneLocation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.timezone.location",
                 "parts": [
                  "node.timezone.location"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "registerNode",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_timezoneLocation",
         "identifier": {
          "type": "Identifier",
          "name": "_timezoneLocation"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketClaimNodeInterface"
            },
            "name": "rocketClaimNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketClaimNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketClaimNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketClaimNode",
               "parts": [
                "rocketClaimNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNode"
              },
              "memberName": "getRegistrationEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Rocket Pool node registrations are currently disabled",
             "parts": [
              "Rocket Pool node registrations are currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_timezoneLocation"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "4",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "The timezone location is invalid",
             "parts": [
              "The timezone location is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.exists",
                 "parts": [
                  "node.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.timezone.location",
                 "parts": [
                  "node.timezone.location"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_timezoneLocation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "addItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "nodes.index",
                 "parts": [
                  "nodes.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketClaimNode"
            },
            "memberName": "register"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NodeRegistered"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeManager",
           "parts": [
            "rocketNodeManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setTimezoneLocation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_timezoneLocation",
         "identifier": {
          "type": "Identifier",
          "name": "_timezoneLocation"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_timezoneLocation"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "4",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "The timezone location is invalid",
             "parts": [
              "The timezone location is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.timezone.location",
                 "parts": [
                  "node.timezone.location"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_timezoneLocation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NodeTimezoneLocationSet"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeManager",
           "parts": [
            "rocketNodeManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/node/RocketNodeDeposit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkFeesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkFeesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkFeesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeDepositInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeDepositInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeDepositInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
      "parts": [
       "../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNodeDeposit",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNodeDepositInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "DepositReceived",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_minimumNodeFee",
         "identifier": {
          "type": "Identifier",
          "name": "_minimumNodeFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkFeesInterface"
            },
            "name": "rocketNetworkFees",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkFeesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkFees",
               "parts": [
                "rocketNetworkFees"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNode"
              },
              "memberName": "getDepositEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Node deposits are currently disabled",
             "parts": [
              "Node deposits are currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeFee",
            "identifier": {
             "type": "Identifier",
             "name": "nodeFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkFees"
            },
            "memberName": "getNodeFee"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "nodeFee"
             },
             "right": {
              "type": "Identifier",
              "name": "_minimumNodeFee"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minimum node fee exceeds current network node fee",
             "parts": [
              "Minimum node fee exceeds current network node fee"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "MinipoolDeposit"
            },
            "name": "depositType",
            "identifier": {
             "type": "Identifier",
             "name": "depositType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolDeposit"
           },
           "memberName": "None"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAOProtocolSettingsMinipool"
             },
             "memberName": "getFullDepositNodeAmount"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "depositType"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolDeposit"
               },
               "memberName": "Full"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "memberName": "getHalfDepositNodeAmount"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "depositType"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolDeposit"
                },
                "memberName": "Half"
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsMinipool"
               },
               "memberName": "getEmptyDepositNodeAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "Identifier",
                 "name": "depositType"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "MinipoolDeposit"
                 },
                 "memberName": "Empty"
                }
               }
              }
             ]
            },
            "falseBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "revert"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "Invalid node deposit amount",
                  "parts": [
                   "Invalid node deposit amount"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAOProtocolSettingsNetworkInterface"
               },
               "name": "rocketDAOProtocolSettingsNetwork",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsNetwork"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAOProtocolSettingsNetworkInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAOProtocolSettingsNetwork",
                  "parts": [
                   "rocketDAOProtocolSettingsNetwork"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAONodeTrustedInterface"
               },
               "name": "rocketDaoNodeTrusted",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDaoNodeTrusted"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAONodeTrustedInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAONodeTrusted",
                  "parts": [
                   "rocketDAONodeTrusted"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
               },
               "name": "rocketDaoNodeTrustedSettingsMembers",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDaoNodeTrustedSettingsMembers"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAONodeTrustedSettingsMembersInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAONodeTrustedSettingsMembers",
                  "parts": [
                   "rocketDAONodeTrustedSettingsMembers"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDaoNodeTrusted"
               },
               "memberName": "getMemberIsValid"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<",
                   "left": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "rocketDaoNodeTrusted"
                     },
                     "memberName": "getMemberUnbondedValidatorCount"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "rocketDaoNodeTrustedSettingsMembers"
                     },
                     "memberName": "getMinipoolUnbondedMax"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Trusted node member would exceed the amount of unbonded minipools allowed",
                   "parts": [
                    "Trusted node member would exceed the amount of unbonded minipools allowed"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "maxFee",
                  "identifier": {
                   "type": "Identifier",
                   "name": "maxFee"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsNetwork"
                  },
                  "memberName": "getMaximumNodeFee"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "nodeFee"
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "maxFee"
                       },
                       "memberName": "mul"
                      },
                      "arguments": [
                       {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "rocketDaoNodeTrustedSettingsMembers"
                         },
                         "memberName": "getMinipoolUnbondedMinFee"
                        },
                        "arguments": [],
                        "names": [],
                        "identifiers": []
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "memberName": "div"
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": "ether"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Current commission rate is not high enough to create unbonded minipools",
                   "parts": [
                    "Current commission rate is not high enough to create unbonded minipools"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "revert"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "Only members of the trusted node DAO may create unbonded minipools",
                   "parts": [
                    "Only members of the trusted node DAO may create unbonded minipools"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositReceived"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "createMinipool"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "depositType"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "minipool"
             },
             "memberName": "nodeDeposit"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "value"
              }
             ]
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "memberName": "getAssignDepositsEnabled"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDepositPoolInterface"
               },
               "name": "rocketDepositPool",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDepositPool"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDepositPoolInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDepositPool",
                  "parts": [
                   "rocketDepositPool"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDepositPool"
               },
               "memberName": "assignDeposits"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeDeposit",
           "parts": [
            "rocketNodeDeposit"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/network/RocketNetworkPrices.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkPricesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkPricesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkPricesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkPrices",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNetworkPricesInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "PricesSubmitted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "block",
         "identifier": {
          "type": "Identifier",
          "name": "block"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "rplPrice"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "effectiveRplStake"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "PricesUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "block",
         "identifier": {
          "type": "Identifier",
          "name": "block"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "rplPrice"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "effectiveRplStake"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setRPLPrice"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "0.01",
             "subdenomination": "ether"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getPricesBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.updated.block",
               "parts": [
                "network.prices.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setPricesBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.updated.block",
               "parts": [
                "network.prices.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRPLPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.rpl",
               "parts": [
                "network.prices.rpl"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setRPLPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.rpl",
               "parts": [
                "network.prices.rpl"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveRPLStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake",
               "parts": [
                "network.rpl.stake"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveRPLStakeUpdatedBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake.updated.block",
               "parts": [
                "network.rpl.stake.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake",
               "parts": [
                "network.rpl.stake"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake.updated.block",
               "parts": [
                "network.rpl.stake.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake",
               "parts": [
                "network.rpl.stake"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake.updated.block",
               "parts": [
                "network.rpl.stake.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "subUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake",
               "parts": [
                "network.rpl.stake"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.rpl.stake.updated.block",
               "parts": [
                "network.rpl.stake.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "submitPrices",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "_effectiveRplStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNetwork"
              },
              "memberName": "getSubmitPricesEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting prices is currently disabled",
             "parts": [
              "Submitting prices is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Prices can not be submitted for a future block",
             "parts": [
              "Prices can not be submitted for a future block"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getPricesBlock"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Network prices for an equal or higher block are set",
             "parts": [
              "Network prices for an equal or higher block are set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeSubmissionKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.submitted.node.key",
               "parts": [
                "network.prices.submitted.node.key"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_rplPrice"
              },
              {
               "type": "Identifier",
               "name": "_effectiveRplStake"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.submitted.count",
               "parts": [
                "network.prices.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_rplPrice"
              },
              {
               "type": "Identifier",
               "name": "_effectiveRplStake"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeSubmissionKey"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Duplicate submission from node",
             "parts": [
              "Duplicate submission from node"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "network.prices.submitted.node",
                 "parts": [
                  "network.prices.submitted.node"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "Identifier",
                 "name": "_block"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getUint"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "submissionCountKey"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            {
             "type": "Identifier",
             "name": "submissionCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "PricesSubmitted"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_rplPrice"
            },
            {
             "type": "Identifier",
             "name": "_effectiveRplStake"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "calcBase"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "submissionCount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAOProtocolSettingsNetwork"
             },
             "memberName": "getNodeConsensusThreshold"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updatePrices"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_block"
               },
               {
                "type": "Identifier",
                "name": "_rplPrice"
               },
               {
                "type": "Identifier",
                "name": "_effectiveRplStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNetworkPrices",
           "parts": [
            "rocketNetworkPrices"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeUpdatePrices",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "_effectiveRplStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNetwork"
              },
              "memberName": "getSubmitPricesEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting prices is currently disabled",
             "parts": [
              "Submitting prices is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Prices can not be submitted for a future block",
             "parts": [
              "Prices can not be submitted for a future block"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getPricesBlock"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Network prices for an equal or higher block are set",
             "parts": [
              "Network prices for an equal or higher block are set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.prices.submitted.count",
               "parts": [
                "network.prices.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_rplPrice"
              },
              {
               "type": "Identifier",
               "name": "_effectiveRplStake"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "calcBase"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "submissionCount"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrusted"
                 },
                 "memberName": "getMemberCount"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsNetwork"
               },
               "memberName": "getNodeConsensusThreshold"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Consensus has not been reached",
             "parts": [
              "Consensus has not been reached"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePrices"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_rplPrice"
            },
            {
             "type": "Identifier",
             "name": "_effectiveRplStake"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNetworkPrices",
           "parts": [
            "rocketNetworkPrices"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updatePrices",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_rplPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_effectiveRplStake",
         "identifier": {
          "type": "Identifier",
          "name": "_effectiveRplStake"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getEffectiveRPLStakeUpdatedBlock"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot update effective RPL stake based on block lower than when it was last updated on chain",
             "parts": [
              "Cannot update effective RPL stake based on block lower than when it was last updated on chain"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setRPLPrice"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rplPrice"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setPricesBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_effectiveRplStake"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "PricesUpdated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_rplPrice"
            },
            {
             "type": "Identifier",
             "name": "_effectiveRplStake"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "inConsensus",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pricesBlock",
            "identifier": {
             "type": "Identifier",
             "name": "pricesBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getPricesBlock"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "updateFrequency",
            "identifier": {
             "type": "Identifier",
             "name": "updateFrequency"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getSubmitPricesFrequency"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "latestReportableBlock",
            "identifier": {
             "type": "Identifier",
             "name": "latestReportableBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "number"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "updateFrequency"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "updateFrequency"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "pricesBlock"
           },
           "right": {
            "type": "Identifier",
            "name": "latestReportableBlock"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLatestReportableBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pricesBlock",
            "identifier": {
             "type": "Identifier",
             "name": "pricesBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getPricesBlock"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "updateFrequency",
            "identifier": {
             "type": "Identifier",
             "name": "updateFrequency"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getSubmitPricesFrequency"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "latestReportableBlock",
            "identifier": {
             "type": "Identifier",
             "name": "latestReportableBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "number"
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "updateFrequency"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "updateFrequency"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastOnChainUpdate",
            "identifier": {
             "type": "Identifier",
             "name": "lastOnChainUpdate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getEffectiveRPLStakeUpdatedBlock"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "pricesBlock"
            },
            "right": {
             "type": "Identifier",
             "name": "latestReportableBlock"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "lastOnChainUpdate"
            },
            "right": {
             "type": "Identifier",
             "name": "latestReportableBlock"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "lastOnChainUpdate"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "latestReportableBlock"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/network/RocketNetworkFees.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolQueueInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkFeesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkFeesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkFeesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkFees",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNetworkFeesInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeDemand",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolQueueInterface"
            },
            "name": "rocketMinipoolQueue",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolQueue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolQueueInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolQueue",
               "parts": [
                "rocketMinipoolQueue"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "name": "depositPoolBalance",
            "identifier": {
             "type": "Identifier",
             "name": "depositPoolBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "int256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDepositPool"
              },
              "memberName": "getBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "name": "minipoolCapacity",
            "identifier": {
             "type": "Identifier",
             "name": "minipoolCapacity"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "int256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketMinipoolQueue"
              },
              "memberName": "getEffectiveCapacity"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "name": "demand",
            "identifier": {
             "type": "Identifier",
             "name": "demand"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "depositPoolBalance"
           },
           "right": {
            "type": "Identifier",
            "name": "minipoolCapacity"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "demand"
             },
             "right": {
              "type": "Identifier",
              "name": "depositPoolBalance"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "demand"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getNodeFeeByDemand"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getNodeDemand"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFeeByDemand",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "_nodeDemand",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeDemand"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "demandDivisor",
            "identifier": {
             "type": "Identifier",
             "name": "demandDivisor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "1000000000000",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "minFee",
            "identifier": {
             "type": "Identifier",
             "name": "minFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getMinimumNodeFee"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "targetFee",
            "identifier": {
             "type": "Identifier",
             "name": "targetFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getTargetNodeFee"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxFee",
            "identifier": {
             "type": "Identifier",
             "name": "maxFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getMaximumNodeFee"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "demandRange",
            "identifier": {
             "type": "Identifier",
             "name": "demandRange"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getNodeFeeDemandRange"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nNodeDemand",
            "identifier": {
             "type": "Identifier",
             "name": "nNodeDemand"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "nNodeDemandSign",
            "identifier": {
             "type": "Identifier",
             "name": "nNodeDemandSign"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "_nodeDemand"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nNodeDemand"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "UnaryOperation",
                 "operator": "-",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "_nodeDemand"
                 },
                 "isPrefix": true
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nNodeDemandSign"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": false
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nNodeDemand"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeDemand"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nNodeDemandSign"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nNodeDemand"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "nNodeDemand"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "calcBase"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "demandRange"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "nNodeDemand"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "targetFee"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "nNodeDemand"
           },
           "right": {
            "type": "Identifier",
            "name": "calcBase"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "nNodeDemandSign"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "maxFee"
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "minFee"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "t",
            "identifier": {
             "type": "Identifier",
             "name": "t"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "**",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "nNodeDemand"
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "demandDivisor"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "3",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "nNodeDemandSign"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "targetFee"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "maxFee"
                     },
                     "memberName": "sub"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "targetFee"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "t"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "div"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "calcBase"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "minFee"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "targetFee"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "minFee"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "calcBase"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "calcBase"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/network/RocketNetworkBalances.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkBalancesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkBalancesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkBalancesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketNetworkBalances",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketNetworkBalancesInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "BalancesSubmitted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "block",
         "identifier": {
          "type": "Identifier",
          "name": "block"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "totalEth"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "stakingEth"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "rethSupply"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BalancesUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "block",
         "identifier": {
          "type": "Identifier",
          "name": "block"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "totalEth"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "stakingEth"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "rethSupply"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getBalancesBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balances.updated.block",
               "parts": [
                "network.balances.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setBalancesBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balances.updated.block",
               "parts": [
                "network.balances.updated.block"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalETHBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.total",
               "parts": [
                "network.balance.total"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setTotalETHBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.total",
               "parts": [
                "network.balance.total"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getStakingETHBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.staking",
               "parts": [
                "network.balance.staking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setStakingETHBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.staking",
               "parts": [
                "network.balance.staking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalRETHSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.reth.supply",
               "parts": [
                "network.balance.reth.supply"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setTotalRETHSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balance.reth.supply",
               "parts": [
                "network.balance.reth.supply"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getETHUtilizationRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalEthBalance",
            "identifier": {
             "type": "Identifier",
             "name": "totalEthBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getTotalETHBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "stakingEthBalance",
            "identifier": {
             "type": "Identifier",
             "name": "stakingEthBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getStakingETHBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "totalEthBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "calcBase"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "stakingEthBalance"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalEthBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "submitBalances",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "_totalEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "_stakingEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_rethSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNetwork"
              },
              "memberName": "getSubmitBalancesEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting balances is currently disabled",
             "parts": [
              "Submitting balances is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Balances can not be submitted for a future block",
             "parts": [
              "Balances can not be submitted for a future block"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBalancesBlock"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Network balances for an equal or higher block are set",
             "parts": [
              "Network balances for an equal or higher block are set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_stakingEth"
             },
             "right": {
              "type": "Identifier",
              "name": "_totalEth"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid network balances",
             "parts": [
              "Invalid network balances"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeSubmissionKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balances.submitted.node",
               "parts": [
                "network.balances.submitted.node"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_totalEth"
              },
              {
               "type": "Identifier",
               "name": "_stakingEth"
              },
              {
               "type": "Identifier",
               "name": "_rethSupply"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balances.submitted.count",
               "parts": [
                "network.balances.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_totalEth"
              },
              {
               "type": "Identifier",
               "name": "_stakingEth"
              },
              {
               "type": "Identifier",
               "name": "_rethSupply"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeSubmissionKey"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Duplicate submission from node",
             "parts": [
              "Duplicate submission from node"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "network.balances.submitted.node",
                 "parts": [
                  "network.balances.submitted.node"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "Identifier",
                 "name": "_block"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getUint"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "submissionCountKey"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            {
             "type": "Identifier",
             "name": "submissionCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BalancesSubmitted"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_totalEth"
            },
            {
             "type": "Identifier",
             "name": "_stakingEth"
            },
            {
             "type": "Identifier",
             "name": "_rethSupply"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "calcBase"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "submissionCount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAOProtocolSettingsNetwork"
             },
             "memberName": "getNodeConsensusThreshold"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updateBalances"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_block"
               },
               {
                "type": "Identifier",
                "name": "_totalEth"
               },
               {
                "type": "Identifier",
                "name": "_stakingEth"
               },
               {
                "type": "Identifier",
                "name": "_rethSupply"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNetworkBalances",
           "parts": [
            "rocketNetworkBalances"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeUpdateBalances",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "_totalEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "_stakingEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_rethSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNetwork"
              },
              "memberName": "getSubmitBalancesEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting balances is currently disabled",
             "parts": [
              "Submitting balances is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Balances can not be submitted for a future block",
             "parts": [
              "Balances can not be submitted for a future block"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_block"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBalancesBlock"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Network balances for an equal or higher block are set",
             "parts": [
              "Network balances for an equal or higher block are set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_stakingEth"
             },
             "right": {
              "type": "Identifier",
              "name": "_totalEth"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid network balances",
             "parts": [
              "Invalid network balances"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "network.balances.submitted.count",
               "parts": [
                "network.balances.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_block"
              },
              {
               "type": "Identifier",
               "name": "_totalEth"
              },
              {
               "type": "Identifier",
               "name": "_stakingEth"
              },
              {
               "type": "Identifier",
               "name": "_rethSupply"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "calcBase"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "submissionCount"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrusted"
                 },
                 "memberName": "getMemberCount"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsNetwork"
               },
               "memberName": "getNodeConsensusThreshold"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Consensus has not been reached",
             "parts": [
              "Consensus has not been reached"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateBalances"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_totalEth"
            },
            {
             "type": "Identifier",
             "name": "_stakingEth"
            },
            {
             "type": "Identifier",
             "name": "_rethSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNetworkBalances",
           "parts": [
            "rocketNetworkBalances"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateBalances",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalEth",
         "identifier": {
          "type": "Identifier",
          "name": "_totalEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_stakingEth",
         "identifier": {
          "type": "Identifier",
          "name": "_stakingEth"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rethSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_rethSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBalancesBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setTotalETHBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_totalEth"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setStakingETHBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_stakingEth"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setTotalRETHSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rethSupply"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BalancesUpdated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_block"
            },
            {
             "type": "Identifier",
             "name": "_totalEth"
            },
            {
             "type": "Identifier",
             "name": "_stakingEth"
            },
            {
             "type": "Identifier",
             "name": "_rethSupply"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLatestReportableBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "updateFrequency",
            "identifier": {
             "type": "Identifier",
             "name": "updateFrequency"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "memberName": "getSubmitBalancesFrequency"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "number"
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "updateFrequency"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "updateFrequency"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolStorageLayout.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketStorageInterface.sol",
      "parts": [
       "../../interface/RocketStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolStatus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolStatus.sol",
      "parts": [
       "../../types/MinipoolStatus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolStorageLayout",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EnumDefinition",
       "name": "StorageState",
       "members": [
        {
         "type": "EnumValue",
         "name": "Undefined"
        },
        {
         "type": "EnumValue",
         "name": "Uninitialised"
        },
        {
         "type": "EnumValue",
         "name": "Initialised"
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "rocketStorage",
         "identifier": {
          "type": "Identifier",
          "name": "rocketStorage"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "RocketStorageInterface"
          },
          "arguments": [
           {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "RocketStorageInterface"
        },
        "arguments": [
         {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolStatus"
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "statusBlock",
         "identifier": {
          "type": "Identifier",
          "name": "statusBlock"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "statusTime",
         "identifier": {
          "type": "Identifier",
          "name": "statusTime"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "withdrawalBlock",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawalBlock"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "depositType",
         "identifier": {
          "type": "Identifier",
          "name": "depositType"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeAddress"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nodeFee",
         "identifier": {
          "type": "Identifier",
          "name": "nodeFee"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nodeDepositBalance",
         "identifier": {
          "type": "Identifier",
          "name": "nodeDepositBalance"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "nodeDepositAssigned",
         "identifier": {
          "type": "Identifier",
          "name": "nodeDepositAssigned"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nodeRefundBalance",
         "identifier": {
          "type": "Identifier",
          "name": "nodeRefundBalance"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nodeSlashBalance",
         "identifier": {
          "type": "Identifier",
          "name": "nodeSlashBalance"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "userDepositBalance",
         "identifier": {
          "type": "Identifier",
          "name": "userDepositBalance"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "userDepositAssignedTime",
         "identifier": {
          "type": "Identifier",
          "name": "userDepositAssignedTime"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "useLatestDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "useLatestDelegate"
         },
         "expression": {
          "type": "BooleanLiteral",
          "value": false
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BooleanLiteral",
        "value": false
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "rocketMinipoolDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "rocketMinipoolDelegate"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "rocketMinipoolDelegatePrev",
         "identifier": {
          "type": "Identifier",
          "name": "rocketMinipoolDelegatePrev"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "rocketTokenRETH",
         "identifier": {
          "type": "Identifier",
          "name": "rocketTokenRETH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "rocketMinipoolPenalty",
         "identifier": {
          "type": "Identifier",
          "name": "rocketMinipoolPenalty"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "StorageState"
         },
         "name": "storageState",
         "identifier": {
          "type": "Identifier",
          "name": "storageState"
         },
         "expression": {
          "type": "MemberAccess",
          "expression": {
           "type": "Identifier",
           "name": "StorageState"
          },
          "memberName": "Undefined"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "MemberAccess",
        "expression": {
         "type": "Identifier",
         "name": "StorageState"
        },
        "memberName": "Undefined"
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "finalised",
         "identifier": {
          "type": "Identifier",
          "name": "finalised"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolStatus.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolStatusInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolStatusInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolStatusInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeStakingInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeStakingInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeStakingInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolStatus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolStatus.sol",
      "parts": [
       "../../types/MinipoolStatus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolStatus",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolStatusInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolWithdrawableSubmitted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolSetWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "submitMinipoolWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "memberName": "getSubmitWithdrawableEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting withdrawable status is currently disabled",
             "parts": [
              "Submitting withdrawable status is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "minipool"
               },
               "memberName": "getStatus"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Staking"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool can only be set as withdrawable while staking",
             "parts": [
              "Minipool can only be set as withdrawable while staking"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeSubmissionKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipool.withdrawable.submitted.node",
               "parts": [
                "minipool.withdrawable.submitted.node"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "_minipoolAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipool.withdrawable.submitted.count",
               "parts": [
                "minipool.withdrawable.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_minipoolAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeSubmissionKey"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Duplicate submission from node",
             "parts": [
              "Duplicate submission from node"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeSubmissionKey"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.withdrawable.submitted.node",
                 "parts": [
                  "minipool.withdrawable.submitted.node"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "Identifier",
                 "name": "_minipoolAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getUint"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "submissionCountKey"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            {
             "type": "Identifier",
             "name": "submissionCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolWithdrawableSubmitted"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "calcBase"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "submissionCount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAOProtocolSettingsNetwork"
             },
             "memberName": "getNodeConsensusThreshold"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setMinipoolWithdrawable"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_minipoolAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolStatus",
           "parts": [
            "rocketMinipoolStatus"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_minipoolAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeMinipoolWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNetworkInterface"
            },
            "name": "rocketDAOProtocolSettingsNetwork",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNetwork"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNetworkInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNetwork",
               "parts": [
                "rocketDAOProtocolSettingsNetwork"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "memberName": "getSubmitWithdrawableEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Submitting withdrawable status is currently disabled",
             "parts": [
              "Submitting withdrawable status is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "minipool"
               },
               "memberName": "getStatus"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Staking"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool can only be set as withdrawable while staking",
             "parts": [
              "Minipool can only be set as withdrawable while staking"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "submissionCountKey",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCountKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipool.withdrawable.submitted.count",
               "parts": [
                "minipool.withdrawable.submitted.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_minipoolAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "submissionCount",
            "identifier": {
             "type": "Identifier",
             "name": "submissionCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "submissionCountKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "calcBase"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "submissionCount"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrusted"
                 },
                 "memberName": "getMemberCount"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsNetwork"
               },
               "memberName": "getNodeConsensusThreshold"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Consensus has not been reached",
             "parts": [
              "Consensus has not been reached"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setMinipoolWithdrawable"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolStatus",
           "parts": [
            "rocketMinipoolStatus"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setMinipoolWithdrawable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "minipool"
            },
            "memberName": "setWithdrawable"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolSetWithdrawable"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolQueue.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolQueueInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressQueueStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressQueueStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressQueueStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolQueue",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolQueueInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueKeyFull",
         "identifier": {
          "type": "Identifier",
          "name": "queueKeyFull"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "minipools.available.full",
            "parts": [
             "minipools.available.full"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "minipools.available.full",
          "parts": [
           "minipools.available.full"
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueKeyHalf",
         "identifier": {
          "type": "Identifier",
          "name": "queueKeyHalf"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "minipools.available.half",
            "parts": [
             "minipools.available.half"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "minipools.available.half",
          "parts": [
           "minipools.available.half"
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueKeyEmpty",
         "identifier": {
          "type": "Identifier",
          "name": "queueKeyEmpty"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "minipools.available.empty",
            "parts": [
             "minipools.available.empty"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "minipools.available.empty",
          "parts": [
           "minipools.available.empty"
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolEnqueued",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueId",
         "identifier": {
          "type": "Identifier",
          "name": "queueId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolDequeued",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueId",
         "identifier": {
          "type": "Identifier",
          "name": "queueId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolRemoved",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "queueId",
         "identifier": {
          "type": "Identifier",
          "name": "queueId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getLength"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "queueKeyFull"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "isArray": false
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLength"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "queueKeyHalf"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLength"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "queueKeyEmpty"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLength"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyFull"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLength"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyHalf"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLength"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyEmpty"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressQueueStorageInterface"
            },
            "name": "addressQueueStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressQueueStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressQueueStorage",
               "parts": [
                "addressQueueStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "memberName": "getLength"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "getLength"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "queueKeyFull"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "rocketDAOProtocolSettingsMinipool"
                    },
                    "memberName": "getFullDepositUserAmount"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "isArray": false
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getLength"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "queueKeyHalf"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getHalfDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLength"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "queueKeyEmpty"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAOProtocolSettingsMinipool"
                },
                "memberName": "getEmptyDepositUserAmount"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getLength"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "queueKeyFull"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketDAOProtocolSettingsMinipool"
                  },
                  "memberName": "getFullDepositUserAmount"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "isArray": false
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLength"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "queueKeyHalf"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAOProtocolSettingsMinipool"
                },
                "memberName": "getHalfDepositUserAmount"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNextCapacity",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyHalf"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsMinipool"
               },
               "memberName": "getHalfDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyFull"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsMinipool"
               },
               "memberName": "getFullDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyEmpty"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsMinipool"
               },
               "memberName": "getEmptyDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNextDeposit",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLength"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "queueKeyHalf"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolDeposit"
                },
                "memberName": "Half"
               },
               {
                "type": "Identifier",
                "name": "length"
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "length"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyFull"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolDeposit"
                },
                "memberName": "Full"
               },
               {
                "type": "Identifier",
                "name": "length"
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "length"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyEmpty"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolDeposit"
                },
                "memberName": "Empty"
               },
               {
                "type": "Identifier",
                "name": "length"
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "MinipoolDeposit"
             },
             "memberName": "None"
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "enqueueMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipool",
         "identifier": {
          "type": "Identifier",
          "name": "_minipool"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "enqueueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyHalf"
               },
               {
                "type": "Identifier",
                "name": "_minipool"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "enqueueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyFull"
               },
               {
                "type": "Identifier",
                "name": "_minipool"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "enqueueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyEmpty"
               },
               {
                "type": "Identifier",
                "name": "_minipool"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "StringLiteral",
             "value": "Invalid minipool deposit type",
             "parts": [
              "Invalid minipool deposit type"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolQueue",
           "parts": [
            "rocketMinipoolQueue"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "enqueueMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipool",
         "identifier": {
          "type": "Identifier",
          "name": "_minipool"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressQueueStorageInterface"
            },
            "name": "addressQueueStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressQueueStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressQueueStorage",
               "parts": [
                "addressQueueStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "memberName": "enqueueItem"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_minipool"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolEnqueued"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipool"
            },
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueMinipool",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyHalf"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyHalf"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyFull"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyFull"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLength"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "queueKeyEmpty"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyEmpty"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "StringLiteral",
             "value": "No minipools are available",
             "parts": [
              "No minipools are available"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolQueue",
           "parts": [
            "rocketMinipoolQueue"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDepositPool",
           "parts": [
            "rocketDepositPool"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueMinipoolByDeposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyHalf"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyFull"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "dequeueMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyEmpty"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "StringLiteral",
             "value": "No minipools are available",
             "parts": [
              "No minipools are available"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolQueue",
           "parts": [
            "rocketMinipoolQueue"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDepositPool",
           "parts": [
            "rocketDepositPool"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "dequeueMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressQueueStorageInterface"
            },
            "name": "addressQueueStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressQueueStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressQueueStorage",
               "parts": [
                "addressQueueStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "memberName": "dequeueItem"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolDequeued"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "minipool"
            },
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "minipool"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "removeMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyHalf"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "removeMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyFull"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "removeMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "queueKeyEmpty"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "StringLiteral",
             "value": "Invalid minipool deposit type",
             "parts": [
              "Invalid minipool deposit type"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolQueue",
           "parts": [
            "rocketMinipoolQueue"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_key",
         "identifier": {
          "type": "Identifier",
          "name": "_key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipool",
         "identifier": {
          "type": "Identifier",
          "name": "_minipool"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressQueueStorageInterface"
            },
            "name": "addressQueueStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressQueueStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressQueueStorage",
               "parts": [
                "addressQueueStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressQueueStorage"
            },
            "memberName": "removeItem"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "Identifier",
             "name": "_minipool"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolRemoved"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipool"
            },
            {
             "type": "Identifier",
             "name": "_key"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolPenalty.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolPenaltyInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolPenalty",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolPenaltyInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "MaxPenaltyRateUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxPenaltyRate",
         "identifier": {
          "type": "Identifier",
          "name": "maxPenaltyRate"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": "ether"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": "ether"
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setMaxPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rate",
         "identifier": {
          "type": "Identifier",
          "name": "_rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "maxPenaltyRate"
           },
           "right": {
            "type": "Identifier",
            "name": "_rate"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MaxPenaltyRateUpdated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rate"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaxPenaltyRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "maxPenaltyRate"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "maxPenaltyRate"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "penaltyRate",
            "identifier": {
             "type": "Identifier",
             "name": "penaltyRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.penalty.rate",
                 "parts": [
                  "minipool.penalty.rate"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_minipoolAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "penaltyRate"
           },
           "right": {
            "type": "Identifier",
            "name": "maxPenaltyRate"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "maxPenaltyRate"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "penaltyRate"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rate",
         "identifier": {
          "type": "Identifier",
          "name": "_rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.penalty.rate",
                 "parts": [
                  "minipool.penalty.rate"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_minipoolAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_rate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestNetworkContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolManager.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./RocketMinipool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketMinipool.sol",
      "parts": [
       "./RocketMinipool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolQueueInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeStakingInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeStakingInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeStakingInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkPricesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkPricesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkPricesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolManager",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolManagerInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "MinipoolDestroyed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "node",
         "identifier": {
          "type": "Identifier",
          "name": "node"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.index",
                 "parts": [
                  "minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStakingMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.staking.count",
                 "parts": [
                  "minipools.staking.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFinalisedMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.finalised.count",
                 "parts": [
                  "minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getActiveMinipoolCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "total",
            "identifier": {
             "type": "Identifier",
             "name": "total"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.index",
                 "parts": [
                  "minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "finalised",
            "identifier": {
             "type": "Identifier",
             "name": "finalised"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.finalised.count",
                 "parts": [
                  "minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "total"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "finalised"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolCountPerStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "limit",
         "identifier": {
          "type": "Identifier",
          "name": "limit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "initializedCount",
         "identifier": {
          "type": "Identifier",
          "name": "initializedCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "prelaunchCount",
         "identifier": {
          "type": "Identifier",
          "name": "prelaunchCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stakingCount",
         "identifier": {
          "type": "Identifier",
          "name": "stakingCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "withdrawableCount",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawableCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dissolvedCount",
         "identifier": {
          "type": "Identifier",
          "name": "dissolvedCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "minipoolKey",
            "identifier": {
             "type": "Identifier",
             "name": "minipoolKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipools.index",
               "parts": [
                "minipools.index"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalMinipools",
            "identifier": {
             "type": "Identifier",
             "name": "totalMinipools"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getMinipoolCount"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "max",
            "identifier": {
             "type": "Identifier",
             "name": "max"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offset"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "limit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "max"
            },
            "right": {
             "type": "Identifier",
             "name": "totalMinipools"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "limit"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "max"
              },
              "right": {
               "type": "Identifier",
               "name": "totalMinipools"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "Identifier",
            "name": "offset"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "max"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketMinipoolInterface"
               },
               "name": "minipool",
               "identifier": {
                "type": "Identifier",
                "name": "minipool"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketMinipoolInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "addressSetStorage"
                 },
                 "memberName": "getItem"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "minipoolKey"
                 },
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "MinipoolStatus"
               },
               "name": "status",
               "identifier": {
                "type": "Identifier",
                "name": "status"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "minipool"
               },
               "memberName": "getStatus"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Initialized"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "initializedCount"
                 },
                 "isPrefix": false
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "status"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolStatus"
                },
                "memberName": "Prelaunch"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "prelaunchCount"
                  },
                  "isPrefix": false
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "Identifier",
                 "name": "status"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "MinipoolStatus"
                 },
                 "memberName": "Staking"
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "UnaryOperation",
                   "operator": "++",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "stakingCount"
                   },
                   "isPrefix": false
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "status"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "MinipoolStatus"
                  },
                  "memberName": "Withdrawable"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "withdrawableCount"
                    },
                    "isPrefix": false
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "status"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "MinipoolStatus"
                   },
                   "memberName": "Dissolved"
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "UnaryOperation",
                     "operator": "++",
                     "subExpression": {
                      "type": "Identifier",
                      "name": "dissolvedCount"
                     },
                     "isPrefix": false
                    }
                   }
                  ]
                 },
                 "falseBody": null
                }
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.index",
                 "parts": [
                  "minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.index",
                 "parts": [
                  "node.minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeActiveMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "finalised",
            "identifier": {
             "type": "Identifier",
             "name": "finalised"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.finalised.count",
                 "parts": [
                  "node.minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "total",
            "identifier": {
             "type": "Identifier",
             "name": "total"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.index",
                 "parts": [
                  "node.minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "total"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "finalised"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFinalisedMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.finalised.count",
                 "parts": [
                  "node.minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.staking.count",
                 "parts": [
                  "node.minipools.staking.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.index",
                 "parts": [
                  "node.minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeValidatingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.validating.index",
                 "parts": [
                  "node.minipools.validating.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeValidatingMinipoolAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.validating.index",
                 "parts": [
                  "node.minipools.validating.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolByPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_pubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_pubkey"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "validator.minipool",
                 "parts": [
                  "validator.minipool"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_pubkey"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.exists",
                 "parts": [
                  "minipool.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_minipoolAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBytes"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.pubkey",
                 "parts": [
                  "minipool.pubkey"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_minipoolAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "node.minipools.staking.count",
               "parts": [
                "node.minipools.staking.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeValue",
            "identifier": {
             "type": "Identifier",
             "name": "nodeValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "nodeValue"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "totalKey",
            "identifier": {
             "type": "Identifier",
             "name": "totalKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipools.staking.count",
               "parts": [
                "minipools.staking.count"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalValue",
            "identifier": {
             "type": "Identifier",
             "name": "totalValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "totalValue"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateTotalEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "nodeValue"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "nodeValue"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decrementNodeStakingMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nodeKey",
            "identifier": {
             "type": "Identifier",
             "name": "nodeKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "node.minipools.staking.count",
               "parts": [
                "node.minipools.staking.count"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeValue",
            "identifier": {
             "type": "Identifier",
             "name": "nodeValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "nodeValue"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "totalKey",
            "identifier": {
             "type": "Identifier",
             "name": "totalKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "minipools.staking.count",
               "parts": [
                "minipools.staking.count"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalValue",
            "identifier": {
             "type": "Identifier",
             "name": "totalValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalKey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "totalValue"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updateTotalEffectiveRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "nodeValue"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "nodeValue"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNodeFinalisedMinipoolCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.finalised.count",
                 "parts": [
                  "node.minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.finalised.count",
                 "parts": [
                  "minipools.finalised.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createMinipool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketMinipoolInterface"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeStakingInterface"
            },
            "name": "rocketNodeStaking",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeStakingInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeStaking",
               "parts": [
                "rocketNodeStaking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getNodeActiveMinipoolCount"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketNodeStaking"
               },
               "memberName": "getNodeMinipoolLimit"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool count after deposit exceeds limit based on node RPL stake",
             "parts": [
              "Minipool count after deposit exceeds limit based on node RPL stake"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "UserDefinedTypeName",
               "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
              },
              "name": "rocketDAOProtocolSettingsMinipool",
              "identifier": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolSettingsMinipoolInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolSettingsMinipool",
                 "parts": [
                  "rocketDAOProtocolSettingsMinipool"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "name": "totalMinipoolCount",
              "identifier": {
               "type": "Identifier",
               "name": "totalMinipoolCount"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getActiveMinipoolCount"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           },
           {
            "type": "ExpressionStatement",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "require"
             },
             "arguments": [
              {
               "type": "BinaryOperation",
               "operator": "<=",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "totalMinipoolCount"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAOProtocolSettingsMinipool"
                 },
                 "memberName": "getMaximumCount"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "StringLiteral",
               "value": "Global minipool limit reached",
               "parts": [
                "Global minipool limit reached"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          ]
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "contractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "contractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "UserDefinedTypeName",
               "namePath": "RocketMinipool"
              }
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "RocketStorageInterface"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "rocketStorage"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              },
              {
               "type": "Identifier",
               "name": "_depositType"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.exists",
                 "parts": [
                  "minipool.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "addItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.index",
                 "parts": [
                  "minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "addItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.index",
                 "parts": [
                  "node.minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAONodeTrustedInterface"
               },
               "name": "rocketDAONodeTrusted",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAONodeTrustedInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAONodeTrusted",
                  "parts": [
                   "rocketDAONodeTrusted"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "incrementMemberUnbondedValidatorCount"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolCreated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "contractAddress"
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketMinipoolQueueInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketMinipoolQueue",
                 "parts": [
                  "rocketMinipoolQueue"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "enqueueMinipool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_depositType"
            },
            {
             "type": "Identifier",
             "name": "contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "minipool"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeDeposit",
           "parts": [
            "rocketNodeDeposit"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "destroyMinipool",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "minipool"
            },
            "memberName": "getNodeAddress"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.exists",
                 "parts": [
                  "minipool.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "removeItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipools.index",
                 "parts": [
                  "minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "removeItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.index",
                 "parts": [
                  "node.minipools.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolDestroyed"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "nodeAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateTotalEffectiveRPLStake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_oldCount",
         "identifier": {
          "type": "Identifier",
          "name": "_oldCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_newCount",
         "identifier": {
          "type": "Identifier",
          "name": "_newCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsNodeInterface"
            },
            "name": "rocketDAOProtocolSettingsNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsNode",
               "parts": [
                "rocketDAOProtocolSettingsNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeStakingInterface"
            },
            "name": "rocketNodeStaking",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeStakingInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeStaking",
               "parts": [
                "rocketNodeStaking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "inConsensus"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Network is not in consensus",
             "parts": [
              "Network is not in consensus"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplStake",
            "identifier": {
             "type": "Identifier",
             "name": "rplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "memberName": "getNodeRPLStake"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxRplStakePerMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "maxRplStakePerMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsMinipool"
              },
              "memberName": "getHalfDepositUserAmount"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsNode"
              },
              "memberName": "getMaximumPerMinipoolStake"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oldMaxRplStake",
            "identifier": {
             "type": "Identifier",
             "name": "oldMaxRplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "maxRplStakePerMinipool"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_oldCount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newMaxRplStake",
            "identifier": {
             "type": "Identifier",
             "name": "newMaxRplStake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "maxRplStakePerMinipool"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_newCount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketNetworkPrices"
              },
              "memberName": "getRPLPrice"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_oldCount"
           },
           "right": {
            "type": "Identifier",
            "name": "_newCount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "right": {
               "type": "Identifier",
               "name": "newMaxRplStake"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": null
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "decrease",
               "identifier": {
                "type": "Identifier",
                "name": "decrease"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "oldMaxRplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "newMaxRplStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "delta",
               "identifier": {
                "type": "Identifier",
                "name": "delta"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "newMaxRplStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "delta"
              },
              "right": {
               "type": "Identifier",
               "name": "decrease"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "delta"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "decrease"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketNetworkPrices"
               },
               "memberName": "decreaseEffectiveRPLStake"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "delta"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_newCount"
           },
           "right": {
            "type": "Identifier",
            "name": "_oldCount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "rplStake"
              },
              "right": {
               "type": "Identifier",
               "name": "oldMaxRplStake"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": null
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "increase",
               "identifier": {
                "type": "Identifier",
                "name": "increase"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "newMaxRplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "oldMaxRplStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "delta",
               "identifier": {
                "type": "Identifier",
                "name": "delta"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplStake"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "oldMaxRplStake"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "delta"
              },
              "right": {
               "type": "Identifier",
               "name": "increase"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "delta"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "increase"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketNetworkPrices"
               },
               "memberName": "increaseEffectiveRPLStake"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "delta"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setMinipoolPubkey",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_pubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_pubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolInterface"
            },
            "name": "minipool",
            "identifier": {
             "type": "Identifier",
             "name": "minipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolInterface"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "minipool"
            },
            "memberName": "getNodeAddress"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBytes"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "minipool.pubkey",
                 "parts": [
                  "minipool.pubkey"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_pubkey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "validator.minipool",
                 "parts": [
                  "validator.minipool"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_pubkey"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "addItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "node.minipools.validating.index",
                 "parts": [
                  "node.minipools.validating.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolDelegate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./RocketMinipoolStorageLayout.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketMinipoolStorageLayout.sol",
      "parts": [
       "./RocketMinipoolStorageLayout.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/casper/DepositInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/casper/DepositInterface.sol",
      "parts": [
       "../../interface/casper/DepositInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolManagerInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolQueueInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolPenaltyInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkPricesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkPricesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkPricesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeManagerInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/node/RocketNodeStakingInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/node/RocketNodeStakingInterface.sol",
      "parts": [
       "../../interface/node/RocketNodeStakingInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkFeesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkFeesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkFeesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/token/RocketTokenRETHInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/token/RocketTokenRETHInterface.sol",
      "parts": [
       "../../interface/token/RocketTokenRETHInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolStatus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolStatus.sol",
      "parts": [
       "../../types/MinipoolStatus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipoolDelegate",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolStorageLayout"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "calcBase",
         "identifier": {
          "type": "Identifier",
          "name": "calcBase"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": "ether"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": "ether"
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "distributionCooldown",
         "identifier": {
          "type": "Identifier",
          "name": "distributionCooldown"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "100",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "100",
        "subdenomination": null
       }
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "StatusUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EtherDeposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EtherWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EtherWithdrawalProcessed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "executed",
         "identifier": {
          "type": "Identifier",
          "name": "executed"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nodeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "nodeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "userAmount",
         "identifier": {
          "type": "Identifier",
          "name": "userAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalBalance",
         "identifier": {
          "type": "Identifier",
          "name": "totalBalance"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatus",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "status"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFinalised",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "finalised"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatusBlock",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "statusBlock"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStatusTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "statusTime"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositType",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "depositType"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeAddress"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeFee"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeDepositBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeDepositBalance"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeRefundBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeRefundBalance"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeDepositAssigned",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeDepositAssigned"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "userDepositBalance"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositAssigned",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "userDepositAssignedTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserDepositAssignedTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "userDepositAssignedTime"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getWithdrawalCredentials",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodePacked"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "byte",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0x01",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "bytes11",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0x0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyInitialised",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "storageState"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "StorageState"
              },
              "memberName": "Initialised"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Storage state not initialised",
             "parts": [
              "Storage state not initialised"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyUninitialised",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "storageState"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "StorageState"
              },
              "memberName": "Uninitialised"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Storage state already initialised",
             "parts": [
              "Storage state already initialised"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyMinipoolOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_nodeAddress"
             },
             "right": {
              "type": "Identifier",
              "name": "nodeAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid minipool owner",
             "parts": [
              "Invalid minipool owner"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyMinipoolOwnerOrWithdrawalAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "_nodeAddress"
              },
              "right": {
               "type": "Identifier",
               "name": "nodeAddress"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "_nodeAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketStorage"
                },
                "memberName": "getNodeWithdrawalAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid minipool owner",
             "parts": [
              "Invalid minipool owner"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyLatestContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getContractAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_contractName"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid or outdated contract",
             "parts": [
              "Invalid or outdated contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "contractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "contractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract not found",
             "parts": [
              "Contract not found"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractAddress"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "initialise",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_nodeAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid node address",
             "parts": [
              "Invalid node address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_depositType"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolDeposit"
              },
              "memberName": "None"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid deposit type",
             "parts": [
              "Invalid deposit type"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkFeesInterface"
            },
            "name": "rocketNetworkFees",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkFeesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkFees",
               "parts": [
                "rocketNetworkFees"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "status"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolStatus"
            },
            "memberName": "Initialized"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "statusBlock"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "number"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "statusTime"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "Identifier",
            "name": "_depositType"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeAddress"
           },
           "right": {
            "type": "Identifier",
            "name": "_nodeAddress"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeFee"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketNetworkFees"
             },
             "memberName": "getNodeFee"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketTokenRETH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketTokenRETH",
              "parts": [
               "rocketTokenRETH"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "storageState"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "StorageState"
            },
            "memberName": "Initialised"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyUninitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "nodeDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Initialized"
             }
            },
            {
             "type": "StringLiteral",
             "value": "The node deposit can only be assigned while initialized",
             "parts": [
              "The node deposit can only be assigned while initialized"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "nodeDepositAssigned"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "The node deposit has already been assigned",
             "parts": [
              "The node deposit has already been assigned"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setStatus"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolStatus"
                },
                "memberName": "Prelaunch"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeDepositBalance"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeDepositAssigned"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherDeposited"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketNodeDeposit",
           "parts": [
            "rocketNodeDeposit"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "userDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Initialized"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Staking"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "The user deposit can only be assigned while initialized, in prelaunch, or staking",
             "parts": [
              "The user deposit can only be assigned while initialized, in prelaunch, or staking"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "userDepositAssignedTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "The user deposit has already been assigned",
             "parts": [
              "The user deposit has already been assigned"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "status"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolStatus"
            },
            "memberName": "Initialized"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setStatus"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "MinipoolStatus"
                },
                "memberName": "Prelaunch"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "userDepositBalance"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "userDepositAssignedTime"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeDepositBalance"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "nodeDepositBalance"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeRefundBalance"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "nodeRefundBalance"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "value"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherDeposited"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDepositPool",
           "parts": [
            "rocketDepositPool"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "refund",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "nodeRefundBalance"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No amount of the node deposit is available for refund",
             "parts": [
              "No amount of the node deposit is available for refund"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_refund"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "slash",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "nodeSlashBalance"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No balance to slash",
             "parts": [
              "No balance to slash"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_slash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "finalise",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Withdrawable"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool must be withdrawable",
             "parts": [
              "Minipool must be withdrawable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "withdrawalBlock"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool balance must have been distributed at least once",
             "parts": [
              "Minipool balance must have been distributed at least once"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_finalise"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwnerOrWithdrawalAddress",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "stake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_validatorPubkey",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorPubkey"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_validatorSignature",
         "identifier": {
          "type": "Identifier",
          "name": "_validatorSignature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_depositDataRoot",
         "identifier": {
          "type": "Identifier",
          "name": "_depositDataRoot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Prelaunch"
             }
            },
            {
             "type": "StringLiteral",
             "value": "The minipool can only begin staking while in prelaunch",
             "parts": [
              "The minipool can only begin staking while in prelaunch"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setStatus"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "MinipoolStatus"
             },
             "memberName": "Staking"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DepositInterface"
            },
            "name": "casperDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "casperDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "casperDeposit",
               "parts": [
                "casperDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "launchAmount",
            "identifier": {
             "type": "Identifier",
             "name": "launchAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "memberName": "getLaunchBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "balance"
             },
             "right": {
              "type": "Identifier",
              "name": "launchAmount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient balance to begin staking",
             "parts": [
              "Insufficient balance to begin staking"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketMinipoolManager"
               },
               "memberName": "getMinipoolByPubkey"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_validatorPubkey"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Validator pubkey is already in use",
             "parts": [
              "Validator pubkey is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "setMinipoolPubkey"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_validatorPubkey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "casperDeposit"
             },
             "memberName": "deposit"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "launchAmount"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_validatorPubkey"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getWithdrawalCredentials"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_validatorSignature"
            },
            {
             "type": "Identifier",
             "name": "_depositDataRoot"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setStatus"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "MinipoolStatus"
             },
             "memberName": "Staking"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "incrementNodeStakingMinipoolCount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setWithdrawable",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Staking"
             }
            },
            {
             "type": "StringLiteral",
             "value": "The minipool can only become withdrawable while staking",
             "parts": [
              "The minipool can only become withdrawable while staking"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setStatus"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "MinipoolStatus"
             },
             "memberName": "Withdrawable"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "userDepositAssignedTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketMinipoolQueueInterface"
               },
               "name": "rocketMinipoolQueue",
               "identifier": {
                "type": "Identifier",
                "name": "rocketMinipoolQueue"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketMinipoolQueueInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketMinipoolQueue",
                  "parts": [
                   "rocketMinipoolQueue"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketMinipoolQueue"
               },
               "memberName": "removeMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "depositType"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "decrementNodeStakingMinipoolCount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolStatus",
           "parts": [
            "rocketMinipoolStatus"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "distributeBalanceAndFinalise",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Withdrawable"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool must be withdrawable",
             "parts": [
              "Minipool must be withdrawable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalBalance",
            "identifier": {
             "type": "Identifier",
             "name": "totalBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "balance"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeRefundBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_distributeBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_finalise"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwnerOrWithdrawalAddress",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "distributeBalance",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Staking"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Withdrawable"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Minipool must be staking or withdrawable",
             "parts": [
              "Minipool must be staking or withdrawable"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalBalance",
            "identifier": {
             "type": "Identifier",
             "name": "totalBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "balance"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeRefundBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeWithdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "right": {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "right": {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Staking"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">=",
                   "left": {
                    "type": "Identifier",
                    "name": "totalBalance"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16",
                    "subdenomination": "ether"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Balance must be greater than 16 ETH",
                   "parts": [
                    "Balance must be greater than 16 ETH"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "block"
                    },
                    "memberName": "timestamp"
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "statusTime"
                     },
                     "memberName": "add"
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "14",
                      "subdenomination": "days"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Non-owner must wait 14 days after withdrawal to distribute balance",
                   "parts": [
                    "Non-owner must wait 14 days after withdrawal to distribute balance"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">=",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "this"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "balance"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": "ether"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Balance must be greater than 4 ETH",
                   "parts": [
                    "Balance must be greater than 4 ETH"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_distributeBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_finalise",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "finalised"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Minipool has already been finalised",
             "parts": [
              "Minipool has already been finalised"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "nodeSlashBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_slash"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "nodeRefundBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_refund"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "balance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "payable"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "rocketTokenRETH"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "transfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "balance"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketTokenRETHInterface"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketTokenRETH"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "depositExcessCollateral"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "incrementNodeFinalisedMinipoolCount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAONodeTrustedInterface"
               },
               "name": "rocketDAONodeTrusted",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAONodeTrustedInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAONodeTrusted",
                  "parts": [
                   "rocketDAONodeTrusted"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "decrementMemberUnbondedValidatorCount"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "finalised"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_distributeBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_balance",
         "identifier": {
          "type": "Identifier",
          "name": "_balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "withdrawalBlock"
              },
              "right": {
               "type": "Identifier",
               "name": "distributionCooldown"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Distribution of this minipool's balance is on cooldown",
             "parts": [
              "Distribution of this minipool's balance is on cooldown"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeAmount",
            "identifier": {
             "type": "Identifier",
             "name": "nodeAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "_balance"
           },
           "right": {
            "type": "Identifier",
            "name": "userDepositBalance"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeSlashBalance"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "userDepositBalance"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_balance"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "calculateNodeShare"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_balance"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "userAmount",
            "identifier": {
             "type": "Identifier",
             "name": "userAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_balance"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeRefundBalance"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "nodeRefundBalance"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "nodeAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "userAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "payable"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "rocketTokenRETH"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "transfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "userAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "withdrawalBlock"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "number"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherWithdrawalProcessed"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "nodeAmount"
            },
            {
             "type": "Identifier",
             "name": "userAmount"
            },
            {
             "type": "Identifier",
             "name": "_balance"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateNodeShare",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_balance",
         "identifier": {
          "type": "Identifier",
          "name": "_balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "stakingDepositTotal",
            "identifier": {
             "type": "Identifier",
             "name": "stakingDepositTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "32",
           "subdenomination": "ether"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "userAmount",
            "identifier": {
             "type": "Identifier",
             "name": "userAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "userDepositBalance"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "userAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "_balance"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_balance"
           },
           "right": {
            "type": "Identifier",
            "name": "stakingDepositTotal"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalRewards",
               "identifier": {
                "type": "Identifier",
                "name": "totalRewards"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_balance"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "stakingDepositTotal"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "halfRewards",
               "identifier": {
                "type": "Identifier",
                "name": "halfRewards"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "totalRewards"
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "nodeCommissionFee",
               "identifier": {
                "type": "Identifier",
                "name": "nodeCommissionFee"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "halfRewards"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "nodeFee"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "userAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "userAmount"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "halfRewards"
                  },
                  "memberName": "sub"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "nodeCommissionFee"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeAmount",
            "identifier": {
             "type": "Identifier",
             "name": "nodeAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_balance"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "userAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "penaltyRate",
            "identifier": {
             "type": "Identifier",
             "name": "penaltyRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketMinipoolPenaltyInterface"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketMinipoolPenalty"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getPenaltyRate"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "penaltyRate"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "penaltyAmount",
               "identifier": {
                "type": "Identifier",
                "name": "penaltyAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "nodeAmount"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "penaltyRate"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "calcBase"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "penaltyAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "nodeAmount"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "penaltyAmount"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "nodeAmount"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "nodeAmount"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "penaltyAmount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "nodeAmount"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateUserShare",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_balance",
         "identifier": {
          "type": "Identifier",
          "name": "_balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_balance"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "calculateNodeShare"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_balance"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "dissolve",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Initialized"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "MinipoolStatus"
               },
               "memberName": "Prelaunch"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "The minipool can only be dissolved while initialized or in prelaunch",
             "parts": [
              "The minipool can only be dissolved while initialized or in prelaunch"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolQueueInterface"
            },
            "name": "rocketMinipoolQueue",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolQueue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolQueueInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolQueue",
               "parts": [
                "rocketMinipoolQueue"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "Identifier",
               "name": "nodeAddress"
              }
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "status"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "MinipoolStatus"
                  },
                  "memberName": "Prelaunch"
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "block"
                    },
                    "memberName": "number"
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "statusBlock"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketDAOProtocolSettingsMinipool"
                   },
                   "memberName": "getLaunchTimeout"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "The minipool can only be dissolved by its owner unless it has timed out",
             "parts": [
              "The minipool can only be dissolved by its owner unless it has timed out"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setStatus"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "MinipoolStatus"
             },
             "memberName": "Dissolved"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "userDepositBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "recycleAmount",
               "identifier": {
                "type": "Identifier",
                "name": "recycleAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Identifier",
              "name": "userDepositBalance"
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "userDepositBalance"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "userDepositAssignedTime"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "NameValueExpression",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDepositPool"
                },
                "memberName": "recycleDissolvedDeposit"
               },
               "arguments": {
                "type": "NameValueList",
                "names": [
                 "value"
                ],
                "identifiers": [
                 {
                  "type": "Identifier",
                  "name": "value"
                 }
                ],
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "recycleAmount"
                 }
                ]
               }
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "EtherWithdrawn"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "rocketDepositPool"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "recycleAmount"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketMinipoolQueue"
               },
               "memberName": "removeMinipool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "depositType"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "close",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "MinipoolStatus"
              },
              "memberName": "Dissolved"
             }
            },
            {
             "type": "StringLiteral",
             "value": "The minipool can only be closed while dissolved",
             "parts": [
              "The minipool can only be closed while dissolved"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nodeBalance",
            "identifier": {
             "type": "Identifier",
             "name": "nodeBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "nodeDepositBalance"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeRefundBalance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "nodeBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeDepositBalance"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "nodeRefundBalance"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "nodeWithdrawalAddress",
               "identifier": {
                "type": "Identifier",
                "name": "nodeWithdrawalAddress"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketStorage"
               },
               "memberName": "getNodeWithdrawalAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NameValueExpression",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "nodeWithdrawalAddress"
                },
                "memberName": "call"
               },
               "arguments": {
                "type": "NameValueList",
                "names": [
                 "value"
                ],
                "identifiers": [
                 {
                  "type": "Identifier",
                  "name": "value"
                 }
                ],
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "nodeBalance"
                 }
                ]
               }
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "",
                "parts": [
                 ""
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "success"
               },
               {
                "type": "StringLiteral",
                "value": "Node ETH balance was not successfully transferred to node operator",
                "parts": [
                 "Node ETH balance was not successfully transferred to node operator"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "EtherWithdrawn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeWithdrawalAddress"
               },
               {
                "type": "Identifier",
                "name": "nodeBalance"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "RocketDAONodeTrustedInterface"
               },
               "name": "rocketDAONodeTrusted",
               "identifier": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RocketDAONodeTrustedInterface"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getContractAddress"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDAONodeTrusted",
                  "parts": [
                   "rocketDAONodeTrusted"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONodeTrusted"
               },
               "memberName": "decrementMemberUnbondedValidatorCount"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolManagerInterface"
            },
            "name": "rocketMinipoolManager",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolManagerInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolManager",
               "parts": [
                "rocketMinipoolManager"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolManager"
            },
            "memberName": "destroyMinipool"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "selfdestruct"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "payable"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketTokenRETH"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyInitialised",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolStatus"
         },
         "name": "_status",
         "identifier": {
          "type": "Identifier",
          "name": "_status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "status"
           },
           "right": {
            "type": "Identifier",
            "name": "_status"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "statusBlock"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "number"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "statusTime"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "StatusUpdated"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "uint8",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_status"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_refund",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "refundAmount",
            "identifier": {
             "type": "Identifier",
             "name": "refundAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "nodeRefundBalance"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeRefundBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "nodeWithdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "nodeWithdrawalAddress"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "refundAmount"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "StringLiteral",
             "value": "ETH refund amount was not successfully transferred to node operator",
             "parts": [
              "ETH refund amount was not successfully transferred to node operator"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherWithdrawn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeWithdrawalAddress"
            },
            {
             "type": "Identifier",
             "name": "refundAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_slash",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNodeStakingInterface"
            },
            "name": "rocketNodeStaking",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNodeStakingInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNodeStaking",
               "parts": [
                "rocketNodeStaking"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "slashAmount",
            "identifier": {
             "type": "Identifier",
             "name": "slashAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "nodeSlashBalance"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "nodeSlashBalance"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNodeStaking"
            },
            "memberName": "slashRPL"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "slashAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipool.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketMinipoolStorageLayout.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketMinipoolStorageLayout.sol",
      "parts": [
       "./RocketMinipoolStorageLayout.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketStorageInterface.sol",
      "parts": [
       "../../interface/RocketStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolStatus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolStatus.sol",
      "parts": [
       "../../types/MinipoolStatus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketMinipool",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketMinipoolStorageLayout"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "EtherReceived",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DelegateUpgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oldDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "oldDelegate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "newDelegate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DelegateRolledBack",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oldDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "oldDelegate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newDelegate",
         "identifier": {
          "type": "Identifier",
          "name": "newDelegate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyMinipoolOwner",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "withdrawalAddress",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawalAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getNodeWithdrawalAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "Identifier",
               "name": "nodeAddress"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "Identifier",
               "name": "withdrawalAddress"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only the node operator can access this method",
             "parts": [
              "Only the node operator can access this method"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_rocketStorageAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid storage address",
             "parts": [
              "Invalid storage address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketStorage"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "RocketStorageInterface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_rocketStorageAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "storageState"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "StorageState"
            },
            "memberName": "Uninitialised"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketMinipoolDelegate",
              "parts": [
               "rocketMinipoolDelegate"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolPenalty"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketMinipoolPenalty",
              "parts": [
               "rocketMinipoolPenalty"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolDelegate",
               "parts": [
                "rocketMinipoolDelegate"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "delegatecall"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "initialise(address,uint8)",
               "parts": [
                "initialise(address,uint8)"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint8",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_depositType"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getRevertMessage"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "data"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EtherReceived"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "delegateUpgrade",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegatePrev"
           },
           "right": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketMinipoolDelegate",
              "parts": [
               "rocketMinipoolDelegate"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "rocketMinipoolDelegate"
             },
             "right": {
              "type": "Identifier",
              "name": "rocketMinipoolDelegatePrev"
             }
            },
            {
             "type": "StringLiteral",
             "value": "New delegate is the same as the existing one",
             "parts": [
              "New delegate is the same as the existing one"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DelegateUpgraded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketMinipoolDelegatePrev"
            },
            {
             "type": "Identifier",
             "name": "rocketMinipoolDelegate"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "delegateRollback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "rocketMinipoolDelegatePrev"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Previous delegate contract is not set",
             "parts": [
              "Previous delegate contract is not set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "originalDelegate",
            "identifier": {
             "type": "Identifier",
             "name": "originalDelegate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "rocketMinipoolDelegate"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           },
           "right": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegatePrev"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegatePrev"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0x0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DelegateRolledBack"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "originalDelegate"
            },
            {
             "type": "Identifier",
             "name": "rocketMinipoolDelegate"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUseLatestDelegate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_setting",
         "identifier": {
          "type": "Identifier",
          "name": "_setting"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "useLatestDelegate"
           },
           "right": {
            "type": "Identifier",
            "name": "_setting"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyMinipoolOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getUseLatestDelegate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "useLatestDelegate"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDelegate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "rocketMinipoolDelegate"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPreviousDelegate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "rocketMinipoolDelegatePrev"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEffectiveDelegate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "useLatestDelegate"
           },
           "trueExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketMinipoolDelegate",
              "parts": [
               "rocketMinipoolDelegate"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_input",
         "identifier": {
          "type": "Identifier",
          "name": "_input"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "delegateContract",
            "identifier": {
             "type": "Identifier",
             "name": "delegateContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "useLatestDelegate"
           },
           "trueExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getContractAddress"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "rocketMinipoolDelegate",
              "parts": [
               "rocketMinipoolDelegate"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "rocketMinipoolDelegate"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "delegateContract"
            },
            "memberName": "delegatecall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_input"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getRevertMessage"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "data"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "data"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "contractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "contractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketStorage"
            },
            "memberName": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract not found",
             "parts": [
              "Contract not found"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractAddress"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRevertMessage",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_returnData",
         "identifier": {
          "type": "Identifier",
          "name": "_returnData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_returnData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "68",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "StringLiteral",
              "value": "Transaction reverted silently",
              "parts": [
               "Transaction reverted silently"
              ],
              "isUnicode": [
               false
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_returnData"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "_returnData",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x04"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_returnData"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "string",
               "stateMutability": null
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/helper/RevertOnTransfer.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ContractDefinition",
     "name": "RevertOnTransfer",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "revert"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/helper/PenaltyTest.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolPenaltyInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolPenaltyInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "PenaltyTest",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setPenaltyRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rate",
         "identifier": {
          "type": "Identifier",
          "name": "_rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolPenaltyInterface"
            },
            "name": "rocketMinipoolPenalty",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolPenalty"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolPenaltyInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolPenalty",
               "parts": [
                "rocketMinipoolPenalty"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolPenalty"
            },
            "memberName": "setPenaltyRate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_minipoolAddress"
            },
            {
             "type": "Identifier",
             "name": "_rate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/deposit/RocketDepositPool.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultWithdrawerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultWithdrawerInterface.sol",
      "parts": [
       "../../interface/RocketVaultWithdrawerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/minipool/RocketMinipoolQueueInterface.sol",
      "parts": [
       "../../interface/minipool/RocketMinipoolQueueInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/token/RocketTokenRETHInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/token/RocketTokenRETHInterface.sol",
      "parts": [
       "../../interface/token/RocketTokenRETHInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../types/MinipoolDeposit.sol",
      "parts": [
       "../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDepositPool",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDepositPoolInterface"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketVaultWithdrawerInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "DepositReceived",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DepositRecycled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DepositAssigned",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipool",
         "identifier": {
          "type": "Identifier",
          "name": "minipool"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ExcessWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StructDefinition",
       "name": "MinipoolAssignment",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minipoolAddress",
         "identifier": {
          "type": "Identifier",
          "name": "minipoolAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "etherAssigned",
         "identifier": {
          "type": "Identifier",
          "name": "etherAssigned"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyThisLatestContract",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "contract.addressrocketDepositPool",
                  "parts": [
                   "contract.addressrocketDepositPool"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid or outdated contract",
             "parts": [
              "Invalid or outdated contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketDepositPool",
             "parts": [
              "rocketDepositPool"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExcessBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolQueueInterface"
            },
            "name": "rocketMinipoolQueue",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolQueue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolQueueInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolQueue",
               "parts": [
                "rocketMinipoolQueue"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "minipoolCapacity",
            "identifier": {
             "type": "Identifier",
             "name": "minipoolCapacity"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketMinipoolQueue"
            },
            "memberName": "getEffectiveCapacity"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balance",
            "identifier": {
             "type": "Identifier",
             "name": "balance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "minipoolCapacity"
           },
           "right": {
            "type": "Identifier",
            "name": "balance"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "balance"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "minipoolCapacity"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "receiveVaultWithdrawalETH",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketVault",
           "parts": [
            "rocketVault"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsDeposit"
              },
              "memberName": "getDepositEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Deposits into Rocket Pool are currently disabled",
             "parts": [
              "Deposits into Rocket Pool are currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsDeposit"
               },
               "memberName": "getMinimumDeposit"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "The deposited amount is less than the minimum deposit size",
             "parts": [
              "The deposited amount is less than the minimum deposit size"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketVault"
                 },
                 "memberName": "balanceOf"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketDepositPool",
                  "parts": [
                   "rocketDepositPool"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "value"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAOProtocolSettingsDeposit"
               },
               "memberName": "getMaximumDepositPoolSize"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "The deposit pool size after depositing exceeds the maximum size",
             "parts": [
              "The deposit pool size after depositing exceeds the maximum size"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "user.deposit.block",
                 "parts": [
                  "user.deposit.block"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketTokenRETHInterface"
            },
            "name": "rocketTokenRETH",
            "identifier": {
             "type": "Identifier",
             "name": "rocketTokenRETH"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketTokenRETHInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketTokenRETH",
               "parts": [
                "rocketTokenRETH"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketTokenRETH"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositReceived"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "processDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVault"
            },
            {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleDissolvedDeposit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositRecycled"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "processDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVault"
            },
            {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredMinipool",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleExcessCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositRecycled"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "processDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVault"
            },
            {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketTokenRETH",
           "parts": [
            "rocketTokenRETH"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recycleLiquidatedStake",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositRecycled"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "processDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVault"
            },
            {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketAuctionManager",
           "parts": [
            "rocketAuctionManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "processDeposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketVaultInterface"
         },
         "name": "rocketVault",
         "identifier": {
          "type": "Identifier",
          "name": "rocketVault"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketDAOProtocolSettingsDepositInterface"
         },
         "name": "rocketDAOProtocolSettingsDeposit",
         "identifier": {
          "type": "Identifier",
          "name": "rocketDAOProtocolSettingsDeposit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketVault"
             },
             "memberName": "depositEther"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "value"
              }
             ]
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assignDeposits"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVault"
            },
            {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "assignDeposits",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsDepositInterface"
            },
            "name": "rocketDAOProtocolSettingsDeposit",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsDepositInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsDeposit",
               "parts": [
                "rocketDAOProtocolSettingsDeposit"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_assignDeposits"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketVault"
              },
              {
               "type": "Identifier",
               "name": "rocketDAOProtocolSettingsDeposit"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Deposit assignments are currently disabled",
             "parts": [
              "Deposit assignments are currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_assignDeposits",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketVaultInterface"
         },
         "name": "rocketVault",
         "identifier": {
          "type": "Identifier",
          "name": "rocketVault"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketDAOProtocolSettingsDepositInterface"
         },
         "name": "rocketDAOProtocolSettingsDeposit",
         "identifier": {
          "type": "Identifier",
          "name": "rocketDAOProtocolSettingsDeposit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAOProtocolSettingsDeposit"
             },
             "memberName": "getAssignDepositsEnabled"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
            },
            "name": "rocketDAOProtocolSettingsMinipool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsMinipool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsMinipoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsMinipool",
               "parts": [
                "rocketDAOProtocolSettingsMinipool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketMinipoolQueueInterface"
            },
            "name": "rocketMinipoolQueue",
            "identifier": {
             "type": "Identifier",
             "name": "rocketMinipoolQueue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketMinipoolQueueInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketMinipoolQueue",
               "parts": [
                "rocketMinipoolQueue"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balance",
            "identifier": {
             "type": "Identifier",
             "name": "balance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketDepositPool",
             "parts": [
              "rocketDepositPool"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalEther",
            "identifier": {
             "type": "Identifier",
             "name": "totalEther"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxAssignments",
            "identifier": {
             "type": "Identifier",
             "name": "maxAssignments"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsDeposit"
            },
            "memberName": "getMaximumDepositAssignments"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "MinipoolAssignment"
             },
             "length": null
            },
            "name": "assignments",
            "identifier": {
             "type": "Identifier",
             "name": "assignments"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "MinipoolAssignment"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "maxAssignments"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "MinipoolDeposit"
            },
            "name": "depositType",
            "identifier": {
             "type": "Identifier",
             "name": "depositType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "MinipoolDeposit"
           },
           "memberName": "None"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "count",
            "identifier": {
             "type": "Identifier",
             "name": "count"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "minipoolCapacity",
            "identifier": {
             "type": "Identifier",
             "name": "minipoolCapacity"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "maxAssignments"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "count"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "Identifier",
                    "name": "depositType"
                   },
                   {
                    "type": "Identifier",
                    "name": "count"
                   }
                  ],
                  "isArray": false
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketMinipoolQueue"
                   },
                   "memberName": "getNextDeposit"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "depositType"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "MinipoolDeposit"
                  },
                  "memberName": "None"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "BreakStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "minipoolCapacity"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketDAOProtocolSettingsMinipool"
                   },
                   "memberName": "getDepositUserAmount"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "depositType"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "UnaryOperation",
              "operator": "--",
              "subExpression": {
               "type": "Identifier",
               "name": "count"
              },
              "isPrefix": false
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "minipoolCapacity"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "balance"
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "totalEther"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "Identifier",
                "name": "minipoolCapacity"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "BreakStatement"
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "minipoolAddress",
               "identifier": {
                "type": "Identifier",
                "name": "minipoolAddress"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketMinipoolQueue"
               },
               "memberName": "dequeueMinipoolByDeposit"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "depositType"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "totalEther"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "totalEther"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "minipoolCapacity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "assignments"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "etherAssigned"
              },
              "right": {
               "type": "Identifier",
               "name": "minipoolCapacity"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "assignments"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "minipoolAddress"
              },
              "right": {
               "type": "Identifier",
               "name": "minipoolAddress"
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "totalEther"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketVault"
               },
               "memberName": "withdrawEther"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalEther"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "maxAssignments"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "assignments"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "etherAssigned"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "BreakStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "RocketMinipoolInterface"
                  },
                  "name": "minipool",
                  "identifier": {
                   "type": "Identifier",
                   "name": "minipool"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "RocketMinipoolInterface"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "assignments"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "minipoolAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "NameValueExpression",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "minipool"
                   },
                   "memberName": "userDeposit"
                  },
                  "arguments": {
                   "type": "NameValueList",
                   "names": [
                    "value"
                   ],
                   "identifiers": [
                    {
                     "type": "Identifier",
                     "name": "value"
                    }
                   ],
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "assignments"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "etherAssigned"
                    }
                   ]
                  }
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "DepositAssigned"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "assignments"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "minipoolAddress"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "assignments"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "etherAssigned"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "block"
                   },
                   "memberName": "timestamp"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawExcessBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketTokenRETHInterface"
            },
            "name": "rocketTokenRETH",
            "identifier": {
             "type": "Identifier",
             "name": "rocketTokenRETH"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketTokenRETHInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketTokenRETH",
               "parts": [
                "rocketTokenRETH"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_amount"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getExcessBalance"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient excess balance for withdrawal",
             "parts": [
              "Insufficient excess balance for withdrawal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "withdrawEther"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketTokenRETH"
             },
             "memberName": "depositExcess"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "_amount"
              }
             ]
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ExcessWithdrawn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyThisLatestContract",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketTokenRETH",
           "parts": [
            "rocketTokenRETH"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserLastDepositBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "user.deposit.block",
                 "parts": [
                  "user.deposit.block"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_address"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/RocketDAOProposal.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/RocketDAOProposalInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/RocketDAOProposalInterface.sol",
      "parts": [
       "../../interface/dao/RocketDAOProposalInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProposal",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProposalInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "ProposalAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "proposer",
         "identifier": {
          "type": "Identifier",
          "name": "proposer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "proposalDAO",
         "identifier": {
          "type": "Identifier",
          "name": "proposalDAO"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "proposalID"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "payload",
         "identifier": {
          "type": "Identifier",
          "name": "payload"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ProposalVoted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "proposalID"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "voter",
         "identifier": {
          "type": "Identifier",
          "name": "voter"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "supported",
         "identifier": {
          "type": "Identifier",
          "name": "supported"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ProposalExecuted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "proposalID"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "executer",
         "identifier": {
          "type": "Identifier",
          "name": "executer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ProposalCancelled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "proposalID"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "canceller",
         "identifier": {
          "type": "Identifier",
          "name": "canceller"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoProposalNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoProposalNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.proposal.",
          "parts": [
           "dao.proposal."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.proposal.",
        "parts": [
         "dao.proposal."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyDAOContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_daoName",
         "identifier": {
          "type": "Identifier",
          "name": "_daoName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "getContractName"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_daoName"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sender is not the required DAO contract",
             "parts": [
              "Sender is not the required DAO contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "total",
                 "parts": [
                  "total"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDAO",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "dao",
                 "parts": [
                  "dao"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getProposer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "proposer",
                 "parts": [
                  "proposer"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMessage",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "message",
                 "parts": [
                  "message"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStart",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "start",
                 "parts": [
                  "start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEnd",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "end",
                 "parts": [
                  "end"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExpires",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "expires",
                 "parts": [
                  "expires"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "created",
                 "parts": [
                  "created"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesFor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.for",
                 "parts": [
                  "votes.for"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesAgainst",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.against",
                 "parts": [
                  "votes.against"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVotesRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.required",
                 "parts": [
                  "votes.required"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCancelled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "cancelled",
                 "parts": [
                  "cancelled"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecuted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "executed",
                 "parts": [
                  "executed"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPayload",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBytes"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "payload",
                 "parts": [
                  "payload"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReceiptHasVoted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "receipt.hasVoted",
                 "parts": [
                  "receipt.hasVoted"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReceiptSupported",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "receipt.supported",
                 "parts": [
                  "receipt.supported"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getState",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProposalState"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getTotal"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "Identifier",
               "name": "_proposalID"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "_proposalID"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid proposal ID",
             "parts": [
              "Invalid proposal ID"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "votesFor",
            "identifier": {
             "type": "Identifier",
             "name": "votesFor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getVotesFor"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "votesAgainst",
            "identifier": {
             "type": "Identifier",
             "name": "votesAgainst"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getVotesAgainst"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getCancelled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ProposalState"
              },
              "memberName": "Cancelled"
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getExecuted"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_proposalID"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ReturnStatement",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ProposalState"
               },
               "memberName": "Executed"
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getStart"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ReturnStatement",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "ProposalState"
                },
                "memberName": "Pending"
               }
              }
             ]
            },
            "falseBody": {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">=",
               "left": {
                "type": "Identifier",
                "name": "votesFor"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getVotesRequired"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_proposalID"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getExpires"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_proposalID"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "ProposalState"
                 },
                 "memberName": "Succeeded"
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getEnd"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_proposalID"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ProposalState"
                  },
                  "memberName": "Active"
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "||",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "Identifier",
                  "name": "votesFor"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "votesAgainst"
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "votesFor"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "getVotesRequired"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_proposalID"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "ProposalState"
                   },
                   "memberName": "Defeated"
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "ProposalState"
                   },
                   "memberName": "Expired"
                  }
                 }
                ]
               }
              }
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_dao",
         "identifier": {
          "type": "Identifier",
          "name": "_dao"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_message",
         "identifier": {
          "type": "Identifier",
          "name": "_message"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_startTime",
         "identifier": {
          "type": "Identifier",
          "name": "_startTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_duration",
         "identifier": {
          "type": "Identifier",
          "name": "_duration"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_expires",
         "identifier": {
          "type": "Identifier",
          "name": "_expires"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_votesRequired",
         "identifier": {
          "type": "Identifier",
          "name": "_votesRequired"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_payload",
         "identifier": {
          "type": "Identifier",
          "name": "_payload"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_startTime"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal start time must be in the future",
             "parts": [
              "Proposal start time must be in the future"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_duration"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal cannot have a duration of 0",
             "parts": [
              "Proposal cannot have a duration of 0"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_expires"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal cannot have a execution expiration of 0",
             "parts": [
              "Proposal cannot have a execution expiration of 0"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_votesRequired"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal cannot have a 0 votes required to be successful",
             "parts": [
              "Proposal cannot have a 0 votes required to be successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "endTime",
            "identifier": {
             "type": "Identifier",
             "name": "endTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_startTime"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_duration"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "expires",
            "identifier": {
             "type": "Identifier",
             "name": "expires"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "endTime"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_expires"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "proposalID",
            "identifier": {
             "type": "Identifier",
             "name": "proposalID"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getTotal"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "proposer",
                 "parts": [
                  "proposer"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_member"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "dao",
                 "parts": [
                  "dao"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_dao"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "message",
                 "parts": [
                  "message"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_message"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "start",
                 "parts": [
                  "start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_startTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "end",
                 "parts": [
                  "end"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "endTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "expires",
                 "parts": [
                  "expires"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "expires"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "created",
                 "parts": [
                  "created"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.for",
                 "parts": [
                  "votes.for"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.against",
                 "parts": [
                  "votes.against"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "votes.required",
                 "parts": [
                  "votes.required"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_votesRequired"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "cancelled",
                 "parts": [
                  "cancelled"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "executed",
                 "parts": [
                  "executed"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBytes"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "payload",
                 "parts": [
                  "payload"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_payload"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "total",
                 "parts": [
                  "total"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ProposalAdded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_member"
            },
            {
             "type": "Identifier",
             "name": "_dao"
            },
            {
             "type": "Identifier",
             "name": "proposalID"
            },
            {
             "type": "Identifier",
             "name": "_payload"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "proposalID"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOContract",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_dao"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "vote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_votes",
         "identifier": {
          "type": "Identifier",
          "name": "_votes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_support",
         "identifier": {
          "type": "Identifier",
          "name": "_support"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getState"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ProposalState"
              },
              "memberName": "Succeeded"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal has passed, voting is complete and the proposal can now be executed",
             "parts": [
              "Proposal has passed, voting is complete and the proposal can now be executed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getState"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ProposalState"
              },
              "memberName": "Active"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Voting is not active for this proposal",
             "parts": [
              "Voting is not active for this proposal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getReceiptHasVoted"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               },
               {
                "type": "Identifier",
                "name": "_member"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Member has already voted on proposal",
             "parts": [
              "Member has already voted on proposal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_support"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "addUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "daoProposalNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "votes.for",
                    "parts": [
                     "votes.for"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_proposalID"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "_votes"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "addUint"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "daoProposalNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "votes.against",
                    "parts": [
                     "votes.against"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_proposalID"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "_votes"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "receipt.votes",
                 "parts": [
                  "receipt.votes"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                },
                {
                 "type": "Identifier",
                 "name": "_member"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_votes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "receipt.hasVoted",
                 "parts": [
                  "receipt.hasVoted"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                },
                {
                 "type": "Identifier",
                 "name": "_member"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "receipt.supported",
                 "parts": [
                  "receipt.supported"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                },
                {
                 "type": "Identifier",
                 "name": "_member"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_support"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ProposalVoted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            },
            {
             "type": "Identifier",
             "name": "_member"
            },
            {
             "type": "Identifier",
             "name": "_support"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOContract",
         "arguments": [
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDAO"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getState"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ProposalState"
              },
              "memberName": "Succeeded"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal has not succeeded, has expired or has already been executed",
             "parts": [
              "Proposal has not succeeded, has expired or has already been executed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "executed",
                 "parts": [
                  "executed"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "response",
            "identifier": {
             "type": "Identifier",
             "name": "response"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getDAO"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "call"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getPayload"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_proposalID"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getRevertMsg"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "response"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ProposalExecuted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "tx"
             },
             "memberName": "origin"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_member",
         "identifier": {
          "type": "Identifier",
          "name": "_member"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getState"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ProposalState"
               },
               "memberName": "Pending"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getState"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ProposalState"
               },
               "memberName": "Active"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal can only be cancelled if pending or active",
             "parts": [
              "Proposal can only be cancelled if pending or active"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getProposer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "_member"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Proposal can only be cancelled by the proposer",
             "parts": [
              "Proposal can only be cancelled by the proposer"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoProposalNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "cancelled",
                 "parts": [
                  "cancelled"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalID"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ProposalCancelled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            },
            {
             "type": "Identifier",
             "name": "_member"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOContract",
         "arguments": [
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDAO"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/RocketDAOProtocolProposals.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/claims/RocketClaimDAOInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/claims/RocketClaimDAOInterface.sol",
      "parts": [
       "../../../interface/rewards/claims/RocketClaimDAOInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/RocketDAOProposalInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/RocketDAOProposalInterface.sol",
      "parts": [
       "../../../interface/dao/RocketDAOProposalInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../types/SettingType.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../types/SettingType.sol",
      "parts": [
       "../../../types/SettingType.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolProposals",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolProposalsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.protocol.",
          "parts": [
           "dao.protocol."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.protocol.",
        "parts": [
         "dao.protocol."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyExecutingContracts",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocol",
                 "parts": [
                  "rocketDAOProtocol"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProposal",
                 "parts": [
                  "rocketDAOProposal"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sender is not permitted to access executing methods",
             "parts": [
              "Sender is not permitted to access executing methods"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingMulti",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingContractNames",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractNames"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingPaths",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPaths"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "SettingType"
          },
          "length": null
         },
         "name": "_types",
         "identifier": {
          "type": "Identifier",
          "name": "_types"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_settingContractNames"
                },
                "memberName": "length"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_settingPaths"
                },
                "memberName": "length"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_settingPaths"
                },
                "memberName": "length"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_types"
                },
                "memberName": "length"
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_types"
               },
               "memberName": "length"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_data"
               },
               "memberName": "length"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid parameters supplied",
             "parts": [
              "Invalid parameters supplied"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_settingContractNames"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_types"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "SettingType"
               },
               "memberName": "UINT256"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "value",
                  "identifier": {
                   "type": "Identifier",
                   "name": "value"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "decode"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_data"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    }
                   ],
                   "isArray": false
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "proposalSettingUint"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_settingContractNames"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_settingPaths"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  {
                   "type": "Identifier",
                   "name": "value"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_types"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "SettingType"
                },
                "memberName": "BOOL"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "bool",
                    "stateMutability": null
                   },
                   "name": "value",
                   "identifier": {
                    "type": "Identifier",
                    "name": "value"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "decode"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_data"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "ElementaryTypeName",
                      "name": "bool",
                      "stateMutability": null
                     }
                    ],
                    "isArray": false
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "proposalSettingBool"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_settingContractNames"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_settingPaths"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   {
                    "type": "Identifier",
                    "name": "value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_types"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "SettingType"
                 },
                 "memberName": "ADDRESS"
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "address",
                     "stateMutability": null
                    },
                    "name": "value",
                    "identifier": {
                     "type": "Identifier",
                     "name": "value"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "abi"
                    },
                    "memberName": "decode"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_data"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "Identifier",
                       "name": "address"
                      }
                     ],
                     "isArray": false
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "proposalSettingAddress"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_settingContractNames"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_settingPaths"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    {
                     "type": "Identifier",
                     "name": "value"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "revert"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "Invalid setting type",
                     "parts": [
                      "Invalid setting type"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                ]
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsInterface"
            },
            "name": "rocketDAOProtocolSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingContractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "memberName": "setSettingUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsInterface"
            },
            "name": "rocketDAOProtocolSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingContractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "memberName": "setSettingBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsInterface"
            },
            "name": "rocketDAOProtocolSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingContractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettings"
            },
            "memberName": "setSettingAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingRewardsClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsRewardsInterface"
            },
            "name": "rocketDAOProtocolSettingsRewards",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsRewards"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsRewardsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsRewards",
               "parts": [
                "rocketDAOProtocolSettingsRewards"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOProtocolSettingsRewards"
            },
            "memberName": "setSettingRewardsClaimer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_contractName"
            },
            {
             "type": "Identifier",
             "name": "_perc"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSpendTreasury",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketClaimDAOInterface"
            },
            "name": "rocketDAOTreasury",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAOTreasury"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketClaimDAOInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketClaimDAO",
               "parts": [
                "rocketClaimDAO"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAOTreasury"
            },
            "memberName": "spend"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_invoiceID"
            },
            {
             "type": "Identifier",
             "name": "_recipientAddress"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/RocketDAOProtocolActions.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/RocketDAOProtocolActionsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/RocketDAOProtocolActionsInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/RocketDAOProtocolActionsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolActions",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolActionsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.protocol.",
          "parts": [
           "dao.protocol."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.protocol.",
        "parts": [
         "dao.protocol."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/RocketDAOProtocol.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "PragmaDirective",
     "name": "abicoder",
     "value": "v2"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/RocketDAOProtocolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../types/SettingType.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../types/SettingType.sol",
      "parts": [
       "../../../types/SettingType.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocol",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.protocol.",
          "parts": [
           "dao.protocol."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.protocol.",
        "parts": [
         "dao.protocol."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyBootstrapMode",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBootstrapModeDisabled"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "Bootstrap mode not engaged",
             "parts": [
              "Bootstrap mode not engaged"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getBootstrapModeDisabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "bootstrapmode.disabled",
                 "parts": [
                  "bootstrapmode.disabled"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingMulti",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingContractNames",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractNames"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_settingPaths",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPaths"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "SettingType"
          },
          "length": null
         },
         "name": "_types",
         "identifier": {
          "type": "Identifier",
          "name": "_types"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_values",
         "identifier": {
          "type": "Identifier",
          "name": "_values"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingMulti"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractNames"
            },
            {
             "type": "Identifier",
             "name": "_settingPaths"
            },
            {
             "type": "Identifier",
             "name": "_types"
            },
            {
             "type": "Identifier",
             "name": "_values"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractName"
            },
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractName"
            },
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractName"
            },
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingRewardsClaimer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_contractName"
            },
            {
             "type": "Identifier",
             "name": "_perc"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSpendTreasury",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_invoiceID",
         "identifier": {
          "type": "Identifier",
          "name": "_invoiceID"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_recipientAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_recipientAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAOProtocolProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSpendTreasury"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_invoiceID"
            },
            {
             "type": "Identifier",
             "name": "_recipientAddress"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapDisable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirmDisableBootstrapMode",
         "identifier": {
          "type": "Identifier",
          "name": "_confirmDisableBootstrapMode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_confirmDisableBootstrapMode"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "You must confirm disabling bootstrap mode, it can only be done once!",
             "parts": [
              "You must confirm disabling bootstrap mode, it can only be done once!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "bootstrapmode.disabled",
                 "parts": [
                  "bootstrapmode.disabled"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAOProtocol",
           "parts": [
            "rocketDAOProtocol"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsRewards.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsRewards",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsRewardsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingRewardsClaimer"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketClaimDAO",
                "parts": [
                 "rocketClaimDAO"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingRewardsClaimer"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketClaimNode",
                "parts": [
                 "rocketClaimNode"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.70",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingRewardsClaimer"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rocketClaimTrustedNode",
                "parts": [
                 "rocketClaimTrustedNode"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.2",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rpl.rewards.claim.period.time",
                "parts": [
                 "rpl.rewards.claim.period.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "14",
                "subdenomination": "days"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "rewards",
           "parts": [
            "rewards"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingRewardsClaimer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_perc",
         "identifier": {
          "type": "Identifier",
          "name": "_perc"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "percTotal",
            "identifier": {
             "type": "Identifier",
             "name": "percTotal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getRewardsClaimersPercTotal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "percTotalUpdate",
            "identifier": {
             "type": "Identifier",
             "name": "percTotalUpdate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "percTotal"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_perc"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getRewardsClaimerPerc"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_contractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "percTotalUpdate"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": "ether"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Claimers cannot total more than 100%",
             "parts": [
              "Claimers cannot total more than 100%"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.totalPerc",
                 "parts": [
                  "group.totalPerc"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "percTotalUpdate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.amount",
                 "parts": [
                  "group.amount"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_perc"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.amount.updated.time",
                 "parts": [
                  "group.amount.updated.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimerPerc",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.amount",
                 "parts": [
                  "group.amount"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimerPercTimeUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractName",
         "identifier": {
          "type": "Identifier",
          "name": "_contractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.amount.updated.time",
                 "parts": [
                  "group.amount.updated.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractName"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimersPercTotal",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "rewards.claims",
                 "parts": [
                  "rewards.claims"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "group.totalPerc",
                 "parts": [
                  "group.totalPerc"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRewardsClaimIntervalTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rpl.rewards.claim.period.time",
             "parts": [
              "rpl.rewards.claim.period.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNode.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsNode",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsNodeInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "node.registration.enabled",
                "parts": [
                 "node.registration.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "node.deposit.enabled",
                "parts": [
                 "node.deposit.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "node.per.minipool.stake.minimum",
                "parts": [
                 "node.per.minipool.stake.minimum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "node.per.minipool.stake.maximum",
                "parts": [
                 "node.per.minipool.stake.maximum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1.5",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "node",
           "parts": [
            "node"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRegistrationEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "node.registration.enabled",
             "parts": [
              "node.registration.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "node.deposit.enabled",
             "parts": [
              "node.deposit.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumPerMinipoolStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "node.per.minipool.stake.minimum",
             "parts": [
              "node.per.minipool.stake.minimum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumPerMinipoolStake",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "node.per.minipool.stake.maximum",
             "parts": [
              "node.per.minipool.stake.maximum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNetwork.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsNetwork",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsNetworkInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.consensus.threshold",
                "parts": [
                 "network.consensus.threshold"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.51",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.submit.balances.enabled",
                "parts": [
                 "network.submit.balances.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.submit.balances.frequency",
                "parts": [
                 "network.submit.balances.frequency"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "5760",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.submit.prices.enabled",
                "parts": [
                 "network.submit.prices.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.submit.prices.frequency",
                "parts": [
                 "network.submit.prices.frequency"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "5760",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.node.fee.minimum",
                "parts": [
                 "network.node.fee.minimum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.05",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.node.fee.target",
                "parts": [
                 "network.node.fee.target"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.10",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.node.fee.maximum",
                "parts": [
                 "network.node.fee.maximum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.20",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.node.fee.demand.range",
                "parts": [
                 "network.node.fee.demand.range"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1000",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.reth.collateral.target",
                "parts": [
                 "network.reth.collateral.target"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.reth.deposit.delay",
                "parts": [
                 "network.reth.deposit.delay"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "5760",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "network",
           "parts": [
            "network"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_settingPath"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "network.reth.deposit.delay",
                "parts": [
                 "network.reth.deposit.delay"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "_value"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "5760",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "rETH deposit delay cannot exceed 5760 blocks",
                "parts": [
                 "rETH deposit delay cannot exceed 5760 blocks"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeConsensusThreshold",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.consensus.threshold",
             "parts": [
              "network.consensus.threshold"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitBalancesEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.submit.balances.enabled",
             "parts": [
              "network.submit.balances.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitBalancesFrequency",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.submit.balances.frequency",
             "parts": [
              "network.submit.balances.frequency"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitPricesEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.submit.prices.enabled",
             "parts": [
              "network.submit.prices.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitPricesFrequency",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.submit.prices.frequency",
             "parts": [
              "network.submit.prices.frequency"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.node.fee.minimum",
             "parts": [
              "network.node.fee.minimum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTargetNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.node.fee.target",
             "parts": [
              "network.node.fee.target"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumNodeFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.node.fee.maximum",
             "parts": [
              "network.node.fee.maximum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNodeFeeDemandRange",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.node.fee.demand.range",
             "parts": [
              "network.node.fee.demand.range"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTargetRethCollateralRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.reth.collateral.target",
             "parts": [
              "network.reth.collateral.target"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRethDepositDelay",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "network.reth.deposit.delay",
             "parts": [
              "network.reth.deposit.delay"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsMinipool.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../types/MinipoolDeposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../types/MinipoolDeposit.sol",
      "parts": [
       "../../../../types/MinipoolDeposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsMinipool",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsMinipoolInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "minipool.submit.withdrawable.enabled",
                "parts": [
                 "minipool.submit.withdrawable.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "minipool.launch.timeout",
                "parts": [
                 "minipool.launch.timeout"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "5760",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "minipool.maximum.count",
                "parts": [
                 "minipool.maximum.count"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "100",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "minipool",
           "parts": [
            "minipool"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLaunchBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "32",
           "subdenomination": "ether"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositNodeAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getFullDepositNodeAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getHalfDepositNodeAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getEmptyDepositNodeAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFullDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLaunchBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getHalfDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLaunchBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEmptyDepositNodeAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": "ether"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositUserAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "MinipoolDeposit"
         },
         "name": "_depositType",
         "identifier": {
          "type": "Identifier",
          "name": "_depositType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Full"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getFullDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Half"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getHalfDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_depositType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "MinipoolDeposit"
            },
            "memberName": "Empty"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getEmptyDepositUserAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFullDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLaunchBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getHalfDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLaunchBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getEmptyDepositUserAmount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLaunchBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSubmitWithdrawableEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "minipool.submit.withdrawable.enabled",
             "parts": [
              "minipool.submit.withdrawable.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLaunchTimeout",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "minipool.launch.timeout",
             "parts": [
              "minipool.launch.timeout"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "minipool.maximum.count",
             "parts": [
              "minipool.maximum.count"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsInflation.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/token/RocketTokenRPLInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/token/RocketTokenRPLInterface.sol",
      "parts": [
       "../../../../interface/token/RocketTokenRPLInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsInflation",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsInflationInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rpl.inflation.interval.rate",
                "parts": [
                 "rpl.inflation.interval.rate"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1000133680617113500",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rpl.inflation.interval.start",
                "parts": [
                 "rpl.inflation.interval.start"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "14",
                 "subdenomination": "days"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "inflation",
           "parts": [
            "inflation"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "settingKey",
            "identifier": {
             "type": "Identifier",
             "name": "settingKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "bytes",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingPath"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "settingKey"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "rpl.inflation.interval.start",
                "parts": [
                 "rpl.inflation.interval.start"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "_value"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Inflation interval start time must be in the future",
                "parts": [
                 "Inflation interval start time must be in the future"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getInflationIntervalStartTime"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "getInflationIntervalStartTime"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "block"
                    },
                    "memberName": "timestamp"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Inflation has already started",
                   "parts": [
                    "Inflation has already started"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "settingKey"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rpl.inflation.interval.rate",
                 "parts": [
                  "rpl.inflation.interval.rate"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "address",
                 "stateMutability": null
                },
                "name": "rplContractAddress",
                "identifier": {
                 "type": "Identifier",
                 "name": "rplContractAddress"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddressUnsafe"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketTokenRPL",
                 "parts": [
                  "rocketTokenRPL"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "rplContractAddress"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0x0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "RocketTokenRPLInterface"
                   },
                   "name": "rplContract",
                   "identifier": {
                    "type": "Identifier",
                    "name": "rplContract"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "RocketTokenRPLInterface"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "rplContractAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rplContract"
                   },
                   "memberName": "inflationMintTokens"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalRate",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rpl.inflation.interval.rate",
             "parts": [
              "rpl.inflation.interval.rate"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInflationIntervalStartTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rpl.inflation.interval.start",
             "parts": [
              "rpl.inflation.interval.start"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsDeposit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsDeposit",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsDepositInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "deposit.enabled",
                "parts": [
                 "deposit.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "deposit.assign.enabled",
                "parts": [
                 "deposit.assign.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "deposit.minimum",
                "parts": [
                 "deposit.minimum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.01",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "deposit.pool.maximum",
                "parts": [
                 "deposit.pool.maximum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1000",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "deposit.assign.maximum",
                "parts": [
                 "deposit.assign.maximum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "deposit",
           "parts": [
            "deposit"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getDepositEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "deposit.enabled",
             "parts": [
              "deposit.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAssignDepositsEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "deposit.assign.enabled",
             "parts": [
              "deposit.assign.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinimumDeposit",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "deposit.minimum",
             "parts": [
              "deposit.minimum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumDepositPoolSize",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "deposit.pool.maximum",
             "parts": [
              "deposit.pool.maximum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMaximumDepositAssignments",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "deposit.assign.maximum",
             "parts": [
              "deposit.assign.maximum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsAuction.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAOProtocolSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAOProtocolSettings.sol",
      "parts": [
       "./RocketDAOProtocolSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettingsAuction",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsAuctionInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.lot.create.enabled",
                "parts": [
                 "auction.lot.create.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingBool"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.lot.bidding.enabled",
                "parts": [
                 "auction.lot.bidding.enabled"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.lot.value.minimum",
                "parts": [
                 "auction.lot.value.minimum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.lot.value.maximum",
                "parts": [
                 "auction.lot.value.maximum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "10",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.lot.duration",
                "parts": [
                 "auction.lot.duration"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "40320",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.price.start",
                "parts": [
                 "auction.price.start"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "auction.price.reserve",
                "parts": [
                 "auction.price.reserve"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.5",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAOProtocolSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "auction",
           "parts": [
            "auction"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreateLotEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.lot.create.enabled",
             "parts": [
              "auction.lot.create.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBidOnLotEnabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingBool"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.lot.bidding.enabled",
             "parts": [
              "auction.lot.bidding.enabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotMinimumEthValue",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.lot.value.minimum",
             "parts": [
              "auction.lot.value.minimum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotMaximumEthValue",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.lot.value.maximum",
             "parts": [
              "auction.lot.value.maximum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotDuration",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.lot.duration",
             "parts": [
              "auction.lot.duration"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getStartingPriceRatio",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.price.start",
             "parts": [
              "auction.price.start"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getReservePriceRatio",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "auction.price.reserve",
             "parts": [
              "auction.price.reserve"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettings.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../RocketBase.sol",
      "parts": [
       "../../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
      "parts": [
       "../../../../interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAOProtocolSettings",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAOProtocolSettingsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "settingNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "settingNameSpace"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyDAOProtocolProposal",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "deployed",
                 "parts": [
                  "deployed"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "require"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProtocolProposals",
                 "parts": [
                  "rocketDAOProtocolProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             {
              "type": "StringLiteral",
              "value": "Only DAO Protocol Proposals contract can update a setting",
              "parts": [
               "Only DAO Protocol Proposals contract can update a setting"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "_settingNameSpace"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "settingNameSpace"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "dao.protocol.setting.",
                "parts": [
                 "dao.protocol.setting."
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "Identifier",
                "name": "_settingNameSpace"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAOProtocolProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/RocketDAONodeTrustedUpgrade.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedUpgrade",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedUpgradeInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "ContractUpgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oldAddress",
         "identifier": {
          "type": "Identifier",
          "name": "oldAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "newAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ContractAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAddress",
         "identifier": {
          "type": "Identifier",
          "name": "newAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ABIUpgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ABIAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "typeHash",
            "identifier": {
             "type": "Identifier",
             "name": "typeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_type"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "upgradeContract",
                "parts": [
                 "upgradeContract"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_upgradeContract"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_name"
             },
             {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             {
              "type": "Identifier",
              "name": "_contractAbi"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "addContract",
                "parts": [
                 "addContract"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addContract"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_name"
             },
             {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             {
              "type": "Identifier",
              "name": "_contractAbi"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "upgradeABI",
                "parts": [
                 "upgradeABI"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_upgradeABI"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_name"
             },
             {
              "type": "Identifier",
              "name": "_contractAbi"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "addABI",
                "parts": [
                 "addABI"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addABI"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_name"
             },
             {
              "type": "Identifier",
              "name": "_contractAbi"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_upgradeContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nameHash",
            "identifier": {
             "type": "Identifier",
             "name": "nameHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_name"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketVault",
                  "parts": [
                   "rocketVault"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade the vault",
             "parts": [
              "Cannot upgrade the vault"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketTokenRETH",
                  "parts": [
                   "rocketTokenRETH"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade token contracts",
             "parts": [
              "Cannot upgrade token contracts"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketTokenRPL",
                  "parts": [
                   "rocketTokenRPL"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade token contracts",
             "parts": [
              "Cannot upgrade token contracts"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketTokenRPLFixedSupply",
                  "parts": [
                   "rocketTokenRPLFixedSupply"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade token contracts",
             "parts": [
              "Cannot upgrade token contracts"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "casperDeposit",
                  "parts": [
                   "casperDeposit"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade the casper deposit contract",
             "parts": [
              "Cannot upgrade the casper deposit contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "nameHash"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "rocketMinipoolPenalty",
                  "parts": [
                   "rocketMinipoolPenalty"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot upgrade minipool penalty contract",
             "parts": [
              "Cannot upgrade minipool penalty contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "oldContractAddress",
            "identifier": {
             "type": "Identifier",
             "name": "oldContractAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "oldContractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract does not exist",
             "parts": [
              "Contract does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid contract address",
             "parts": [
              "Invalid contract address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             "right": {
              "type": "Identifier",
              "name": "oldContractAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "The contract address cannot be set to its current address",
             "parts": [
              "The contract address cannot be set to its current address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "contract.exists",
                    "parts": [
                     "contract.exists"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_contractAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Contract address is already in use",
             "parts": [
              "Contract address is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_contractAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Empty ABI is invalid",
             "parts": [
              "Empty ABI is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.exists",
                 "parts": [
                  "contract.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.name",
                 "parts": [
                  "contract.name"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.name",
                 "parts": [
                  "contract.name"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "oldContractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.exists",
                 "parts": [
                  "contract.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "oldContractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ContractUpgraded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nameHash"
            },
            {
             "type": "Identifier",
             "name": "oldContractAddress"
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_addContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nameHash",
            "identifier": {
             "type": "Identifier",
             "name": "nameHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_name"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid contract name",
             "parts": [
              "Invalid contract name"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "contract.address",
                    "parts": [
                     "contract.address"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_name"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract name is already in use",
             "parts": [
              "Contract name is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "existingAbi",
            "identifier": {
             "type": "Identifier",
             "name": "existingAbi"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "existingAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Contract name is already in use",
             "parts": [
              "Contract name is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_contractAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid contract address",
             "parts": [
              "Invalid contract address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "contract.exists",
                    "parts": [
                     "contract.exists"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_contractAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Contract address is already in use",
             "parts": [
              "Contract address is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_contractAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Empty ABI is invalid",
             "parts": [
              "Empty ABI is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.exists",
                 "parts": [
                  "contract.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.name",
                 "parts": [
                  "contract.name"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_contractAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.address",
                 "parts": [
                  "contract.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ContractAdded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nameHash"
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_upgradeABI",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "existingAbi",
            "identifier": {
             "type": "Identifier",
             "name": "existingAbi"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "existingAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "ABI does not exist",
             "parts": [
              "ABI does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_contractAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Empty ABI is invalid",
             "parts": [
              "Empty ABI is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "bytes",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "existingAbi"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "bytes",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_contractAbi"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ABIs are identical",
             "parts": [
              "ABIs are identical"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ABIUpgraded"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_addABI",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nameHash",
            "identifier": {
             "type": "Identifier",
             "name": "nameHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_name"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid ABI name",
             "parts": [
              "Invalid ABI name"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_contractAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Empty ABI is invalid",
             "parts": [
              "Empty ABI is invalid"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAddress"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "contract.address",
                    "parts": [
                     "contract.address"
                    ],
                    "isUnicode": [
                     false
                    ]
                   },
                   {
                    "type": "Identifier",
                    "name": "_name"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ABI name is already in use",
             "parts": [
              "ABI name is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "existingAbi",
            "identifier": {
             "type": "Identifier",
             "name": "existingAbi"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "existingAbi"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "ABI name is already in use",
             "parts": [
              "ABI name is already in use"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "contract.abi",
                 "parts": [
                  "contract.abi"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_name"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ABIAdded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "nameHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/RocketDAONodeTrustedProposals.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
      "parts": [
       "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/RocketDAOProposalInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/RocketDAOProposalInterface.sol",
      "parts": [
       "../../../interface/dao/RocketDAOProposalInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedProposals",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedProposalsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.trustednodes.",
          "parts": [
           "dao.trustednodes."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.trustednodes.",
        "parts": [
         "dao.trustednodes."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyExecutingContracts",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrusted",
                 "parts": [
                  "rocketDAONodeTrusted"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAOProposal",
                 "parts": [
                  "rocketDAOProposal"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sender is not permitted to access executing methods",
             "parts": [
              "Sender is not permitted to access executing methods"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "propose",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_proposalMessage",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_payload",
         "identifier": {
          "type": "Identifier",
          "name": "_payload"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProposalInterface"
            },
            "name": "daoProposal",
            "identifier": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProposalInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProposal",
               "parts": [
                "rocketDAOProposal"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "daoNodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsProposalsInterface"
            },
            "name": "rocketDAONodeTrustedSettingsProposals",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsProposals"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsProposalsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsProposals",
               "parts": [
                "rocketDAONodeTrustedSettingsProposals"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "daoNodeTrusted"
                 },
                 "memberName": "getMemberLastProposalTime"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrustedSettingsProposals"
                 },
                 "memberName": "getCooldownTime"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Member has not waited long enough to make another proposal",
             "parts": [
              "Member has not waited long enough to make another proposal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberMinRequired"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Min member count not met to allow proposals to be added",
             "parts": [
              "Min member count not met to allow proposals to be added"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.proposal.lasttime",
                 "parts": [
                  "member.proposal.lasttime"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "StringLiteral",
             "value": "rocketDAONodeTrustedProposals",
             "parts": [
              "rocketDAONodeTrustedProposals"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "_proposalMessage"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAONodeTrustedSettingsProposals"
                },
                "memberName": "getVoteDelayTime"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAONodeTrustedSettingsProposals"
              },
              "memberName": "getVoteTime"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAONodeTrustedSettingsProposals"
              },
              "memberName": "getExecuteTime"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "daoNodeTrusted"
              },
              "memberName": "getMemberQuorumVotesRequired"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_payload"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "vote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_support",
         "identifier": {
          "type": "Identifier",
          "name": "_support"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProposalInterface"
            },
            "name": "daoProposal",
            "identifier": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProposalInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProposal",
               "parts": [
                "rocketDAOProposal"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "daoNodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberJoinedTime"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoProposal"
               },
               "memberName": "getCreated"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_proposalID"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Member cannot vote on proposal created before they became a member",
             "parts": [
              "Member cannot vote on proposal created before they became a member"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "memberName": "vote"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": "ether"
            },
            {
             "type": "Identifier",
             "name": "_proposalID"
            },
            {
             "type": "Identifier",
             "name": "_support"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProposalInterface"
            },
            "name": "daoProposal",
            "identifier": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProposalInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProposal",
               "parts": [
                "rocketDAOProposal"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "memberName": "cancel"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_proposalID",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalID"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProposalInterface"
            },
            "name": "daoProposal",
            "identifier": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProposalInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProposal",
               "parts": [
                "rocketDAOProposal"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoProposal"
            },
            "memberName": "execute"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_proposalID"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalInvite",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.executed.time",
                 "parts": [
                  "member.executed.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "invited",
                 "parts": [
                  "invited"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberInit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_id"
            },
            {
             "type": "Identifier",
             "name": "_url"
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalLeave",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "daoNodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberMinRequired"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Member count will fall below min required",
             "parts": [
              "Member count will fall below min required"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.executed.time",
                 "parts": [
                  "member.executed.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "leave",
                 "parts": [
                  "leave"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalKick",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplFine",
         "identifier": {
          "type": "Identifier",
          "name": "_rplFine"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "daoNodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedActionsInterface"
            },
            "name": "daoActionsContract",
            "identifier": {
             "type": "Identifier",
             "name": "daoActionsContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedActionsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedActions",
               "parts": [
                "rocketDAONodeTrustedActions"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplBondAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplBondAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "memberName": "getMemberRPLBondAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_rplFine"
             },
             "right": {
              "type": "Identifier",
              "name": "rplBondAmount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "RPL Fine must be lower or equal to the RPL bond amount of the node being kicked",
             "parts": [
              "RPL Fine must be lower or equal to the RPL bond amount of the node being kicked"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.bond.rpl",
                 "parts": [
                  "member.bond.rpl"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplBondAmount"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_rplFine"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "daoActionsContract"
            },
            "memberName": "actionKick"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "_rplFine"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsInterface"
            },
            "name": "rocketDAONodeTrustedSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingContractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettings"
            },
            "memberName": "setSettingUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsInterface"
            },
            "name": "rocketDAONodeTrustedSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_settingContractName"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettings"
            },
            "memberName": "setSettingBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposalUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedUpgradeInterface"
            },
            "name": "rocketDAONodeTrustedUpgradeInterface",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedUpgradeInterface"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedUpgradeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedUpgrade",
               "parts": [
                "rocketDAONodeTrustedUpgrade"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedUpgradeInterface"
            },
            "memberName": "upgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_type"
            },
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyExecutingContracts",
         "arguments": []
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_memberInit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "daoNodeTrusted",
            "identifier": {
             "type": "Identifier",
             "name": "daoNodeTrusted"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "daoNodeTrusted"
               },
               "memberName": "getMemberIsValid"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "This node is already part of the trusted node DAO",
             "parts": [
              "This node is already part of the trusted node DAO"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_id"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "3",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "The ID for this new member must be at least 3 characters",
             "parts": [
              "The ID for this new member must be at least 3 characters"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_url"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "6",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "The URL for this new member must be at least 6 characters",
             "parts": [
              "The URL for this new member must be at least 6 characters"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member",
                 "parts": [
                  "member"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.address",
                 "parts": [
                  "member.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.id",
                 "parts": [
                  "member.id"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_id"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.url",
                 "parts": [
                  "member.url"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_url"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.bond.rpl",
                 "parts": [
                  "member.bond.rpl"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.joined.time",
                 "parts": [
                  "member.joined.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/RocketDAONodeTrustedActions.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
      "parts": [
       "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
      "parts": [
       "../../../interface/rewards/claims/RocketClaimTrustedNodeInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedActions",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedActionsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "ActionJoined",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplBondAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplBondAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ActionLeave",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplBondAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplBondAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ActionKick",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplBondAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplBondAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ActionChallengeMade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeChallengedAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeChallengedAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeChallengerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeChallengerAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ActionChallengeDecided",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeChallengedAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeChallengedAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "nodeChallengeDeciderAddress",
         "identifier": {
          "type": "Identifier",
          "name": "nodeChallengeDeciderAddress"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.trustednodes.",
          "parts": [
           "dao.trustednodes."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.trustednodes.",
        "parts": [
         "dao.trustednodes."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_memberAdd",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplBondAmountPaid",
         "identifier": {
          "type": "Identifier",
          "name": "_rplBondAmountPaid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketClaimTrustedNodeInterface"
            },
            "name": "rocketClaimTrustedNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketClaimTrustedNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketClaimTrustedNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketClaimTrustedNode",
               "parts": [
                "rocketClaimTrustedNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONode"
               },
               "memberName": "getMemberIsValid"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "This node is already part of the trusted node DAO",
             "parts": [
              "This node is already part of the trusted node DAO"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member",
                 "parts": [
                  "member"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_rplBondAmountPaid"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "setUint"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "daoNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "member.bond.rpl",
                  "parts": [
                   "member.bond.rpl"
                  ],
                  "isUnicode": [
                   false
                  ]
                 },
                 {
                  "type": "Identifier",
                  "name": "_nodeAddress"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "_rplBondAmountPaid"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.joined.time",
                 "parts": [
                  "member.joined.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "addItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.index",
                 "parts": [
                  "member.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketClaimTrustedNode"
            },
            "memberName": "register"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_memberRemove",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketClaimTrustedNodeInterface"
            },
            "name": "rocketClaimTrustedNode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketClaimTrustedNode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketClaimTrustedNodeInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketClaimTrustedNode",
               "parts": [
                "rocketClaimTrustedNode"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketClaimTrustedNode"
            },
            "memberName": "register"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member",
                 "parts": [
                  "member"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.address",
                 "parts": [
                  "member.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.id",
                 "parts": [
                  "member.id"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.url",
                 "parts": [
                  "member.url"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.bond.rpl",
                 "parts": [
                  "member.bond.rpl"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.joined.time",
                 "parts": [
                  "member.joined.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.challenged.time",
                 "parts": [
                  "member.challenged.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.executed.time",
                 "parts": [
                  "member.executed.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "invited",
                 "parts": [
                  "invited"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deleteUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.executed.time",
                 "parts": [
                  "member.executed.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "StringLiteral",
                 "value": "leave",
                 "parts": [
                  "leave"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "removeItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.index",
                 "parts": [
                  "member.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_memberJoin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rocketVaultAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketVault",
             "parts": [
              "rocketVault"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "rocketTokenRPLAddress",
            "identifier": {
             "type": "Identifier",
             "name": "rocketTokenRPLAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getContractAddress"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketTokenRPL",
             "parts": [
              "rocketTokenRPL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "rplInflationContract",
            "identifier": {
             "type": "Identifier",
             "name": "rplInflationContract"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketTokenRPLAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rocketVaultAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
            },
            "name": "rocketDAONodeTrustedSettingsMembers",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsMembers"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsMembersInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsMembers",
               "parts": [
                "rocketDAONodeTrustedSettingsMembers"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsProposalsInterface"
            },
            "name": "rocketDAONodeTrustedSettingsProposals",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsProposals"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsProposalsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsProposals",
               "parts": [
                "rocketDAONodeTrustedSettingsProposals"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "memberInvitedTime",
            "identifier": {
             "type": "Identifier",
             "name": "memberInvitedTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "memberName": "getMemberProposalExecutedTime"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "invited",
             "parts": [
              "invited"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "memberInvitedTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "This node has not been invited to join",
             "parts": [
              "This node has not been invited to join"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplBondAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplBondAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsMembers"
            },
            "memberName": "getRPLBond"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "memberInvitedTime"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrustedSettingsProposals"
                 },
                 "memberName": "getActionTime"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "This node's invitation to join has expired, please apply again",
             "parts": [
              "This node's invitation to join has expired, please apply again"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rplInflationContract"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "rplBondAmount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough allowance given to RocketDAONodeTrusted contract for transfer of RPL bond tokens",
             "parts": [
              "Not enough allowance given to RocketDAONodeTrusted contract for transfer of RPL bond tokens"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplInflationContract"
              },
              "memberName": "transferFrom"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "rplBondAmount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Token transfer to RocketDAONodeTrusted contract was not successful",
             "parts": [
              "Token transfer to RocketDAONodeTrusted contract was not successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rplInflationContract"
              },
              "memberName": "approve"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketVaultAddress"
              },
              {
               "type": "Identifier",
               "name": "rplBondAmount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Approval for RocketVault to spend RocketDAONodeTrusted RPL bond tokens was not successful",
             "parts": [
              "Approval for RocketVault to spend RocketDAONodeTrusted RPL bond tokens was not successful"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "depositToken"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractName"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rocketTokenRPLAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "rplBondAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberAdd"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplBondAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ActionJoined"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplBondAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionJoin",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberJoin"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedActions",
           "parts": [
            "rocketDAONodeTrustedActions"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionJoinRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberJoin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionLeave",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_rplBondRefundAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rplBondRefundAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsProposalsInterface"
            },
            "name": "rocketDAONodeTrustedSettingsProposals",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsProposals"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsProposalsInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsProposals",
               "parts": [
                "rocketDAONodeTrustedSettingsProposals"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONode"
               },
               "memberName": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONode"
               },
               "memberName": "getMemberMinRequired"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Member count will fall below min required",
             "parts": [
              "Member count will fall below min required"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leaveAcceptedTime",
            "identifier": {
             "type": "Identifier",
             "name": "leaveAcceptedTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "memberName": "getMemberProposalExecutedTime"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "leave",
             "parts": [
              "leave"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "leaveAcceptedTime"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrustedSettingsProposals"
                 },
                 "memberName": "getActionTime"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "This member has not been approved to leave or request has expired, please apply to leave again",
             "parts": [
              "This member has not been approved to leave or request has expired, please apply to leave again"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplBondRefundAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplBondRefundAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "memberName": "getMemberRPLBondAmount"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "rplBondRefundAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "_rplBondRefundAddress"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "Member has not supplied a valid address for their RPL bond refund",
                "parts": [
                 "Member has not supplied a valid address for their RPL bond refund"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketVault"
               },
               "memberName": "withdrawToken"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_rplBondRefundAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IERC20"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "getContractAddress"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rocketTokenRPL",
                    "parts": [
                     "rocketTokenRPL"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "rplBondRefundAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberRemove"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ActionLeave"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "rplBondRefundAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedActions",
           "parts": [
            "rocketDAONodeTrustedActions"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionKick",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rplFine",
         "identifier": {
          "type": "Identifier",
          "name": "_rplFine"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "rplToken",
            "identifier": {
             "type": "Identifier",
             "name": "rplToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketTokenRPL",
               "parts": [
                "rocketTokenRPL"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplBondRefundAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplBondRefundAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "memberName": "getMemberRPLBondAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "rplBondRefundAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rplToken"
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "rocketVault"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "Identifier",
               "name": "rplBondRefundAmount"
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketVault"
                },
                "memberName": "withdrawToken"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "IERC20"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "getContractAddress"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "rocketTokenRPL",
                     "parts": [
                      "rocketTokenRPL"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "rplBondRefundAmount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_rplFine"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketVault"
               },
               "memberName": "burnToken"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "ERC20Burnable"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "getContractAddress"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "rocketTokenRPL",
                    "parts": [
                     "rocketTokenRPL"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "_rplFine"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_memberRemove"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ActionKick"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "Identifier",
             "name": "rplBondRefundAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedProposals",
           "parts": [
            "rocketDAONodeTrustedProposals"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "actionChallengeMake",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedInterface"
            },
            "name": "rocketDAONode",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONode"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrusted",
               "parts": [
                "rocketDAONodeTrusted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
            },
            "name": "rocketDAONodeTrustedSettingsMembers",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsMembers"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsMembersInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsMembers",
               "parts": [
                "rocketDAONodeTrustedSettingsMembers"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDAONode"
             },
             "memberName": "getMemberIsValid"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "require"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "value"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketDAONodeTrustedSettingsMembers"
                },
                "memberName": "getChallengeCost"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "StringLiteral",
              "value": "Non DAO members must pay ETH to challenge a members node",
              "parts": [
               "Non DAO members must pay ETH to challenge a members node"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "_nodeAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "You cannot challenge yourself",
             "parts": [
              "You cannot challenge yourself"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "rocketDAONode"
               },
               "memberName": "getMemberIsChallenged"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Member is already being challenged",
             "parts": [
              "Member is already being challenged"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getUint"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodePacked"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "daoNameSpace"
                     },
                     {
                      "type": "StringLiteral",
                      "value": "node.challenge.created.time",
                      "parts": [
                       "node.challenge.created.time"
                      ],
                      "isUnicode": [
                       false
                      ]
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "rocketDAONodeTrustedSettingsMembers"
                 },
                 "memberName": "getChallengeCooldown"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "You must wait for the challenge cooldown to pass before issuing another challenge",
             "parts": [
              "You must wait for the challenge cooldown to pass before issuing another challenge"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "node.challenge.created.time",
                 "parts": [
                  "node.challenge.created.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.challenged.time",
                 "parts": [
                  "member.challenged.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setAddress"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.challenged.by",
                 "parts": [
                  "member.challenged.by"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ActionChallengeMade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedActions",
           "parts": [
            "rocketDAONodeTrustedActions"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "actionChallengeDecide",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
            },
            "name": "rocketDAONodeTrustedSettingsMembers",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsMembers"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsMembersInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsMembers",
               "parts": [
                "rocketDAONodeTrustedSettingsMembers"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "challengeSuccess",
            "identifier": {
             "type": "Identifier",
             "name": "challengeSuccess"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BooleanLiteral",
           "value": false
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "challengeTimeKey",
            "identifier": {
             "type": "Identifier",
             "name": "challengeTimeKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "daoNameSpace"
              },
              {
               "type": "StringLiteral",
               "value": "member.challenged.time",
               "parts": [
                "member.challenged.time"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "_nodeAddress"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "challengeTime",
            "identifier": {
             "type": "Identifier",
             "name": "challengeTime"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "challengeTimeKey"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "challengeTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Member hasn't been challenged or they have successfully responded to the challenge already",
             "parts": [
              "Member hasn't been challenged or they have successfully responded to the challenge already"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_nodeAddress"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "deleteUint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "challengeTimeKey"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "challengeTime"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "rocketDAONodeTrustedSettingsMembers"
                    },
                    "memberName": "getChallengeWindow"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Refute window has not yet passed",
                "parts": [
                 "Refute window has not yet passed"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_memberRemove"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_nodeAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "challengeSuccess"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ActionChallengeDecided"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "challengeSuccess"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyTrustedNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrustedActions",
           "parts": [
            "rocketDAONodeTrustedActions"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/RocketDAONodeTrusted.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../RocketBase.sol",
      "parts": [
       "../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
      "parts": [
       "../../../interface/dao/node/RocketDAONodeTrustedActionsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
      "parts": [
       "../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/dao/RocketDAOProposalInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/dao/RocketDAOProposalInterface.sol",
      "parts": [
       "../../../interface/dao/RocketDAOProposalInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../interface/util/AddressSetStorageInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../interface/util/AddressSetStorageInterface.sol",
      "parts": [
       "../../../interface/util/AddressSetStorageInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrusted",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "daoNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "daoNameSpace"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "dao.trustednodes.",
          "parts": [
           "dao.trustednodes."
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "dao.trustednodes.",
        "parts": [
         "dao.trustednodes."
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "daoMemberMinCount",
         "identifier": {
          "type": "Identifier",
          "name": "daoMemberMinCount"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "3",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "3",
        "subdenomination": null
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyBootstrapMode",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getBootstrapModeDisabled"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "BooleanLiteral",
              "value": false
             }
            },
            {
             "type": "StringLiteral",
             "value": "Bootstrap mode not engaged",
             "parts": [
              "Bootstrap mode not engaged"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyLowMemberMode",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getMemberCount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "daoMemberMinCount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Low member mode not engaged",
             "parts": [
              "Low member mode not engaged"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getBootstrapModeDisabled",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "bootstrapmode.disabled",
                 "parts": [
                  "bootstrapmode.disabled"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberQuorumVotesRequired",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
            },
            "name": "rocketDAONodeTrustedSettingsMembers",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDAONodeTrustedSettingsMembers"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAONodeTrustedSettingsMembersInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAONodeTrustedSettingsMembers",
               "parts": [
                "rocketDAONodeTrustedSettingsMembers"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getMemberCount"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketDAONodeTrustedSettingsMembers"
              },
              "memberName": "getQuorum"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberIsValid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member",
                 "parts": [
                  "member"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberAt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getItem"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.index",
                 "parts": [
                  "member.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "AddressSetStorageInterface"
            },
            "name": "addressSetStorage",
            "identifier": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddressSetStorageInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "addressSetStorage",
               "parts": [
                "addressSetStorage"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "addressSetStorage"
            },
            "memberName": "getCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.index",
                 "parts": [
                  "member.index"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberMinRequired",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "daoMemberMinCount"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberLastProposalTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.proposal.lasttime",
                 "parts": [
                  "member.proposal.lasttime"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.id",
                 "parts": [
                  "member.id"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberUrl",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getString"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.url",
                 "parts": [
                  "member.url"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberJoinedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.joined.time",
                 "parts": [
                  "member.joined.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberProposalExecutedTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_proposalType",
         "identifier": {
          "type": "Identifier",
          "name": "_proposalType"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.executed.time",
                 "parts": [
                  "member.executed.time"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_proposalType"
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberRPLBondAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.bond.rpl",
                 "parts": [
                  "member.bond.rpl"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberIsChallenged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getUint"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "daoNameSpace"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "member.challenged.time",
                   "parts": [
                    "member.challenged.time"
                   ],
                   "isUnicode": [
                    false
                   ]
                  },
                  {
                   "type": "Identifier",
                   "name": "_nodeAddress"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "BooleanLiteral",
            "value": true
           },
           "falseExpression": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.validator.unbonded.count",
                 "parts": [
                  "member.validator.unbonded.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.validator.unbonded.count",
                 "parts": [
                  "member.validator.unbonded.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decrementMemberUnbondedValidatorCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "subUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "member.validator.unbonded.count",
                 "parts": [
                  "member.validator.unbonded.count"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_nodeAddress"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketMinipoolManager",
           "parts": [
            "rocketMinipoolManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapMember",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_nodeAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_nodeAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalInvite"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_id"
            },
            {
             "type": "Identifier",
             "name": "_url"
            },
            {
             "type": "Identifier",
             "name": "_nodeAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_nodeAddress"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingUint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractName"
            },
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingContractName",
         "identifier": {
          "type": "Identifier",
          "name": "_settingContractName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalSettingBool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_settingContractName"
            },
            {
             "type": "Identifier",
             "name": "_settingPath"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_type",
         "identifier": {
          "type": "Identifier",
          "name": "_type"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractAbi",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAbi"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contractAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_contractAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalUpgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_type"
            },
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_contractAbi"
            },
            {
             "type": "Identifier",
             "name": "_contractAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "bootstrapDisable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_confirmDisableBootstrapMode",
         "identifier": {
          "type": "Identifier",
          "name": "_confirmDisableBootstrapMode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_confirmDisableBootstrapMode"
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "You must confirm disabling bootstrap mode, it can only be done once!",
             "parts": [
              "You must confirm disabling bootstrap mode, it can only be done once!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "daoNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "bootstrapmode.disabled",
                 "parts": [
                  "bootstrapmode.disabled"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGuardian",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyBootstrapMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "memberJoinRequired",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_url",
         "identifier": {
          "type": "Identifier",
          "name": "_url"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedProposalsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "proposalInvite"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_id"
            },
            {
             "type": "Identifier",
             "name": "_url"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "RocketDAONodeTrustedActionsInterface"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedActions",
                 "parts": [
                  "rocketDAONodeTrustedActions"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "actionJoinRequired"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLowMemberMode",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRegisteredNode",
         "arguments": [
          {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketDAONodeTrusted",
           "parts": [
            "rocketDAONodeTrusted"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsProposals.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAONodeTrustedSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAONodeTrustedSettings.sol",
      "parts": [
       "./RocketDAONodeTrustedSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
      "parts": [
       "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettingsProposals",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedSettingsProposalsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "proposal.cooldown.time",
                "parts": [
                 "proposal.cooldown.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": "days"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "proposal.vote.time",
                "parts": [
                 "proposal.vote.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": "weeks"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "proposal.vote.delay.time",
                "parts": [
                 "proposal.vote.delay.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "weeks"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "proposal.execute.time",
                "parts": [
                 "proposal.execute.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": "weeks"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "proposal.action.time",
                "parts": [
                 "proposal.action.time"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "4",
                "subdenomination": "weeks"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAONodeTrustedSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "proposals",
           "parts": [
            "proposals"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCooldownTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "proposal.cooldown.time",
             "parts": [
              "proposal.cooldown.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVoteTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "proposal.vote.time",
             "parts": [
              "proposal.vote.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVoteDelayTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "proposal.vote.delay.time",
             "parts": [
              "proposal.vote.delay.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecuteTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "proposal.execute.time",
             "parts": [
              "proposal.execute.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getActionTime",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "proposal.action.time",
             "parts": [
              "proposal.action.time"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsMembers.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "./RocketDAONodeTrustedSettings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./RocketDAONodeTrustedSettings.sol",
      "parts": [
       "./RocketDAONodeTrustedSettings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
      "parts": [
       "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettingsMembers",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedSettings"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedSettingsMembersInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getBool"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "keccak256"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "settingNameSpace"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "deployed",
                  "parts": [
                   "deployed"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.quorum",
                "parts": [
                 "members.quorum"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.51",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.rplbond",
                "parts": [
                 "members.rplbond"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "15000",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.minipool.unbonded.max",
                "parts": [
                 "members.minipool.unbonded.max"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "250",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.minipool.unbonded.min.fee",
                "parts": [
                 "members.minipool.unbonded.min.fee"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "0.8",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.challenge.cooldown",
                "parts": [
                 "members.challenge.cooldown"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "7",
                "subdenomination": "days"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.challenge.window",
                "parts": [
                 "members.challenge.window"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "7",
                "subdenomination": "days"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setSettingUint"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.challenge.cost",
                "parts": [
                 "members.challenge.cost"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": "ether"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "setBool"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodePacked"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "settingNameSpace"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "deployed",
                    "parts": [
                     "deployed"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketDAONodeTrustedSettings",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          },
          {
           "type": "StringLiteral",
           "value": "members",
           "parts": [
            "members"
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_settingPath"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "members.quorum",
                "parts": [
                 "members.quorum"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "require"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "_value"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": "ether"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<=",
               "left": {
                "type": "Identifier",
                "name": "_value"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0.9",
                "subdenomination": "ether"
               }
              }
             },
             {
              "type": "StringLiteral",
              "value": "Quorum setting must be > 0 & <= 90%",
              "parts": [
               "Quorum setting must be > 0 & <= 90%"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAONodeTrustedProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getQuorum",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.quorum",
             "parts": [
              "members.quorum"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRPLBond",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.rplbond",
             "parts": [
              "members.rplbond"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolUnbondedMax",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.minipool.unbonded.max",
             "parts": [
              "members.minipool.unbonded.max"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinipoolUnbondedMinFee",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.minipool.unbonded.min.fee",
             "parts": [
              "members.minipool.unbonded.min.fee"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeCooldown",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.challenge.cooldown",
             "parts": [
              "members.challenge.cooldown"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeWindow",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.challenge.window",
             "parts": [
              "members.challenge.window"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getChallengeCost",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSettingUint"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "members.challenge.cost",
             "parts": [
              "members.challenge.cost"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettings.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "../../../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../RocketBase.sol",
      "parts": [
       "../../../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
      "parts": [
       "../../../../interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketDAONodeTrustedSettings",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketDAONodeTrustedSettingsInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "settingNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "settingNameSpace"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyDAONodeTrustedProposal",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "StringLiteral",
                 "value": "deployed",
                 "parts": [
                  "deployed"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "require"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketDAONodeTrustedProposals",
                 "parts": [
                  "rocketDAONodeTrustedProposals"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             {
              "type": "StringLiteral",
              "value": "Only DAO Node Trusted Proposals contract can update a setting",
              "parts": [
               "Only DAO Node Trusted Proposals contract can update a setting"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingNameSpace",
         "identifier": {
          "type": "Identifier",
          "name": "_settingNameSpace"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "settingNameSpace"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "dao.trustednodes.setting.",
                "parts": [
                 "dao.trustednodes.setting."
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "Identifier",
                "name": "_settingNameSpace"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingUint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAONodeTrustedProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setSettingBool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_settingPath",
         "identifier": {
          "type": "Identifier",
          "name": "_settingPath"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "settingNameSpace"
                },
                {
                 "type": "Identifier",
                 "name": "_settingPath"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyDAONodeTrustedProposal",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/auction/RocketAuctionManager.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.7.6"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../RocketBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../RocketBase.sol",
      "parts": [
       "../RocketBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/auction/RocketAuctionManagerInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/auction/RocketAuctionManagerInterface.sol",
      "parts": [
       "../../interface/auction/RocketAuctionManagerInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/deposit/RocketDepositPoolInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/deposit/RocketDepositPoolInterface.sol",
      "parts": [
       "../../interface/deposit/RocketDepositPoolInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/network/RocketNetworkPricesInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/network/RocketNetworkPricesInterface.sol",
      "parts": [
       "../../interface/network/RocketNetworkPricesInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
      "parts": [
       "../../interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../interface/RocketVaultInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../interface/RocketVaultInterface.sol",
      "parts": [
       "../../interface/RocketVaultInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "RocketAuctionManager",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RocketAuctionManagerInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "LotCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "lotIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BidPlaced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "lotIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "bidAmount",
         "identifier": {
          "type": "Identifier",
          "name": "bidAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BidClaimed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "lotIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "bidAmount",
         "identifier": {
          "type": "Identifier",
          "name": "bidAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RPLRecovered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "lotIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "by",
         "identifier": {
          "type": "Identifier",
          "name": "by"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rplAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rplAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RocketStorageInterface"
         },
         "name": "_rocketStorageAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_rocketStorageAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "version"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "RocketBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_rocketStorageAddress"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getTotalRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "balanceOfToken"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "rocketAuctionManager",
             "parts": [
              "rocketAuctionManager"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketTokenRPL",
                 "parts": [
                  "rocketTokenRPL"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAllottedRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "auction.rpl.allotted",
               "parts": [
                "auction.rpl.allotted"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseAllottedRPLBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.rpl.allotted",
                 "parts": [
                  "auction.rpl.allotted"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseAllottedRPLBalance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "subUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.rpl.allotted",
                 "parts": [
                  "auction.rpl.allotted"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemainingRPLBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getTotalRPLBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getAllottedRPLBalance"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "auction.lots.count",
               "parts": [
                "auction.lots.count"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setLotCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "auction.lots.count",
               "parts": [
                "auction.lots.count"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotExists",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.exists",
                 "parts": [
                  "auction.lot.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotStartBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.block.start",
                 "parts": [
                  "auction.lot.block.start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotEndBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.block.end",
                 "parts": [
                  "auction.lot.block.end"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotStartPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.price.start",
                 "parts": [
                  "auction.lot.price.start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotReservePrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.price.reserve",
                 "parts": [
                  "auction.lot.price.reserve"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotTotalRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.rpl.total",
                 "parts": [
                  "auction.lot.rpl.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotTotalBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.bid.total",
                 "parts": [
                  "auction.lot.bid.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseLotTotalBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.bid.total",
                 "parts": [
                  "auction.lot.bid.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotAddressBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_bidder",
         "identifier": {
          "type": "Identifier",
          "name": "_bidder"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.bid.address",
                 "parts": [
                  "auction.lot.bid.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                },
                {
                 "type": "Identifier",
                 "name": "_bidder"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setLotAddressBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_bidder",
         "identifier": {
          "type": "Identifier",
          "name": "_bidder"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.bid.address",
                 "parts": [
                  "auction.lot.bid.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                },
                {
                 "type": "Identifier",
                 "name": "_bidder"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseLotAddressBidAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_bidder",
         "identifier": {
          "type": "Identifier",
          "name": "_bidder"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "addUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.bid.address",
                 "parts": [
                  "auction.lot.bid.address"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                },
                {
                 "type": "Identifier",
                 "name": "_bidder"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotRPLRecovered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.rpl.recovered",
                 "parts": [
                  "auction.lot.rpl.recovered"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setLotRPLRecovered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_recovered",
         "identifier": {
          "type": "Identifier",
          "name": "_recovered"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.rpl.recovered",
                 "parts": [
                  "auction.lot.rpl.recovered"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_recovered"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceAtBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_block",
         "identifier": {
          "type": "Identifier",
          "name": "_block"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "startBlock",
            "identifier": {
             "type": "Identifier",
             "name": "startBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotStartBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "endBlock",
            "identifier": {
             "type": "Identifier",
             "name": "endBlock"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotEndBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "startPrice",
            "identifier": {
             "type": "Identifier",
             "name": "startPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotStartPrice"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "endPrice",
            "identifier": {
             "type": "Identifier",
             "name": "endPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotReservePrice"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "_block"
           },
           "right": {
            "type": "Identifier",
            "name": "startBlock"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "startPrice"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "_block"
           },
           "right": {
            "type": "Identifier",
            "name": "endBlock"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "endPrice"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tn",
            "identifier": {
             "type": "Identifier",
             "name": "tn"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_block"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "startBlock"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "td",
            "identifier": {
             "type": "Identifier",
             "name": "td"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "endBlock"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "startBlock"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "startPrice"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "startPrice"
                      },
                      "memberName": "sub"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "endPrice"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tn"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "tn"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "td"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "td"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceAtCurrentBlock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotPriceAtBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotPriceByTotalBids",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLotTotalBidAmount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotTotalRPLAmount"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_index"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotCurrentPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "blockPrice",
            "identifier": {
             "type": "Identifier",
             "name": "blockPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotPriceAtCurrentBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "bidPrice",
            "identifier": {
             "type": "Identifier",
             "name": "bidPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotPriceByTotalBids"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "bidPrice"
           },
           "right": {
            "type": "Identifier",
            "name": "blockPrice"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "bidPrice"
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "blockPrice"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotClaimedRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimed",
            "identifier": {
             "type": "Identifier",
             "name": "claimed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLotTotalBidAmount"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_index"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotCurrentPrice"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_index"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "total",
            "identifier": {
             "type": "Identifier",
             "name": "total"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotTotalRPLAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_index"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "claimed"
           },
           "right": {
            "type": "Identifier",
            "name": "total"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "total"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "claimed"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotRemainingRPLAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotTotalRPLAmount"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_index"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotClaimedRPLAmount"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_index"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLotIsCleared",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_index",
         "identifier": {
          "type": "Identifier",
          "name": "_index"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "number"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLotEndBlock"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_index"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": true
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLotPriceByTotalBids"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_index"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getLotPriceAtCurrentBlock"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_index"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": true
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "createLot",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsAuctionInterface"
            },
            "name": "rocketAuctionSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketAuctionSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsAuctionInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsAuction",
               "parts": [
                "rocketDAOProtocolSettingsAuction"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketNetworkPricesInterface"
            },
            "name": "rocketNetworkPrices",
            "identifier": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketNetworkPricesInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketNetworkPrices",
               "parts": [
                "rocketNetworkPrices"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "remainingRplBalance",
            "identifier": {
             "type": "Identifier",
             "name": "remainingRplBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getRemainingRPLBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplPrice",
            "identifier": {
             "type": "Identifier",
             "name": "rplPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketNetworkPrices"
            },
            "memberName": "getRPLPrice"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketAuctionSettings"
              },
              "memberName": "getCreateLotEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Creating lots is currently disabled",
             "parts": [
              "Creating lots is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "remainingRplBalance"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "calcBase"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "rocketAuctionSettings"
                   },
                   "memberName": "getLotMinimumEthValue"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "rplPrice"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Insufficient RPL balance to create new lot",
             "parts": [
              "Insufficient RPL balance to create new lot"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lotRplAmount",
            "identifier": {
             "type": "Identifier",
             "name": "lotRplAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "remainingRplBalance"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maximumLotRplAmount",
            "identifier": {
             "type": "Identifier",
             "name": "maximumLotRplAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketAuctionSettings"
                },
                "memberName": "getLotMaximumEthValue"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rplPrice"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "lotRplAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "maximumLotRplAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lotRplAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "maximumLotRplAmount"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lotIndex",
            "identifier": {
             "type": "Identifier",
             "name": "lotIndex"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotCount"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setBool"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.exists",
                 "parts": [
                  "auction.lot.exists"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.block.start",
                 "parts": [
                  "auction.lot.block.start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "number"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.block.end",
                 "parts": [
                  "auction.lot.block.end"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "number"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rocketAuctionSettings"
                },
                "memberName": "getLotDuration"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.price.start",
                 "parts": [
                  "auction.lot.price.start"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rplPrice"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketAuctionSettings"
                  },
                  "memberName": "getStartingPriceRatio"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "calcBase"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.price.reserve",
                 "parts": [
                  "auction.lot.price.reserve"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "rplPrice"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rocketAuctionSettings"
                  },
                  "memberName": "getReservePriceRatio"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "calcBase"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "auction.lot.rpl.total",
                 "parts": [
                  "auction.lot.rpl.total"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "Identifier",
                 "name": "lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "lotRplAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setLotCount"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "lotIndex"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "increaseAllottedRPLBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lotRplAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "LotCreated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lotRplAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketAuctionManager",
           "parts": [
            "rocketAuctionManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "placeBid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDAOProtocolSettingsAuctionInterface"
            },
            "name": "rocketAuctionSettings",
            "identifier": {
             "type": "Identifier",
             "name": "rocketAuctionSettings"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDAOProtocolSettingsAuctionInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDAOProtocolSettingsAuction",
               "parts": [
                "rocketDAOProtocolSettingsAuction"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketDepositPoolInterface"
            },
            "name": "rocketDepositPool",
            "identifier": {
             "type": "Identifier",
             "name": "rocketDepositPool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketDepositPoolInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketDepositPool",
               "parts": [
                "rocketDepositPool"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid bid amount",
             "parts": [
              "Invalid bid amount"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotExists"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_lotIndex"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Lot does not exist",
             "parts": [
              "Lot does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rocketAuctionSettings"
              },
              "memberName": "getBidOnLotEnabled"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Bidding on lots is currently disabled",
             "parts": [
              "Bidding on lots is currently disabled"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLotEndBlock"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_lotIndex"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Lot bidding period has concluded",
             "parts": [
              "Lot bidding period has concluded"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "remainingRplAmount",
            "identifier": {
             "type": "Identifier",
             "name": "remainingRplAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotRemainingRPLAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "remainingRplAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Lot RPL allocation has been exhausted",
             "parts": [
              "Lot RPL allocation has been exhausted"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "bidAmount",
            "identifier": {
             "type": "Identifier",
             "name": "bidAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "value"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maximumBidAmount",
            "identifier": {
             "type": "Identifier",
             "name": "maximumBidAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "remainingRplAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLotPriceAtCurrentBlock"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "calcBase"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "bidAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "maximumBidAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "bidAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "maximumBidAmount"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "increaseLotTotalBidAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "Identifier",
             "name": "bidAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "increaseLotAddressBidAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "bidAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "rocketDepositPool"
             },
             "memberName": "recycleLiquidatedStake"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "bidAmount"
              }
             ]
            }
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           },
           "right": {
            "type": "Identifier",
            "name": "bidAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               "memberName": "transfer"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "value"
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "bidAmount"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BidPlaced"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "bidAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketAuctionManager",
           "parts": [
            "rocketAuctionManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "claimBid",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotExists"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_lotIndex"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Lot does not exist",
             "parts": [
              "Lot does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "blockPrice",
            "identifier": {
             "type": "Identifier",
             "name": "blockPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotPriceAtCurrentBlock"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "bidPrice",
            "identifier": {
             "type": "Identifier",
             "name": "bidPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotPriceByTotalBids"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "number"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getLotEndBlock"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_lotIndex"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "bidPrice"
              },
              "right": {
               "type": "Identifier",
               "name": "blockPrice"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Lot has not cleared yet",
             "parts": [
              "Lot has not cleared yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "bidAmount",
            "identifier": {
             "type": "Identifier",
             "name": "bidAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotAddressBidAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "bidAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Address has no RPL to claim",
             "parts": [
              "Address has no RPL to claim"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "currentPrice",
            "identifier": {
             "type": "Identifier",
             "name": "currentPrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "bidPrice"
           },
           "right": {
            "type": "Identifier",
            "name": "blockPrice"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "currentPrice"
              },
              "right": {
               "type": "Identifier",
               "name": "bidPrice"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "currentPrice"
              },
              "right": {
               "type": "Identifier",
               "name": "blockPrice"
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rplAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rplAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "calcBase"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "bidAmount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "currentPrice"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "allottedAmount",
            "identifier": {
             "type": "Identifier",
             "name": "allottedAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAllottedRPLBalance"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "rplAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "allottedAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "rplAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "allottedAmount"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "RocketVaultInterface"
            },
            "name": "rocketVault",
            "identifier": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RocketVaultInterface"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getContractAddress"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "rocketVault",
               "parts": [
                "rocketVault"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rocketVault"
            },
            "memberName": "withdrawToken"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getContractAddress"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "rocketTokenRPL",
                 "parts": [
                  "rocketTokenRPL"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "rplAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseAllottedRPLBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rplAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setLotAddressBidAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BidClaimed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "bidAmount"
            },
            {
             "type": "Identifier",
             "name": "rplAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketAuctionManager",
           "parts": [
            "rocketAuctionManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "recoverUnclaimedRPL",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_lotIndex",
         "identifier": {
          "type": "Identifier",
          "name": "_lotIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getLotExists"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_lotIndex"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Lot does not exist",
             "parts": [
              "Lot does not exist"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLotRPLRecovered"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_lotIndex"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Unclaimed RPL has already been recovered from the lot",
             "parts": [
              "Unclaimed RPL has already been recovered from the lot"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "number"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getLotEndBlock"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_lotIndex"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Lot bidding period has not concluded yet",
             "parts": [
              "Lot bidding period has not concluded yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "remainingRplAmount",
            "identifier": {
             "type": "Identifier",
             "name": "remainingRplAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getLotRemainingRPLAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "remainingRplAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No unclaimed RPL is available to recover",
             "parts": [
              "No unclaimed RPL is available to recover"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decreaseAllottedRPLBalance"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "remainingRplAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setLotRPLRecovered"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RPLRecovered"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_lotIndex"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "remainingRplAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyLatestContract",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "rocketAuctionManager",
           "parts": [
            "rocketAuctionManager"
           ],
           "isUnicode": [
            false
           ]
          },
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "this"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]