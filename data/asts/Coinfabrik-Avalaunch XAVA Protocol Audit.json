[
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/XavaToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "./math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./math/SafeMath.sol",
      "parts": [
       "./math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./utils/Context.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./utils/Context.sol",
      "parts": [
       "./utils/Context.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IERC20.sol",
      "parts": [
       "./IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "XavaToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Context"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "_balances",
         "identifier": {
          "type": "Identifier",
          "name": "_balances"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "_allowances",
         "identifier": {
          "type": "Identifier",
          "name": "_allowances"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_totalSupply"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_decimals",
         "identifier": {
          "type": "Identifier",
          "name": "_decimals"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name_",
         "identifier": {
          "type": "Identifier",
          "name": "name_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol_",
         "identifier": {
          "type": "Identifier",
          "name": "symbol_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupply_",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_name"
           },
           "right": {
            "type": "Identifier",
            "name": "name_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_symbol"
           },
           "right": {
            "type": "Identifier",
            "name": "symbol_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "decimals_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "totalSupply_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_allowances"
                },
                "index": {
                 "type": "Identifier",
                 "name": "sender"
                }
               },
               "index": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_msgSender"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "StringLiteral",
               "value": "ERC20: transfer amount exceeds allowance",
               "parts": [
                "ERC20: transfer amount exceeds allowance"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseAllowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "subtractedValue",
         "identifier": {
          "type": "Identifier",
          "name": "subtractedValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_allowances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_msgSender"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "Identifier",
                "name": "spender"
               }
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "subtractedValue"
              },
              {
               "type": "StringLiteral",
               "value": "ERC20: decreased allowance below zero",
               "parts": [
                "ERC20: decreased allowance below zero"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: transfer from the zero address",
             "parts": [
              "ERC20: transfer from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "recipient"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: transfer to the zero address",
             "parts": [
              "ERC20: transfer to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "sender"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "StringLiteral",
              "value": "ERC20: transfer amount exceeds balance",
              "parts": [
               "ERC20: transfer amount exceeds balance"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "recipient"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "recipient"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "account"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: mint to the zero address",
             "parts": [
              "ERC20: mint to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_totalSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_totalSupply"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "account"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "account"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "account"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: burn from the zero address",
             "parts": [
              "ERC20: burn from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "account"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "account"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "StringLiteral",
              "value": "ERC20: burn amount exceeds balance",
              "parts": [
               "ERC20: burn amount exceeds balance"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_totalSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_totalSupply"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "owner"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: approve from the zero address",
             "parts": [
              "ERC20: approve from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "spender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: approve to the zero address",
             "parts": [
              "ERC20: approve to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_allowances"
             },
             "index": {
              "type": "Identifier",
              "name": "owner"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "spender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amount"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_setupDecimals",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "decimals_"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_name"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_allowances"
            },
            "index": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "spender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_symbol"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "decimals",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_decimals"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_totalSupply"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_balances"
           },
           "index": {
            "type": "Identifier",
            "name": "account"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/ParticipationVestingSeed.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "./math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./math/SafeMath.sol",
      "parts": [
       "./math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IERC20.sol",
      "parts": [
       "./IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ParticipationVestingSeed",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": null,
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalTokensToDistribute",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensToDistribute"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalTokensWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StructDefinition",
       "name": "Participation",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "initialPortion",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortion"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "vestedAmount",
         "identifier": {
          "type": "Identifier",
          "name": "vestedAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountPerPortion",
         "identifier": {
          "type": "Identifier",
          "name": "amountPerPortion"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialPortionWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortionWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "isVestedPortionWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "isVestedPortionWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "adminWallet",
         "identifier": {
          "type": "Identifier",
          "name": "adminWallet"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Participation"
          },
          "valueName": null
         },
         "name": "addressToParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "addressToParticipation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "hasParticipated",
         "identifier": {
          "type": "Identifier",
          "name": "hasParticipated"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "initialPortionUnlockingTime",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortionUnlockingTime"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "numberOfPortions",
         "identifier": {
          "type": "Identifier",
          "name": "numberOfPortions"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "distributionDates",
         "identifier": {
          "type": "Identifier",
          "name": "distributionDates"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "adminWallet"
             }
            },
            {
             "type": "StringLiteral",
             "value": "OnlyAdmin: Restricted access.",
             "parts": [
              "OnlyAdmin: Restricted access."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_numberOfPortions",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfPortions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "timeBetweenPortions",
         "identifier": {
          "type": "Identifier",
          "name": "timeBetweenPortions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "distributionStartDate",
         "identifier": {
          "type": "Identifier",
          "name": "distributionStartDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_initialPortionUnlockingTime",
         "identifier": {
          "type": "Identifier",
          "name": "_initialPortionUnlockingTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_adminWallet",
         "identifier": {
          "type": "Identifier",
          "name": "_adminWallet"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_token",
         "identifier": {
          "type": "Identifier",
          "name": "_token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "adminWallet"
           },
           "right": {
            "type": "Identifier",
            "name": "_adminWallet"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "numberOfPortions"
           },
           "right": {
            "type": "Identifier",
            "name": "_numberOfPortions"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initialPortionUnlockingTime"
           },
           "right": {
            "type": "Identifier",
            "name": "_initialPortionUnlockingTime"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "_numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "distributionDates"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "distributionStartDate"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "timeBetweenPortions"
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerParticipants",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "participants",
         "identifier": {
          "type": "Identifier",
          "name": "participants"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "participationAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "participationAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "participants"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "registerParticipant"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "participants"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "participationAmounts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerParticipant",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "participant",
         "identifier": {
          "type": "Identifier",
          "name": "participant"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "participationAmount",
         "identifier": {
          "type": "Identifier",
          "name": "participationAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "totalTokensToDistribute"
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "totalTokensWithdrawn"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "participationAmount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "token"
               },
               "memberName": "balanceOf"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Safeguarding existing token buyers. Not enough tokens.",
             "parts": [
              "Safeguarding existing token buyers. Not enough tokens."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensToDistribute"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensToDistribute"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "participationAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "hasParticipated"
              },
              "index": {
               "type": "Identifier",
               "name": "participant"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "User already registered as participant.",
             "parts": [
              "User already registered as participant."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "initialPortionAmount",
            "identifier": {
             "type": "Identifier",
             "name": "initialPortionAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "participationAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "10",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "100",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "vestedAmount",
            "identifier": {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "participationAmount"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "initialPortionAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "portionAmount",
            "identifier": {
             "type": "Identifier",
             "name": "portionAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            },
            "name": "isPortionWithdrawn",
            "identifier": {
             "type": "Identifier",
             "name": "isPortionWithdrawn"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Participation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "initialPortionAmount"
            },
            {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            {
             "type": "Identifier",
             "name": "portionAmount"
            },
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "Identifier",
             "name": "isPortionWithdrawn"
            }
           ],
           "names": [
            "initialPortion",
            "vestedAmount",
            "amountPerPortion",
            "initialPortionWithdrawn",
            "isVestedPortionWithdrawn"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "initialPortion"
            },
            {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            {
             "type": "Identifier",
             "name": "amountPerPortion"
            },
            {
             "type": "Identifier",
             "name": "initialPortionWithdrawn"
            },
            {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "addressToParticipation"
            },
            "index": {
             "type": "Identifier",
             "name": "participant"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "p"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "hasParticipated"
            },
            "index": {
             "type": "Identifier",
             "name": "participant"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "hasParticipated"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "Withdraw: User is not a participant.",
             "parts": [
              "Withdraw: User is not a participant."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "addressToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "user"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalToWithdraw",
            "identifier": {
             "type": "Identifier",
             "name": "totalToWithdraw"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortionWithdrawn"
            },
            "isPrefix": true
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "initialPortionUnlockingTime"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "totalToWithdraw"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "totalToWithdraw"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "p"
                 },
                 "memberName": "initialPortion"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "p"
               },
               "memberName": "initialPortionWithdrawn"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "isPortionUnlocked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "BooleanLiteral",
                "value": true
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "distributionDates"
                },
                "memberName": "length"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "p"
                   },
                   "memberName": "isVestedPortionWithdrawn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "isPrefix": true
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "totalToWithdraw"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "totalToWithdraw"
                      },
                      "memberName": "add"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "p"
                       },
                       "memberName": "amountPerPortion"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "p"
                      },
                      "memberName": "isVestedPortionWithdrawn"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "right": {
                     "type": "BooleanLiteral",
                     "value": true
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensWithdrawn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensWithdrawn"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "totalToWithdraw"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "totalToWithdraw"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isPortionUnlocked",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "portionId",
         "identifier": {
          "type": "Identifier",
          "name": "portionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "distributionDates"
            },
            "index": {
             "type": "Identifier",
             "name": "portionId"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "addressToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "account"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            },
            "name": "isVestedPortionWithdrawn",
            "identifier": {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "isVestedPortionWithdrawn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "p"
                },
                "memberName": "isVestedPortionWithdrawn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortion"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "vestedAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "amountPerPortion"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortionWithdrawn"
            },
            {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDistributionDates",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "distributionDates"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/ParticipationVestingPrivate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "./math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./math/SafeMath.sol",
      "parts": [
       "./math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IERC20.sol",
      "parts": [
       "./IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ParticipationVestingPrivate",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": null,
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalTokensToDistribute",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensToDistribute"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalTokensWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StructDefinition",
       "name": "Participation",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "initialPortion",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortion"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "vestedAmount",
         "identifier": {
          "type": "Identifier",
          "name": "vestedAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountPerPortion",
         "identifier": {
          "type": "Identifier",
          "name": "amountPerPortion"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialPortionWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortionWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "isVestedPortionWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "isVestedPortionWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "adminWallet",
         "identifier": {
          "type": "Identifier",
          "name": "adminWallet"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Participation"
          },
          "valueName": null
         },
         "name": "addressToParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "addressToParticipation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "hasParticipated",
         "identifier": {
          "type": "Identifier",
          "name": "hasParticipated"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "initialPortionUnlockingTime",
         "identifier": {
          "type": "Identifier",
          "name": "initialPortionUnlockingTime"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "numberOfPortions",
         "identifier": {
          "type": "Identifier",
          "name": "numberOfPortions"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "distributionDates",
         "identifier": {
          "type": "Identifier",
          "name": "distributionDates"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "adminWallet"
             }
            },
            {
             "type": "StringLiteral",
             "value": "OnlyAdmin: Restricted access.",
             "parts": [
              "OnlyAdmin: Restricted access."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_numberOfPortions",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfPortions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "timeBetweenPortions",
         "identifier": {
          "type": "Identifier",
          "name": "timeBetweenPortions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "distributionStartDate",
         "identifier": {
          "type": "Identifier",
          "name": "distributionStartDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_initialPortionUnlockingTime",
         "identifier": {
          "type": "Identifier",
          "name": "_initialPortionUnlockingTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_adminWallet",
         "identifier": {
          "type": "Identifier",
          "name": "_adminWallet"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_token",
         "identifier": {
          "type": "Identifier",
          "name": "_token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "adminWallet"
           },
           "right": {
            "type": "Identifier",
            "name": "_adminWallet"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "numberOfPortions"
           },
           "right": {
            "type": "Identifier",
            "name": "_numberOfPortions"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initialPortionUnlockingTime"
           },
           "right": {
            "type": "Identifier",
            "name": "_initialPortionUnlockingTime"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "_numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "distributionDates"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "distributionStartDate"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "timeBetweenPortions"
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerParticipants",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "participants",
         "identifier": {
          "type": "Identifier",
          "name": "participants"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "participationAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "participationAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "participants"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "registerParticipant"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "participants"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "participationAmounts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerParticipant",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "participant",
         "identifier": {
          "type": "Identifier",
          "name": "participant"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "participationAmount",
         "identifier": {
          "type": "Identifier",
          "name": "participationAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "totalTokensToDistribute"
                 },
                 "memberName": "sub"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "totalTokensWithdrawn"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "participationAmount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "token"
               },
               "memberName": "balanceOf"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Safeguarding existing token buyers. Not enough tokens.",
             "parts": [
              "Safeguarding existing token buyers. Not enough tokens."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensToDistribute"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensToDistribute"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "participationAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "hasParticipated"
              },
              "index": {
               "type": "Identifier",
               "name": "participant"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "User already registered as participant.",
             "parts": [
              "User already registered as participant."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "initialPortionAmount",
            "identifier": {
             "type": "Identifier",
             "name": "initialPortionAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "participationAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "20",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "100",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "vestedAmount",
            "identifier": {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "participationAmount"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "initialPortionAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "portionAmount",
            "identifier": {
             "type": "Identifier",
             "name": "portionAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            },
            "name": "isPortionWithdrawn",
            "identifier": {
             "type": "Identifier",
             "name": "isPortionWithdrawn"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Participation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "initialPortionAmount"
            },
            {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            {
             "type": "Identifier",
             "name": "portionAmount"
            },
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "Identifier",
             "name": "isPortionWithdrawn"
            }
           ],
           "names": [
            "initialPortion",
            "vestedAmount",
            "amountPerPortion",
            "initialPortionWithdrawn",
            "isVestedPortionWithdrawn"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "initialPortion"
            },
            {
             "type": "Identifier",
             "name": "vestedAmount"
            },
            {
             "type": "Identifier",
             "name": "amountPerPortion"
            },
            {
             "type": "Identifier",
             "name": "initialPortionWithdrawn"
            },
            {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "addressToParticipation"
            },
            "index": {
             "type": "Identifier",
             "name": "participant"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "p"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "hasParticipated"
            },
            "index": {
             "type": "Identifier",
             "name": "participant"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "hasParticipated"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "right": {
              "type": "BooleanLiteral",
              "value": true
             }
            },
            {
             "type": "StringLiteral",
             "value": "Withdraw: User is not a participant.",
             "parts": [
              "Withdraw: User is not a participant."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "addressToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "user"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalToWithdraw",
            "identifier": {
             "type": "Identifier",
             "name": "totalToWithdraw"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortionWithdrawn"
            },
            "isPrefix": true
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "initialPortionUnlockingTime"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "totalToWithdraw"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "totalToWithdraw"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "p"
                 },
                 "memberName": "initialPortion"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "p"
               },
               "memberName": "initialPortionWithdrawn"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "isPortionUnlocked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "BooleanLiteral",
                "value": true
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "distributionDates"
                },
                "memberName": "length"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "p"
                   },
                   "memberName": "isVestedPortionWithdrawn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "isPrefix": true
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "totalToWithdraw"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "totalToWithdraw"
                      },
                      "memberName": "add"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "p"
                       },
                       "memberName": "amountPerPortion"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "p"
                      },
                      "memberName": "isVestedPortionWithdrawn"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "right": {
                     "type": "BooleanLiteral",
                     "value": true
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensWithdrawn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensWithdrawn"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "totalToWithdraw"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "totalToWithdraw"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isPortionUnlocked",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "portionId",
         "identifier": {
          "type": "Identifier",
          "name": "portionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "distributionDates"
            },
            "index": {
             "type": "Identifier",
             "name": "portionId"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "addressToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "account"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            },
            "name": "isVestedPortionWithdrawn",
            "identifier": {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfPortions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfPortions"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "isVestedPortionWithdrawn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "p"
                },
                "memberName": "isVestedPortionWithdrawn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortion"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "vestedAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "amountPerPortion"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "initialPortionWithdrawn"
            },
            {
             "type": "Identifier",
             "name": "isVestedPortionWithdrawn"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDistributionDates",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "distributionDates"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/KuCoinVestingContract.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "./IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IERC20.sol",
      "parts": [
       "./IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./math/SafeMath.sol",
      "parts": [
       "./math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "KuCoinVestingContract",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "unlockingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "unlockingAmounts"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "unlockingTimes",
         "identifier": {
          "type": "Identifier",
          "name": "unlockingTimes"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "isWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "isWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "_beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_unlockingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "_unlockingAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_unlockingTimes",
         "identifier": {
          "type": "Identifier",
          "name": "_unlockingTimes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_beneficiary"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Beneficiary address can not be 0x0",
             "parts": [
              "Beneficiary address can not be 0x0"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_unlockingAmounts"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_unlockingTimes"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Input arguments are not matching!",
             "parts": [
              "Input arguments are not matching!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "beneficiary"
           },
           "right": {
            "type": "Identifier",
            "name": "_beneficiary"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_unlockingTimes"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "unlockingTimes"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_unlockingTimes"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "unlockingAmounts"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_unlockingAmounts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalToPay",
            "identifier": {
             "type": "Identifier",
             "name": "totalToPay"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "unlockingAmounts"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "UnaryOperation",
               "operator": "!",
               "subExpression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "isWithdrawn"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "isPrefix": true
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "unlockingTimes"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "totalToPay"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "totalToPay"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "unlockingAmounts"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "isWithdrawn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "totalToPay"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "token"
               },
               "memberName": "transfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "beneficiary"
               },
               {
                "type": "Identifier",
                "name": "totalToPay"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/IERC20.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.0 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "IERC20",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Approval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/AvalaunchCollateral.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/proxy/Initializable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/proxy/Initializable.sol",
      "parts": [
       "@openzeppelin/contracts/proxy/Initializable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./math/SafeMath.sol",
      "parts": [
       "./math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/IAvalaunchSale.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/IAvalaunchSale.sol",
      "parts": [
       "./interfaces/IAvalaunchSale.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Admin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Admin.sol",
      "parts": [
       "./Admin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AvalaunchCollateral",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Initializable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Admin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalFeesCollected",
         "identifier": {
          "type": "Identifier",
          "name": "totalFeesCollected"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "moderator",
         "identifier": {
          "type": "Identifier",
          "name": "moderator"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isSaleApprovedByModerator",
         "identifier": {
          "type": "Identifier",
          "name": "isSaleApprovedByModerator"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isSignatureUsed",
         "identifier": {
          "type": "Identifier",
          "name": "isSignatureUsed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "saleAutoBuyers",
         "identifier": {
          "type": "Identifier",
          "name": "saleAutoBuyers"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "userBalance",
         "identifier": {
          "type": "Identifier",
          "name": "userBalance"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "AUTOBUY_TYPE",
         "identifier": {
          "type": "Identifier",
          "name": "AUTOBUY_TYPE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "AutoBuy(string confirmationMessage,address saleAddress)",
          "parts": [
           "AutoBuy(string confirmationMessage,address saleAddress)"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "AutoBuy(string confirmationMessage,address saleAddress)",
        "parts": [
         "AutoBuy(string confirmationMessage,address saleAddress)"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "AUTOBUY_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "AUTOBUY_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "AUTOBUY_TYPE"
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "Identifier",
            "name": "AUTOBUY_TYPE"
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "AUTOBUY_MESSAGEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "AUTOBUY_MESSAGEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "Turn AutoBUY ON.",
            "parts": [
             "Turn AutoBUY ON."
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "Turn AutoBUY ON.",
          "parts": [
           "Turn AutoBUY ON."
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "BOOST_TYPE",
         "identifier": {
          "type": "Identifier",
          "name": "BOOST_TYPE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "Boost(string confirmationMessage,address saleAddress)",
          "parts": [
           "Boost(string confirmationMessage,address saleAddress)"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "Boost(string confirmationMessage,address saleAddress)",
        "parts": [
         "Boost(string confirmationMessage,address saleAddress)"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "BOOST_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "BOOST_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "BOOST_TYPE"
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "Identifier",
            "name": "BOOST_TYPE"
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "BOOST_MESSAGEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "BOOST_MESSAGEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "Boost participation.",
            "parts": [
             "Boost participation."
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "Boost participation.",
          "parts": [
           "Boost participation."
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)",
          "parts": [
           "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)",
        "parts": [
         "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712_DOMAIN_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_DOMAIN_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "EIP712_DOMAIN"
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "Identifier",
            "name": "EIP712_DOMAIN"
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "DOMAIN_SEPARATOR",
         "identifier": {
          "type": "Identifier",
          "name": "DOMAIN_SEPARATOR"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "DepositedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "wallet",
         "identifier": {
          "type": "Identifier",
          "name": "wallet"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountDeposited",
         "identifier": {
          "type": "Identifier",
          "name": "amountDeposited"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "WithdrawnCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "wallet",
         "identifier": {
          "type": "Identifier",
          "name": "wallet"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "amountWithdrawn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FeeTaken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sale",
         "identifier": {
          "type": "Identifier",
          "name": "sale"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "participationAmount",
         "identifier": {
          "type": "Identifier",
          "name": "participationAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "feeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "feeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "action",
         "identifier": {
          "type": "Identifier",
          "name": "action"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ApprovedSale",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sale",
         "identifier": {
          "type": "Identifier",
          "name": "sale"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admin"
              },
              "memberName": "isAdmin"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Only admin.",
             "parts": [
              "Only admin."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyModerator",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "moderator"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only moderator.",
             "parts": [
              "Only moderator."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_moderator",
         "identifier": {
          "type": "Identifier",
          "name": "_moderator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "chainId",
         "identifier": {
          "type": "Identifier",
          "name": "chainId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_moderator"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Moderator can not be 0x0.",
             "parts": [
              "Moderator can not be 0x0."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Admin can not be 0x0.",
             "parts": [
              "Admin can not be 0x0."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "moderator"
           },
           "right": {
            "type": "Identifier",
            "name": "_moderator"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Admin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "DOMAIN_SEPARATOR"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encode"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "EIP712_DOMAIN_TYPEHASH"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "AvalaunchApp",
                  "parts": [
                   "AvalaunchApp"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "1",
                  "parts": [
                   "1"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "chainId"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "safeTransferAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "to"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userBalance"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositedCollateral"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "_amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough funds.",
             "parts": [
              "Not enough funds."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userBalance"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "WithdrawnCollateral"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "autoParticipate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleAddress",
         "identifier": {
          "type": "Identifier",
          "name": "saleAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "amountAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "participationFeeAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "participationFeeAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "permitSignature",
         "identifier": {
          "type": "Identifier",
          "name": "permitSignature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isSaleApprovedByModerator"
             },
             "index": {
              "type": "Identifier",
              "name": "saleAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sale contract not approved by moderator.",
             "parts": [
              "Sale contract not approved by moderator."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isSignatureUsed"
              },
              "index": {
               "type": "Identifier",
               "name": "permitSignature"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Signature already used.",
             "parts": [
              "Signature already used."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isSignatureUsed"
            },
            "index": {
             "type": "Identifier",
             "name": "permitSignature"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "saleAutoBuyers"
               },
               "index": {
                "type": "Identifier",
                "name": "saleAddress"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "User autoBuy already active.",
             "parts": [
              "User autoBuy already active."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "saleAutoBuyers"
             },
             "index": {
              "type": "Identifier",
              "name": "saleAddress"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "verifyAutoBuySignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              },
              {
               "type": "Identifier",
               "name": "saleAddress"
              },
              {
               "type": "Identifier",
               "name": "permitSignature"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "AutoBuy signature invalid.",
             "parts": [
              "AutoBuy signature invalid."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "amountAVAX"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "participationFeeAVAX"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough collateral.",
             "parts": [
              "Not enough collateral."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userBalance"
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "amountAVAX"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "participationFeeAVAX"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalFeesCollected"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalFeesCollected"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "participationFeeAVAX"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "moderator"
            },
            {
             "type": "Identifier",
             "name": "participationFeeAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FeeTaken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "saleAddress"
            },
            {
             "type": "Identifier",
             "name": "amountAVAX"
            },
            {
             "type": "Identifier",
             "name": "participationFeeAVAX"
            },
            {
             "type": "StringLiteral",
             "value": "autoParticipate",
             "parts": [
              "autoParticipate"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IAvalaunchSale"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "saleAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "autoParticipate"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "amountAVAX"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "amountXavaToBurn"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "boostParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleAddress",
         "identifier": {
          "type": "Identifier",
          "name": "saleAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "amountAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "boostFeeAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "boostFeeAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "permitSignature",
         "identifier": {
          "type": "Identifier",
          "name": "permitSignature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isSaleApprovedByModerator"
             },
             "index": {
              "type": "Identifier",
              "name": "saleAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sale contract not approved by moderator.",
             "parts": [
              "Sale contract not approved by moderator."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "amountAVAX"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "boostFeeAVAX"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough collateral.",
             "parts": [
              "Not enough collateral."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userBalance"
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "userBalance"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "amountAVAX"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "boostFeeAVAX"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isSignatureUsed"
              },
              "index": {
               "type": "Identifier",
               "name": "permitSignature"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Signature already used.",
             "parts": [
              "Signature already used."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isSignatureUsed"
            },
            "index": {
             "type": "Identifier",
             "name": "permitSignature"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "verifyBoostSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              },
              {
               "type": "Identifier",
               "name": "saleAddress"
              },
              {
               "type": "Identifier",
               "name": "permitSignature"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Boost signature invalid.",
             "parts": [
              "Boost signature invalid."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "moderator"
            },
            {
             "type": "Identifier",
             "name": "boostFeeAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FeeTaken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "saleAddress"
            },
            {
             "type": "Identifier",
             "name": "amountAVAX"
            },
            {
             "type": "Identifier",
             "name": "boostFeeAVAX"
            },
            {
             "type": "StringLiteral",
             "value": "boostParticipation",
             "parts": [
              "boostParticipation"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IAvalaunchSale"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "saleAddress"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "boostParticipation"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "amountAVAX"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "amountXavaToBurn"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setModerator",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_moderator",
         "identifier": {
          "type": "Identifier",
          "name": "_moderator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_moderator"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Moderator can not be 0x0",
             "parts": [
              "Moderator can not be 0x0"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "moderator"
           },
           "right": {
            "type": "Identifier",
            "name": "_moderator"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyModerator",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approveSale",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleAddress",
         "identifier": {
          "type": "Identifier",
          "name": "saleAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isSaleApprovedByModerator"
            },
            "index": {
             "type": "Identifier",
             "name": "saleAddress"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ApprovedSale"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "saleAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyModerator",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "verifyAutoBuySignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleContract",
         "identifier": {
          "type": "Identifier",
          "name": "saleContract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "permitSignature",
         "identifier": {
          "type": "Identifier",
          "name": "permitSignature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "\\x19\\x01",
               "parts": [
                "\\x19\\x01"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "DOMAIN_SEPARATOR"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encode"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "AUTOBUY_TYPEHASH"
                  },
                  {
                   "type": "Identifier",
                   "name": "AUTOBUY_MESSAGEHASH"
                  },
                  {
                   "type": "Identifier",
                   "name": "saleContract"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "user"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ECDSA"
             },
             "memberName": "recover"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "hash"
             },
             {
              "type": "Identifier",
              "name": "permitSignature"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "verifyBoostSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleContract",
         "identifier": {
          "type": "Identifier",
          "name": "saleContract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "permitSignature",
         "identifier": {
          "type": "Identifier",
          "name": "permitSignature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "\\x19\\x01",
               "parts": [
                "\\x19\\x01"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "DOMAIN_SEPARATOR"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encode"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "BOOST_TYPEHASH"
                  },
                  {
                   "type": "Identifier",
                   "name": "BOOST_MESSAGEHASH"
                  },
                  {
                   "type": "Identifier",
                   "name": "saleContract"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "user"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ECDSA"
             },
             "memberName": "recover"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "hash"
             },
             {
              "type": "Identifier",
              "name": "permitSignature"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTVL",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "memberName": "balance"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/AvalaunchBadgeFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155PausableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155PausableUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155PausableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/IAdmin.sol",
      "parts": [
       "./interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AvalaunchBadgeFactory",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC1155PausableUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "contractURI",
         "identifier": {
          "type": "Identifier",
          "name": "contractURI"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lastCreatedBadgeId",
         "identifier": {
          "type": "Identifier",
          "name": "lastCreatedBadgeId"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "badgeIdToTradeability",
         "identifier": {
          "type": "Identifier",
          "name": "badgeIdToTradeability"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint8",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "badgeIdToMultiplier",
         "identifier": {
          "type": "Identifier",
          "name": "badgeIdToMultiplier"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "badgeIdToMintedSupply",
         "identifier": {
          "type": "Identifier",
          "name": "badgeIdToMintedSupply"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "verifiedMarketplaces",
         "identifier": {
          "type": "Identifier",
          "name": "verifiedMarketplaces"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "BadgeCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "badgeId",
         "identifier": {
          "type": "Identifier",
          "name": "badgeId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "multiplier",
         "identifier": {
          "type": "Identifier",
          "name": "multiplier"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "tradeability",
         "identifier": {
          "type": "Identifier",
          "name": "tradeability"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BadgeMinted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "badgeId",
         "identifier": {
          "type": "Identifier",
          "name": "badgeId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "receiver",
         "identifier": {
          "type": "Identifier",
          "name": "receiver"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "NewURISet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "newUri",
         "identifier": {
          "type": "Identifier",
          "name": "newUri"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "NewContractURISet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "newContractUri",
         "identifier": {
          "type": "Identifier",
          "name": "newContractUri"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "VMarketplaceAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "marketplace",
         "identifier": {
          "type": "Identifier",
          "name": "marketplace"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "VMarketplaceRemoved",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "marketplace",
         "identifier": {
          "type": "Identifier",
          "name": "marketplace"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admin"
              },
              "memberName": "isAdmin"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Only admin can call this function.",
             "parts": [
              "Only admin can call this function."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_uri",
         "identifier": {
          "type": "Identifier",
          "name": "_uri"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractURI",
         "identifier": {
          "type": "Identifier",
          "name": "_contractURI"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC1155_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_uri"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Admin cannot be zero address.",
             "parts": [
              "Admin cannot be zero address."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "contractURI"
           },
           "right": {
            "type": "Identifier",
            "name": "_contractURI"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "pause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_pause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "unpause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_unpause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setNewUri",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_uri",
         "identifier": {
          "type": "Identifier",
          "name": "_uri"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setURI"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_uri"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NewURISet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_uri"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setNewContractUri",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_contractURI",
         "identifier": {
          "type": "Identifier",
          "name": "_contractURI"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "contractURI"
           },
           "right": {
            "type": "Identifier",
            "name": "_contractURI"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NewURISet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_contractURI"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addVerifiedMarketplace",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contract",
         "identifier": {
          "type": "Identifier",
          "name": "_contract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "verifiedMarketplaces"
            },
            "index": {
             "type": "Identifier",
             "name": "_contract"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "VMarketplaceAdded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_contract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeVerifiedMarketplace",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contract",
         "identifier": {
          "type": "Identifier",
          "name": "_contract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "verifiedMarketplaces"
            },
            "index": {
             "type": "Identifier",
             "name": "_contract"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "VMarketplaceRemoved"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_contract"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createBadges",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "badgeIds",
         "identifier": {
          "type": "Identifier",
          "name": "badgeIds"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint8",
           "stateMutability": null
          },
          "length": null
         },
         "name": "multipliers",
         "identifier": {
          "type": "Identifier",
          "name": "multipliers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tradeability",
         "identifier": {
          "type": "Identifier",
          "name": "tradeability"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "badgeIds"
               },
               "memberName": "length"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "multipliers"
               },
               "memberName": "length"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "multipliers"
               },
               "memberName": "length"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tradeability"
               },
               "memberName": "length"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Array size mismatch.",
             "parts": [
              "Array size mismatch."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "badgeIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "badgeIds"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "lastCreatedBadgeId"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "Invalid badge id.",
                "parts": [
                 "Invalid badge id."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastCreatedBadgeId"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "badgeIds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "badgeIdToTradeability"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "badgeIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tradeability"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "badgeIdToMultiplier"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "badgeIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "multipliers"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "BadgeCreated"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "badgeIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "multipliers"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "tradeability"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mintBadges",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "badgeIds",
         "identifier": {
          "type": "Identifier",
          "name": "badgeIds"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "receivers",
         "identifier": {
          "type": "Identifier",
          "name": "receivers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "badgeIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "receivers"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Array length mismatch.",
             "parts": [
              "Array length mismatch."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "badgeIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "UnaryOperation",
                "operator": "!",
                "subExpression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "AddressUpgradeable"
                  },
                  "memberName": "isContract"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "receivers"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "isPrefix": true
               },
               {
                "type": "StringLiteral",
                "value": "Cannot mint badge to untrusted contract.",
                "parts": [
                 "Cannot mint badge to untrusted contract."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "badgeIds"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "lastCreatedBadgeId"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Badge must be created before minting.",
                "parts": [
                 "Badge must be created before minting."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_mint"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "receivers"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "badgeIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               },
               {
                "type": "StringLiteral",
                "value": "0x0",
                "parts": [
                 "0x0"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "BadgeMinted"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "badgeIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "receivers"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getContractURI",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "contractURI"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBadgeSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "badgeId",
         "identifier": {
          "type": "Identifier",
          "name": "badgeId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "badgeIdToMintedSupply"
           },
           "index": {
            "type": "Identifier",
            "name": "badgeId"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBadgeMultiplier",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "badgeId",
         "identifier": {
          "type": "Identifier",
          "name": "badgeId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "badgeIdToMultiplier"
           },
           "index": {
            "type": "Identifier",
            "name": "badgeId"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLastCreatedBadgeId",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "lastCreatedBadgeId"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isMarketplaceVerified",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "marketplace",
         "identifier": {
          "type": "Identifier",
          "name": "marketplace"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "verifiedMarketplaces"
           },
           "index": {
            "type": "Identifier",
            "name": "marketplace"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_beforeTokenTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "operator",
         "identifier": {
          "type": "Identifier",
          "name": "operator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ids",
         "identifier": {
          "type": "Identifier",
          "name": "ids"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amounts",
         "identifier": {
          "type": "Identifier",
          "name": "amounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "_beforeTokenTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "operator"
            },
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "ids"
            },
            {
             "type": "Identifier",
             "name": "amounts"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "from"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "verifiedMarketplaces"
                },
                "index": {
                 "type": "Identifier",
                 "name": "operator"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Badges can be traded only through verified marketplaces.",
                "parts": [
                 "Badges can be traded only through verified marketplaces."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ids"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "badgeIdToTradeability"
                   },
                   "index": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "ids"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Badge not tradeable.",
                   "parts": [
                    "Badge not tradeable."
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ids"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "badgeIdToMintedSupply"
                  },
                  "index": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "ids"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "badgeIdToMintedSupply"
                    },
                    "index": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "ids"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "amounts"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/AllocationStaking.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/ISalesFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/ISalesFactory.sol",
      "parts": [
       "./interfaces/ISalesFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/IAdmin.sol",
      "parts": [
       "./interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AllocationStaking",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnableUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "ECDSA",
       "functions": [],
       "operators": []
      },
      {
       "type": "StructDefinition",
       "name": "UserInfo",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rewardDebt",
         "identifier": {
          "type": "Identifier",
          "name": "rewardDebt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokensUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "tokensUnlockTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "salesRegistered",
         "identifier": {
          "type": "Identifier",
          "name": "salesRegistered"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "PoolInfo",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "lpToken",
         "identifier": {
          "type": "Identifier",
          "name": "lpToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lastRewardTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastRewardTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "accERC20PerShare",
         "identifier": {
          "type": "Identifier",
          "name": "accERC20PerShare"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalDeposits",
         "identifier": {
          "type": "Identifier",
          "name": "totalDeposits"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "erc20",
         "identifier": {
          "type": "Identifier",
          "name": "erc20"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "paidOut",
         "identifier": {
          "type": "Identifier",
          "name": "paidOut"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rewardPerSecond",
         "identifier": {
          "type": "Identifier",
          "name": "rewardPerSecond"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalRewards",
         "identifier": {
          "type": "Identifier",
          "name": "totalRewards"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "depositFeePrecision",
         "identifier": {
          "type": "Identifier",
          "name": "depositFeePrecision"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "depositFeePercent",
         "identifier": {
          "type": "Identifier",
          "name": "depositFeePercent"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalXavaRedistributed",
         "identifier": {
          "type": "Identifier",
          "name": "totalXavaRedistributed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ISalesFactory"
         },
         "name": "salesFactory",
         "identifier": {
          "type": "Identifier",
          "name": "salesFactory"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "PoolInfo"
          },
          "length": null
         },
         "name": "poolInfo",
         "identifier": {
          "type": "Identifier",
          "name": "poolInfo"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "UserDefinedTypeName",
            "namePath": "UserInfo"
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "userInfo",
         "identifier": {
          "type": "Identifier",
          "name": "userInfo"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalAllocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "totalAllocPoint"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "startTimestamp"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "endTimestamp"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "totalBurnedFromUser",
         "identifier": {
          "type": "Identifier",
          "name": "totalBurnedFromUser"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "postSaleWithdrawPenaltyLength",
         "identifier": {
          "type": "Identifier",
          "name": "postSaleWithdrawPenaltyLength"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "postSaleWithdrawPenaltyPercent",
         "identifier": {
          "type": "Identifier",
          "name": "postSaleWithdrawPenaltyPercent"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "postSaleWithdrawPenaltyPrecision",
         "identifier": {
          "type": "Identifier",
          "name": "postSaleWithdrawPenaltyPrecision"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isNonceUsed",
         "identifier": {
          "type": "Identifier",
          "name": "isNonceUsed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isSignatureUsed",
         "identifier": {
          "type": "Identifier",
          "name": "isSignatureUsed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "Deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EmergencyWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "DepositFeeSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "depositFeePercent",
         "identifier": {
          "type": "Identifier",
          "name": "depositFeePercent"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "depositFeePrecision",
         "identifier": {
          "type": "Identifier",
          "name": "depositFeePrecision"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CompoundedEarnings",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAdded",
         "identifier": {
          "type": "Identifier",
          "name": "amountAdded"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalDeposited",
         "identifier": {
          "type": "Identifier",
          "name": "totalDeposited"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FeeTaken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "PostSaleWithdrawFeeCharged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountStake",
         "identifier": {
          "type": "Identifier",
          "name": "amountStake"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountRewards",
         "identifier": {
          "type": "Identifier",
          "name": "amountRewards"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyVerifiedSales",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "salesFactory"
              },
              "memberName": "isSaleCreatedThroughFactory"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Sale not created through factory.",
             "parts": [
              "Sale not created through factory."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_erc20",
         "identifier": {
          "type": "Identifier",
          "name": "_erc20"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rewardPerSecond",
         "identifier": {
          "type": "Identifier",
          "name": "_rewardPerSecond"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "_startTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_salesFactory",
         "identifier": {
          "type": "Identifier",
          "name": "_salesFactory"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePercent",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePrecision",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePrecision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__Ownable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "erc20"
           },
           "right": {
            "type": "Identifier",
            "name": "_erc20"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rewardPerSecond"
           },
           "right": {
            "type": "Identifier",
            "name": "_rewardPerSecond"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "startTimestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "_startTimestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "endTimestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "_startTimestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "salesFactory"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ISalesFactory"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_salesFactory"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setDepositFeeInternal"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_depositFeePercent"
            },
            {
             "type": "Identifier",
             "name": "_depositFeePrecision"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSalesFactory",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_salesFactory",
         "identifier": {
          "type": "Identifier",
          "name": "_salesFactory"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_salesFactory"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "salesFactory"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ISalesFactory"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_salesFactory"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "poolLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "memberName": "length"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "fund",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "Identifier",
              "name": "endTimestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "fund: too late, the farm is closed",
             "parts": [
              "fund: too late, the farm is closed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "erc20"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "endTimestamp"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_amount"
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "rewardPerSecond"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalRewards"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalRewards"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "_allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_lpToken",
         "identifier": {
          "type": "Identifier",
          "name": "_lpToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_withUpdate",
         "identifier": {
          "type": "Identifier",
          "name": "_withUpdate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_withUpdate"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "massUpdatePools"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastRewardTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastRewardTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "startTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "startTimestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalAllocPoint"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalAllocPoint"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_allocPoint"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "poolInfo"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "PoolInfo"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_lpToken"
              },
              {
               "type": "Identifier",
               "name": "_allocPoint"
              },
              {
               "type": "Identifier",
               "name": "lastRewardTimestamp"
              },
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              },
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [
              "lpToken",
              "allocPoint",
              "lastRewardTimestamp",
              "accERC20PerShare",
              "totalDeposits"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "lpToken"
              },
              {
               "type": "Identifier",
               "name": "allocPoint"
              },
              {
               "type": "Identifier",
               "name": "lastRewardTimestamp"
              },
              {
               "type": "Identifier",
               "name": "accERC20PerShare"
              },
              {
               "type": "Identifier",
               "name": "totalDeposits"
              }
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setDepositFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePercent",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePrecision",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePrecision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setDepositFeeInternal"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_depositFeePercent"
            },
            {
             "type": "Identifier",
             "name": "_depositFeePrecision"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setDepositFeeInternal",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePercent",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFeePrecision",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFeePrecision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "_depositFeePercent"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_depositFeePrecision"
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "100",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "_depositFeePercent"
              },
              "right": {
               "type": "Identifier",
               "name": "_depositFeePrecision"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "depositFeePercent"
           },
           "right": {
            "type": "Identifier",
            "name": "_depositFeePercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "depositFeePrecision"
           },
           "right": {
            "type": "Identifier",
            "name": "_depositFeePrecision"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DepositFeeSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "depositFeePercent"
            },
            {
             "type": "Identifier",
             "name": "depositFeePrecision"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "set",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "_allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_withUpdate",
         "identifier": {
          "type": "Identifier",
          "name": "_withUpdate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_withUpdate"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "massUpdatePools"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalAllocPoint"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "totalAllocPoint"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "poolInfo"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "_pid"
                 }
                },
                "memberName": "allocPoint"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_allocPoint"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "poolInfo"
             },
             "index": {
              "type": "Identifier",
              "name": "_pid"
             }
            },
            "memberName": "allocPoint"
           },
           "right": {
            "type": "Identifier",
            "name": "_allocPoint"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "user"
           },
           "memberName": "amount"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "pending",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "accERC20PerShare",
            "identifier": {
             "type": "Identifier",
             "name": "accERC20PerShare"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "accERC20PerShare"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "totalDeposits"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lastRewardTimestamp"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "lastTimestamp",
               "identifier": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "endTimestamp"
               }
              },
              "trueExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "falseExpression": {
               "type": "Identifier",
               "name": "endTimestamp"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "nrOfSeconds",
               "identifier": {
                "type": "Identifier",
                "name": "nrOfSeconds"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "lastRewardTimestamp"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "erc20Reward",
               "identifier": {
                "type": "Identifier",
                "name": "erc20Reward"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "nrOfSeconds"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "rewardPerSecond"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pool"
                  },
                  "memberName": "allocPoint"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalAllocPoint"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "accERC20PerShare"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "accERC20PerShare"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "erc20Reward"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "1e36",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "lpSupply"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalPending",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "startTimestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "endTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "endTimestamp"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rewardPerSecond"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "startTimestamp"
               }
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "paidOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "massUpdatePools",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "pid",
             "identifier": {
              "type": "Identifier",
              "name": "pid"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "pid"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "pid"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updatePool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "pid"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setTokensUnlockTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokensUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "_tokensUnlockTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "tokensUnlockTime"
           },
           "right": {
            "type": "Identifier",
            "name": "_tokensUnlockTime"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "user"
               },
               "memberName": "tokensUnlockTime"
              },
              "right": {
               "type": "Identifier",
               "name": "_tokensUnlockTime"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "salesRegistered"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyVerifiedSales",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "redistributeXava",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amountToRedistribute",
         "identifier": {
          "type": "Identifier",
          "name": "_amountToRedistribute"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_amountToRedistribute"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "UserInfo"
               },
               "name": "user",
               "identifier": {
                "type": "Identifier",
                "name": "user"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "userInfo"
               },
               "index": {
                "type": "Identifier",
                "name": "_pid"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "_user"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "PoolInfo"
               },
               "name": "pool",
               "identifier": {
                "type": "Identifier",
                "name": "pool"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "poolInfo"
              },
              "index": {
               "type": "Identifier",
               "name": "_pid"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updatePoolWithFee"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "Identifier",
                "name": "_amountToRedistribute"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "pendingAmount",
               "identifier": {
                "type": "Identifier",
                "name": "pendingAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "user"
                    },
                    "memberName": "amount"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pool"
                    },
                    "memberName": "accERC20PerShare"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "div"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1e36",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "rewardDebt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "user"
               },
               "memberName": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "pendingAmount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "user"
               },
               "memberName": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_amountToRedistribute"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "CompoundedEarnings"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_user"
               },
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "Identifier",
                "name": "pendingAmount"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "user"
               },
               "memberName": "rewardDebt"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "user"
                   },
                   "memberName": "amount"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pool"
                   },
                   "memberName": "accERC20PerShare"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "1e36",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "totalDeposits"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pool"
                   },
                   "memberName": "totalDeposits"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "pendingAmount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_amountToRedistribute"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "burnFromUser"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_user"
               },
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "Identifier",
                "name": "_amountToRedistribute"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyVerifiedSales",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updatePool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePoolWithFee"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updatePoolWithFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_depositFee",
         "identifier": {
          "type": "Identifier",
          "name": "_depositFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "endTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "endTimestamp"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "lastTimestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "lastRewardTimestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastTimestamp"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "lastRewardTimestamp"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "totalDeposits"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "lpSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "lastRewardTimestamp"
              },
              "right": {
               "type": "Identifier",
               "name": "lastTimestamp"
              }
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nrOfSeconds",
            "identifier": {
             "type": "Identifier",
             "name": "nrOfSeconds"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lastRewardTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "reward",
            "identifier": {
             "type": "Identifier",
             "name": "reward"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "nrOfSeconds"
            },
            "memberName": "mul"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "rewardPerSecond"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "erc20Reward",
            "identifier": {
             "type": "Identifier",
             "name": "erc20Reward"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "reward"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pool"
                 },
                 "memberName": "allocPoint"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "totalAllocPoint"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_depositFee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "accERC20PerShare"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "accERC20PerShare"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "erc20Reward"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1e36",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpSupply"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "lastRewardTimestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "lastTimestamp"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "depositFee",
            "identifier": {
             "type": "Identifier",
             "name": "depositFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "depositAmount",
            "identifier": {
             "type": "Identifier",
             "name": "depositAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_amount"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_pid"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "depositFee"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_amount"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "depositFeePercent"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "depositFeePrecision"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "depositAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_amount"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "depositFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "burnFromUser"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "Identifier",
                "name": "depositFee"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePoolWithFee"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "depositFee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "pendingAmount",
               "identifier": {
                "type": "Identifier",
                "name": "pendingAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "user"
                    },
                    "memberName": "amount"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pool"
                    },
                    "memberName": "accERC20PerShare"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "div"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1e36",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "rewardDebt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "erc20Transfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "pendingAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "depositAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "depositAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "accERC20PerShare"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1e36",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Deposit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "depositAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "verifySignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "functionName",
         "identifier": {
          "type": "Identifier",
          "name": "functionName"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nonce",
         "identifier": {
          "type": "Identifier",
          "name": "nonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "nonceHash",
            "identifier": {
             "type": "Identifier",
             "name": "nonceHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "functionName"
              },
              {
               "type": "Identifier",
               "name": "nonce"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isNonceUsed"
              },
              "index": {
               "type": "Identifier",
               "name": "nonceHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Nonce already used.",
             "parts": [
              "Nonce already used."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isNonceUsed"
            },
            "index": {
             "type": "Identifier",
             "name": "nonceHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isSignatureUsed"
              },
              "index": {
               "type": "Identifier",
               "name": "signature"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Signature already used.",
             "parts": [
              "Signature already used."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isSignatureUsed"
            },
            "index": {
             "type": "Identifier",
             "name": "signature"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "hash"
              },
              "memberName": "recover"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nonce",
         "identifier": {
          "type": "Identifier",
          "name": "nonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "Identifier",
                 "name": "_pid"
                },
                {
                 "type": "Identifier",
                 "name": "_amount"
                },
                {
                 "type": "Identifier",
                 "name": "nonce"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "verifySignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "withdraw",
               "parts": [
                "withdraw"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "Identifier",
               "name": "nonce"
              },
              {
               "type": "Identifier",
               "name": "hash"
              },
              {
               "type": "Identifier",
               "name": "signature"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid signature.",
             "parts": [
              "Invalid signature."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "tokensUnlockTime"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Last sale you registered for is not finished yet.",
             "parts": [
              "Last sale you registered for is not finished yet."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "right": {
              "type": "Identifier",
              "name": "_amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "withdraw: can't withdraw more than deposit",
             "parts": [
              "withdraw: can't withdraw more than deposit"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pendingAmount",
            "identifier": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pool"
                 },
                 "memberName": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "withdrawalFeeDepositAmount",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawalFeeDepositAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "withdrawalFeePending",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawalFeePending"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_pid"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "withdrawalFeeDepositAmount"
                },
                {
                 "type": "Identifier",
                 "name": "withdrawalFeePending"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getWithdrawFeeInternal"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_amount"
                },
                {
                 "type": "Identifier",
                 "name": "pendingAmount"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "tokensUnlockTime"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "erc20Transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pendingAmount"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "withdrawalFeePending"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "accERC20PerShare"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1e36",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_amount"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "withdrawalFeeDepositAmount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "withdrawalFeeDepositAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "burnFromUser"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "withdrawalFeeDepositAmount"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "withdrawalFeePending"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updatePoolWithFee"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_pid"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "withdrawalFeeDepositAmount"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "withdrawalFeePending"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "PostSaleWithdrawFeeCharged"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "withdrawalFeeDepositAmount"
               },
               {
                "type": "Identifier",
                "name": "withdrawalFeePending"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "_amount"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "user"
                  },
                  "memberName": "tokensUnlockTime"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Withdraw"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "compound",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "User does not have anything staked.",
             "parts": [
              "User does not have anything staked."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pendingAmount",
            "identifier": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pool"
                 },
                 "memberName": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fee",
            "identifier": {
             "type": "Identifier",
             "name": "fee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pendingAmount"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "depositFeePercent"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "depositFeePrecision"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amountCompounding",
            "identifier": {
             "type": "Identifier",
             "name": "amountCompounding"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "burnFromUser"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "fee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePoolWithFee"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "fee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountCompounding"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "accERC20PerShare"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1e36",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountCompounding"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "CompoundedEarnings"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "amountCompounding"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "emergencyWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "tokensUnlockTime"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "postSaleWithdrawPenaltyLength"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Emergency withdraw blocked during sale and cooldown period.",
             "parts": [
              "Emergency withdraw blocked during sale and cooldown period."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EmergencyWithdraw"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "tokensUnlockTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "erc20Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "erc20"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "paidOut"
           },
           "right": {
            "type": "Identifier",
            "name": "_amount"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burnFromUser",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "totalBurnedFromUser"
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "totalBurnedFromUser"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalXavaRedistributed"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalXavaRedistributed"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FeeTaken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getWithdrawFeeInternal",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountStaking",
         "identifier": {
          "type": "Identifier",
          "name": "amountStaking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountPending",
         "identifier": {
          "type": "Identifier",
          "name": "amountPending"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stakeUnlocksAt",
         "identifier": {
          "type": "Identifier",
          "name": "stakeUnlocksAt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "stakeUnlocksAt"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "postSaleWithdrawPenaltyLength"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "timeLeft",
            "identifier": {
             "type": "Identifier",
             "name": "timeLeft"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "stakeUnlocksAt"
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "postSaleWithdrawPenaltyLength"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "percentToTake",
            "identifier": {
             "type": "Identifier",
             "name": "percentToTake"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "timeLeft"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "postSaleWithdrawPenaltyPercent"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "postSaleWithdrawPenaltyLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "percentToTake"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "amountStaking"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "postSaleWithdrawPenaltyPrecision"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "percentToTake"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "amountPending"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "postSaleWithdrawPenaltyPrecision"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getWithdrawFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "userAddress",
         "identifier": {
          "type": "Identifier",
          "name": "userAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountToWithdraw",
         "identifier": {
          "type": "Identifier",
          "name": "amountToWithdraw"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "userAddress"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pendingAmount",
            "identifier": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pool"
                 },
                 "memberName": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getWithdrawFeeInternal"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amountToWithdraw"
            },
            {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "tokensUnlockTime"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPendingAndDepositedForUsers",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "users",
         "identifier": {
          "type": "Identifier",
          "name": "users"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "deposits",
            "identifier": {
             "type": "Identifier",
             "name": "deposits"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "users"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "earnings",
            "identifier": {
             "type": "Identifier",
             "name": "earnings"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "users"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "users"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "deposits"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "deposited"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "pid"
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "users"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "earnings"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "pending"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "pid"
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "users"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "deposits"
            },
            {
             "type": "Identifier",
             "name": "earnings"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setPostSaleWithdrawPenaltyPercentAndLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_postSaleWithdrawPenaltyPercent",
         "identifier": {
          "type": "Identifier",
          "name": "_postSaleWithdrawPenaltyPercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_postSaleWithdrawPenaltyLength",
         "identifier": {
          "type": "Identifier",
          "name": "_postSaleWithdrawPenaltyLength"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_postSaleWithdrawPenaltyPrecision",
         "identifier": {
          "type": "Identifier",
          "name": "_postSaleWithdrawPenaltyPrecision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "_postSaleWithdrawPenaltyPercent"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_postSaleWithdrawPenaltyPrecision"
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "100",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "_postSaleWithdrawPenaltyPercent"
              },
              "right": {
               "type": "Identifier",
               "name": "_postSaleWithdrawPenaltyPrecision"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "postSaleWithdrawPenaltyLength"
           },
           "right": {
            "type": "Identifier",
            "name": "_postSaleWithdrawPenaltyLength"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "postSaleWithdrawPenaltyPercent"
           },
           "right": {
            "type": "Identifier",
            "name": "_postSaleWithdrawPenaltyPercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "postSaleWithdrawPenaltyPrecision"
           },
           "right": {
            "type": "Identifier",
            "name": "_postSaleWithdrawPenaltyPrecision"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot set zero address as admin.",
             "parts": [
              "Cannot set zero address as admin."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/Admin.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "Admin",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "admins",
         "identifier": {
          "type": "Identifier",
          "name": "admins"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "isAdmin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isAdmin"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only admin can call.",
             "parts": [
              "Only admin can call."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_admins",
         "identifier": {
          "type": "Identifier",
          "name": "_admins"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_admins"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "admins"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_admins"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "isAdmin"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_admins"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_adminAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_adminAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_adminAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "[RBAC] : Admin must be != than 0x0 address",
             "parts": [
              "[RBAC] : Admin must be != than 0x0 address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isAdmin"
              },
              "index": {
               "type": "Identifier",
               "name": "_adminAddress"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "[RBAC] : Admin already exists.",
             "parts": [
              "[RBAC] : Admin already exists."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admins"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_adminAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isAdmin"
            },
            "index": {
             "type": "Identifier",
             "name": "_adminAddress"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_adminAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_adminAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isAdmin"
             },
             "index": {
              "type": "Identifier",
              "name": "_adminAddress"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admins"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can not remove all admins since contract becomes unusable.",
             "parts": [
              "Can not remove all admins since contract becomes unusable."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "WhileStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "admins"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_adminAddress"
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "admins"
               },
               "memberName": "length"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "revert"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "Passed admin address does not exist",
                   "parts": [
                    "Passed admin address does not exist"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "UnaryOperation",
              "operator": "++",
              "subExpression": {
               "type": "Identifier",
               "name": "i"
              },
              "isPrefix": false
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "admins"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "admins"
            },
            "index": {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admins"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isAdmin"
            },
            "index": {
             "type": "Identifier",
             "name": "_adminAddress"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admins"
            },
            "memberName": "pop"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAllAdmins",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "admins"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/utils/Context.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "Context",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "_msgSender",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "payable",
         "identifier": {
          "type": "Identifier",
          "name": "payable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_msgData",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "this"
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "data"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/sales/SalesFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAdmin.sol",
      "parts": [
       "../interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SalesFactory",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "allocationStaking",
         "identifier": {
          "type": "Identifier",
          "name": "allocationStaking"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "collateral",
         "identifier": {
          "type": "Identifier",
          "name": "collateral"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isSaleCreatedThroughFactory",
         "identifier": {
          "type": "Identifier",
          "name": "isSaleCreatedThroughFactory"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "allSales",
         "identifier": {
          "type": "Identifier",
          "name": "allSales"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "SaleDeployed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleContract",
         "identifier": {
          "type": "Identifier",
          "name": "saleContract"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ImplementationChanged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "AllocationStakingSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "allocationStaking",
         "identifier": {
          "type": "Identifier",
          "name": "allocationStaking"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admin"
              },
              "memberName": "isAdmin"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Only Admin can deploy sales",
             "parts": [
              "Only Admin can deploy sales"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_adminContract",
         "identifier": {
          "type": "Identifier",
          "name": "_adminContract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_allocationStaking",
         "identifier": {
          "type": "Identifier",
          "name": "_allocationStaking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_collateral",
         "identifier": {
          "type": "Identifier",
          "name": "_collateral"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_adminContract"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "allocationStaking"
           },
           "right": {
            "type": "Identifier",
            "name": "_allocationStaking"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AllocationStakingSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "allocationStaking"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collateral"
           },
           "right": {
            "type": "Identifier",
            "name": "_collateral"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setAllocationStaking",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_allocationStaking",
         "identifier": {
          "type": "Identifier",
          "name": "_allocationStaking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_allocationStaking"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "allocationStaking"
           },
           "right": {
            "type": "Identifier",
            "name": "_allocationStaking"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deploySale",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "sale",
            "identifier": {
             "type": "Identifier",
             "name": "sale"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "imp",
            "identifier": {
             "type": "Identifier",
             "name": "imp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "implementation"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "ptr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ptr",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "ptr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x14"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x60"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "imp",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "ptr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x28"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "sale"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "ptr",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x37"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "sale"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sale creation failed",
             "parts": [
              "Sale creation failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "call"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "initialize(address,address,address)",
               "parts": [
                "initialize(address,address,address)"
               ],
               "isUnicode": [
                false
               ]
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "admin"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "allocationStaking"
              },
              {
               "type": "Identifier",
               "name": "collateral"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "StringLiteral",
             "value": "Initialization failed.",
             "parts": [
              "Initialization failed."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isSaleCreatedThroughFactory"
            },
            "index": {
             "type": "Identifier",
             "name": "sale"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "allSales"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sale"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SaleDeployed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sale"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getNumberOfSalesDeployed",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "allSales"
           },
           "memberName": "length"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLastDeployedSale",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "allSales"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "allSales"
              },
              "index": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "allSales"
                },
                "memberName": "length"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "address"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAllSales",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "startIndex",
         "identifier": {
          "type": "Identifier",
          "name": "startIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endIndex",
         "identifier": {
          "type": "Identifier",
          "name": "endIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "endIndex"
             },
             "right": {
              "type": "Identifier",
              "name": "startIndex"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid index range.",
             "parts": [
              "Invalid index range."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            },
            "name": "sales",
            "identifier": {
             "type": "Identifier",
             "name": "sales"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "Identifier",
              "name": "endIndex"
             },
             "right": {
              "type": "Identifier",
              "name": "startIndex"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "index",
            "identifier": {
             "type": "Identifier",
             "name": "index"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "Identifier",
            "name": "startIndex"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "endIndex"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "sales"
               },
               "index": {
                "type": "Identifier",
                "name": "index"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "allSales"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "UnaryOperation",
              "operator": "++",
              "subExpression": {
               "type": "Identifier",
               "name": "index"
              },
              "isPrefix": false
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "sales"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setImplementation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_implementation",
         "identifier": {
          "type": "Identifier",
          "name": "_implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_implementation"
             },
             "right": {
              "type": "Identifier",
              "name": "implementation"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Given implementation is same as current.",
             "parts": [
              "Given implementation is same as current."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "implementation"
           },
           "right": {
            "type": "Identifier",
            "name": "_implementation"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ImplementationChanged"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/sales/AvalaunchSale.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAdmin.sol",
      "parts": [
       "../interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ISalesFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ISalesFactory.sol",
      "parts": [
       "../interfaces/ISalesFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAllocationStaking.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAllocationStaking.sol",
      "parts": [
       "../interfaces/IAllocationStaking.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IERC20Metadata.sol",
      "parts": [
       "../interfaces/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IDexalotPortfolio.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IDexalotPortfolio.sol",
      "parts": [
       "../interfaces/IDexalotPortfolio.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ICollateral.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ICollateral.sol",
      "parts": [
       "../interfaces/ICollateral.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/proxy/Initializable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/proxy/Initializable.sol",
      "parts": [
       "@openzeppelin/contracts/proxy/Initializable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AvalaunchSale",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Initializable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "ECDSA",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAllocationStaking"
         },
         "name": "allocationStakingContract",
         "identifier": {
          "type": "Identifier",
          "name": "allocationStakingContract"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ISalesFactory"
         },
         "name": "factory",
         "identifier": {
          "type": "Identifier",
          "name": "factory"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ICollateral"
         },
         "name": "collateral",
         "identifier": {
          "type": "Identifier",
          "name": "collateral"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IDexalotPortfolio"
         },
         "name": "dexalotPortfolio",
         "identifier": {
          "type": "Identifier",
          "name": "dexalotPortfolio"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StructDefinition",
       "name": "Sale",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isCreated",
         "identifier": {
          "type": "Identifier",
          "name": "isCreated"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "earningsWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "earningsWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "leftoverWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "leftoverWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "tokensDeposited",
         "identifier": {
          "type": "Identifier",
          "name": "tokensDeposited"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleOwner",
         "identifier": {
          "type": "Identifier",
          "name": "saleOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenPriceInAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "tokenPriceInAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOfTokensToSell",
         "identifier": {
          "type": "Identifier",
          "name": "amountOfTokensToSell"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalTokensSold",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensSold"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalAVAXRaised",
         "identifier": {
          "type": "Identifier",
          "name": "totalAVAXRaised"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "saleEnd",
         "identifier": {
          "type": "Identifier",
          "name": "saleEnd"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenPriceInUSD",
         "identifier": {
          "type": "Identifier",
          "name": "tokenPriceInUSD"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Participation",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountBought",
         "identifier": {
          "type": "Identifier",
          "name": "amountBought"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAVAXPaid",
         "identifier": {
          "type": "Identifier",
          "name": "amountAVAXPaid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timeParticipated",
         "identifier": {
          "type": "Identifier",
          "name": "timeParticipated"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "isPortionWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "isPortionWithdrawn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "isPortionWithdrawnToDexalot",
         "identifier": {
          "type": "Identifier",
          "name": "isPortionWithdrawnToDexalot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isParticipationBoosted",
         "identifier": {
          "type": "Identifier",
          "name": "isParticipationBoosted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "boostedAmountAVAXPaid",
         "identifier": {
          "type": "Identifier",
          "name": "boostedAmountAVAXPaid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "boostedAmountBought",
         "identifier": {
          "type": "Identifier",
          "name": "boostedAmountBought"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Round",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTime",
         "identifier": {
          "type": "Identifier",
          "name": "startTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "maxParticipation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Registration",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationTimeStarts",
         "identifier": {
          "type": "Identifier",
          "name": "registrationTimeStarts"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationTimeEnds",
         "identifier": {
          "type": "Identifier",
          "name": "registrationTimeEnds"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numberOfRegistrants",
         "identifier": {
          "type": "Identifier",
          "name": "numberOfRegistrants"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Sale"
         },
         "name": "sale",
         "identifier": {
          "type": "Identifier",
          "name": "sale"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Registration"
         },
         "name": "registration",
         "identifier": {
          "type": "Identifier",
          "name": "registration"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numberOfParticipants",
         "identifier": {
          "type": "Identifier",
          "name": "numberOfParticipants"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "roundIds",
         "identifier": {
          "type": "Identifier",
          "name": "roundIds"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Round"
          },
          "valueName": null
         },
         "name": "roundIdToRound",
         "identifier": {
          "type": "Identifier",
          "name": "roundIdToRound"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Participation"
          },
          "valueName": null
         },
         "name": "userToParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "userToParticipation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "addressToRoundRegisteredFor",
         "identifier": {
          "type": "Identifier",
          "name": "addressToRoundRegisteredFor"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "isParticipated",
         "identifier": {
          "type": "Identifier",
          "name": "isParticipated"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "vestingPortionsUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "vestingPortionsUnlockTime"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "vestingPercentPerPortion",
         "identifier": {
          "type": "Identifier",
          "name": "vestingPercentPerPortion"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "portionVestingPrecision",
         "identifier": {
          "type": "Identifier",
          "name": "portionVestingPrecision"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stakingRoundId",
         "identifier": {
          "type": "Identifier",
          "name": "stakingRoundId"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "boosterRoundId",
         "identifier": {
          "type": "Identifier",
          "name": "boosterRoundId"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxVestingTimeShift",
         "identifier": {
          "type": "Identifier",
          "name": "maxVestingTimeShift"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationDepositAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "registrationDepositAVAX"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationFees",
         "identifier": {
          "type": "Identifier",
          "name": "registrationFees"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "updateTokenPriceInAVAXPercentageThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "updateTokenPriceInAVAXPercentageThreshold"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "updateTokenPriceInAVAXTimeLimit",
         "identifier": {
          "type": "Identifier",
          "name": "updateTokenPriceInAVAXTimeLimit"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "updateTokenPriceInAVAXLastCallTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "updateTokenPriceInAVAXLastCallTimestamp"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "supportsDexalotWithdraw",
         "identifier": {
          "type": "Identifier",
          "name": "supportsDexalotWithdraw"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dexalotUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "dexalotUnlockTime"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "gateClosed",
         "identifier": {
          "type": "Identifier",
          "name": "gateClosed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlySaleOwner",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleOwner"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Restricted to sale owner.",
             "parts": [
              "Restricted to sale owner."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyAdmin",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "admin"
              },
              "memberName": "isAdmin"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Restricted to admins.",
             "parts": [
              "Restricted to admins."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyIfGateOpen",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "gateClosed"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Gate is closed.",
             "parts": [
              "Gate is closed."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "EventDefinition",
       "name": "TokensSold",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UserRegistered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokenPriceSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newPrice",
         "identifier": {
          "type": "Identifier",
          "name": "newPrice"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "MaxParticipationSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "maxParticipation"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokensWithdrawn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SaleCreated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleOwner",
         "identifier": {
          "type": "Identifier",
          "name": "saleOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenPriceInAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "tokenPriceInAVAX"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOfTokensToSell",
         "identifier": {
          "type": "Identifier",
          "name": "amountOfTokensToSell"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "saleEnd",
         "identifier": {
          "type": "Identifier",
          "name": "saleEnd"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenPriceInUSD",
         "identifier": {
          "type": "Identifier",
          "name": "tokenPriceInUSD"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RegistrationTimeSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationTimeStarts",
         "identifier": {
          "type": "Identifier",
          "name": "registrationTimeStarts"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "registrationTimeEnds",
         "identifier": {
          "type": "Identifier",
          "name": "registrationTimeEnds"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RoundAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTime",
         "identifier": {
          "type": "Identifier",
          "name": "startTime"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxParticipation",
         "identifier": {
          "type": "Identifier",
          "name": "maxParticipation"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RegistrationAVAXRefunded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountRefunded",
         "identifier": {
          "type": "Identifier",
          "name": "amountRefunded"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "TokensWithdrawnToDexalot",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "GateClosed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "time",
         "identifier": {
          "type": "Identifier",
          "name": "time"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ParticipationBoosted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "amountAVAX"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountTokens",
         "identifier": {
          "type": "Identifier",
          "name": "amountTokens"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_allocationStaking",
         "identifier": {
          "type": "Identifier",
          "name": "_allocationStaking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_collateral",
         "identifier": {
          "type": "Identifier",
          "name": "_collateral"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_allocationStaking"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_collateral"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "factory"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ISalesFactory"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "allocationStakingContract"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAllocationStaking"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_allocationStaking"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collateral"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ICollateral"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_collateral"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setVestingParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_unlockingTimes",
         "identifier": {
          "type": "Identifier",
          "name": "_unlockingTimes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_percents",
         "identifier": {
          "type": "Identifier",
          "name": "_percents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_maxVestingTimeShift",
         "identifier": {
          "type": "Identifier",
          "name": "_maxVestingTimeShift"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vestingPercentPerPortion"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vestingPortionsUnlockTime"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_unlockingTimes"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_percents"
              },
              "memberName": "length"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "portionVestingPrecision"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sale params not set.",
             "parts": [
              "Sale params not set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_maxVestingTimeShift"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "30",
              "subdenomination": "days"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Maximal shift is 30 days.",
             "parts": [
              "Maximal shift is 30 days."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "maxVestingTimeShift"
           },
           "right": {
            "type": "Identifier",
            "name": "_maxVestingTimeShift"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "sum",
            "identifier": {
             "type": "Identifier",
             "name": "sum"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_unlockingTimes"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleEnd"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Unlock time must be after the sale ends.",
             "parts": [
              "Unlock time must be after the sale ends."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_unlockingTimes"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_unlockingTimes"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "right": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_unlockingTimes"
                    },
                    "index": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "i"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "Unlock time must be greater than previous.",
                   "parts": [
                    "Unlock time must be greater than previous."
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vestingPortionsUnlockTime"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_unlockingTimes"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vestingPercentPerPortion"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_percents"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "sum"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sum"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_percents"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "sum"
             },
             "right": {
              "type": "Identifier",
              "name": "portionVestingPrecision"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Percent distribution issue.",
             "parts": [
              "Percent distribution issue."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "shiftVestingUnlockingTimes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timeToShift",
         "identifier": {
          "type": "Identifier",
          "name": "timeToShift"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "timeToShift"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "timeToShift"
              },
              "right": {
               "type": "Identifier",
               "name": "maxVestingTimeShift"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid shift time.",
             "parts": [
              "Invalid shift time."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "maxVestingTimeShift"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vestingPortionsUnlockTime"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "vestingPortionsUnlockTime"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "vestingPortionsUnlockTime"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "timeToShift"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSaleParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_token",
         "identifier": {
          "type": "Identifier",
          "name": "_token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_saleOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_saleOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenPriceInAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenPriceInAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amountOfTokensToSell",
         "identifier": {
          "type": "Identifier",
          "name": "_amountOfTokensToSell"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_saleEnd",
         "identifier": {
          "type": "Identifier",
          "name": "_saleEnd"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_portionVestingPrecision",
         "identifier": {
          "type": "Identifier",
          "name": "_portionVestingPrecision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_stakingRoundId",
         "identifier": {
          "type": "Identifier",
          "name": "_stakingRoundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_registrationDepositAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "_registrationDepositAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenPriceInUSD",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenPriceInUSD"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "isCreated"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Sale already created.",
             "parts": [
              "Sale already created."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_saleOwner"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid sale owner address.",
             "parts": [
              "Invalid sale owner address."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "_tokenPriceInAVAX"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "_amountOfTokensToSell"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "_saleEnd"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "_tokenPriceInUSD"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid input.",
             "parts": [
              "Invalid input."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "_portionVestingPrecision"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "100",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Should be at least 100",
             "parts": [
              "Should be at least 100"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_stakingRoundId"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid staking round id.",
             "parts": [
              "Invalid staking round id."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "isCreated"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "saleOwner"
           },
           "right": {
            "type": "Identifier",
            "name": "_saleOwner"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "tokenPriceInAVAX"
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenPriceInAVAX"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "amountOfTokensToSell"
           },
           "right": {
            "type": "Identifier",
            "name": "_amountOfTokensToSell"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "saleEnd"
           },
           "right": {
            "type": "Identifier",
            "name": "_saleEnd"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "tokenPriceInUSD"
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenPriceInUSD"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registrationDepositAVAX"
           },
           "right": {
            "type": "Identifier",
            "name": "_registrationDepositAVAX"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "portionVestingPrecision"
           },
           "right": {
            "type": "Identifier",
            "name": "_portionVestingPrecision"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "stakingRoundId"
           },
           "right": {
            "type": "Identifier",
            "name": "_stakingRoundId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "boosterRoundId"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_stakingRoundId"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SaleCreated"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "saleOwner"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "tokenPriceInAVAX"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "amountOfTokensToSell"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "saleEnd"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "tokenPriceInUSD"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setAndSupportDexalotPortfolio",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_dexalotPortfolio",
         "identifier": {
          "type": "Identifier",
          "name": "_dexalotPortfolio"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_dexalotUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "_dexalotUnlockTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "dexalotPortfolio"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Dexalot Portfolio already set.",
             "parts": [
              "Dexalot Portfolio already set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_dexalotPortfolio"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0x0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid address.",
             "parts": [
              "Invalid address."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "dexalotPortfolio"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IDexalotPortfolio"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_dexalotPortfolio"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "dexalotUnlockTime"
           },
           "right": {
            "type": "Identifier",
            "name": "_dexalotUnlockTime"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "supportsDexalotWithdraw"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSaleToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "saleToken",
         "identifier": {
          "type": "Identifier",
          "name": "saleToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "saleToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyIfGateOpen",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setRegistrationTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_registrationTimeStarts",
         "identifier": {
          "type": "Identifier",
          "name": "_registrationTimeStarts"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_registrationTimeEnds",
         "identifier": {
          "type": "Identifier",
          "name": "_registrationTimeEnds"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "isCreated"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "_registrationTimeStarts"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "_registrationTimeEnds"
              },
              "right": {
               "type": "Identifier",
               "name": "_registrationTimeStarts"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_registrationTimeEnds"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleEnd"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "roundIds"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "_registrationTimeEnds"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "roundIdToRound"
                  },
                  "index": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "roundIds"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  }
                 },
                 "memberName": "startTime"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registration"
            },
            "memberName": "registrationTimeStarts"
           },
           "right": {
            "type": "Identifier",
            "name": "_registrationTimeStarts"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registration"
            },
            "memberName": "registrationTimeEnds"
           },
           "right": {
            "type": "Identifier",
            "name": "_registrationTimeEnds"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RegistrationTimeSet"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registration"
             },
             "memberName": "registrationTimeStarts"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registration"
             },
             "memberName": "registrationTimeEnds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyIfGateOpen",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setRounds",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "startTimes",
         "identifier": {
          "type": "Identifier",
          "name": "startTimes"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "maxParticipations",
         "identifier": {
          "type": "Identifier",
          "name": "maxParticipations"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "isCreated"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "startTimes"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "maxParticipations"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid array lengths.",
             "parts": [
              "Invalid array lengths."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "roundIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Rounds set already.",
             "parts": [
              "Rounds set already."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "startTimes"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "startTimes"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registration"
              },
              "memberName": "registrationTimeEnds"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "startTimes"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "startTimes"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "startTimes"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "sale"
                 },
                 "memberName": "saleEnd"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "maxParticipations"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "startTimes"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "lastTimestamp"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastTimestamp"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "startTimes"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "roundId",
               "identifier": {
                "type": "Identifier",
                "name": "roundId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "roundIds"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "roundId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Round"
               },
               "name": "round",
               "identifier": {
                "type": "Identifier",
                "name": "round"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Round"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "startTimes"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "maxParticipations"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "Identifier",
                "name": "roundId"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "round"
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "RoundAdded"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "roundId"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "round"
                },
                "memberName": "startTime"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "round"
                },
                "memberName": "maxParticipation"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerForSale",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "Identifier",
              "name": "registrationDepositAVAX"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Registration deposit doesn't match.",
             "parts": [
              "Registration deposit doesn't match."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "roundId"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid round id.",
             "parts": [
              "Invalid round id."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "roundId"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "roundIds"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid round id",
             "parts": [
              "Invalid round id"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registration"
               },
               "memberName": "registrationTimeStarts"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registration"
               },
               "memberName": "registrationTimeEnds"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Registration gate is closed.",
             "parts": [
              "Registration gate is closed."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "checkRegistrationSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "roundId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid signature.",
             "parts": [
              "Invalid signature."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "addressToRoundRegisteredFor"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "User already registered.",
             "parts": [
              "User already registered."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "addressToRoundRegisteredFor"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "roundId"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "roundId"
           },
           "right": {
            "type": "Identifier",
            "name": "stakingRoundId"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "allocationStakingContract"
               },
               "memberName": "setTokensUnlockTime"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "saleEnd"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "++",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registration"
            },
            "memberName": "numberOfRegistrants"
           },
           "isPrefix": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registrationFees"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registrationFees"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UserRegistered"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "updateTokenPriceInAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "price",
         "identifier": {
          "type": "Identifier",
          "name": "price"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "tokenPriceInAVAX"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "Identifier",
                  "name": "updateTokenPriceInAVAXTimeLimit"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "Identifier",
                  "name": "updateTokenPriceInAVAXPercentageThreshold"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "Params not set.",
                "parts": [
                 "Params not set."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxPriceChange",
               "identifier": {
                "type": "Identifier",
                "name": "maxPriceChange"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "sale"
                  },
                  "memberName": "tokenPriceInAVAX"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "updateTokenPriceInAVAXPercentageThreshold"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "100",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "sale"
                    },
                    "memberName": "tokenPriceInAVAX"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "maxPriceChange"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "sale"
                    },
                    "memberName": "tokenPriceInAVAX"
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "maxPriceChange"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "Price too different from the previous.",
                "parts": [
                 "Price too different from the previous."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "updateTokenPriceInAVAXLastCallTimestamp"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "updateTokenPriceInAVAXTimeLimit"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Not enough time passed since last call.",
                "parts": [
                 "Not enough time passed since last call."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "updateTokenPriceInAVAXLastCallTimestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "tokenPriceInAVAX"
           },
           "right": {
            "type": "Identifier",
            "name": "price"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenPriceSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "price"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "postponeSale",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timeToShift",
         "identifier": {
          "type": "Identifier",
          "name": "timeToShift"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "roundIds"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "memberName": "startTime"
             }
            },
            {
             "type": "StringLiteral",
             "value": "1st round already started.",
             "parts": [
              "1st round already started."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "roundIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Round"
               },
               "name": "round",
               "identifier": {
                "type": "Identifier",
                "name": "round"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "roundIdToRound"
              },
              "index": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "round"
                   },
                   "memberName": "startTime"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "timeToShift"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "sale"
                 },
                 "memberName": "saleEnd"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Start time can not be greater than end time.",
                "parts": [
                 "Start time can not be greater than end time."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "round"
               },
               "memberName": "startTime"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "round"
                 },
                 "memberName": "startTime"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "timeToShift"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "extendRegistrationPeriod",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timeToAdd",
         "identifier": {
          "type": "Identifier",
          "name": "timeToAdd"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registration"
                },
                "memberName": "registrationTimeEnds"
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "timeToAdd"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "roundIds"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "memberName": "startTime"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Registration period overflows sale start.",
             "parts": [
              "Registration period overflows sale start."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "registration"
            },
            "memberName": "registrationTimeEnds"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registration"
              },
              "memberName": "registrationTimeEnds"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "timeToAdd"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCapPerRound",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "rounds",
         "identifier": {
          "type": "Identifier",
          "name": "rounds"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "caps",
         "identifier": {
          "type": "Identifier",
          "name": "caps"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "roundIds"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "memberName": "startTime"
             }
            },
            {
             "type": "StringLiteral",
             "value": "1st round already started.",
             "parts": [
              "1st round already started."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rounds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "caps"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid array length.",
             "parts": [
              "Invalid array length."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "rounds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "caps"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "Max participation can't be 0.",
                "parts": [
                 "Max participation can't be 0."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Round"
               },
               "name": "round",
               "identifier": {
                "type": "Identifier",
                "name": "round"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "roundIdToRound"
              },
              "index": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "rounds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "round"
               },
               "memberName": "maxParticipation"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "caps"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "MaxParticipationSet"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rounds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "round"
                },
                "memberName": "maxParticipation"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositTokens",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "amountOfTokensToSell"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Sale parameters not set.",
             "parts": [
              "Sale parameters not set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "tokensDeposited"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Tokens already deposited.",
             "parts": [
              "Tokens already deposited."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "tokensDeposited"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "token"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "amountOfTokensToSell"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlySaleOwner",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyIfGateOpen",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "autoParticipate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateral"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only collateral.",
             "parts": [
              "Only collateral."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_participate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "amountXavaToBurn"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "participate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "signatureExpirationTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "signatureExpirationTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "tx"
              },
              "memberName": "origin"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only direct calls.",
             "parts": [
              "Only direct calls."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "collateral"
               },
               "memberName": "saleAutoBuyers"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Cannot participate manually, autoBuy activated.",
             "parts": [
              "Cannot participate manually, autoBuy activated."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "checkParticipationSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "Identifier",
               "name": "amountXavaToBurn"
              },
              {
               "type": "Identifier",
               "name": "roundId"
              },
              {
               "type": "Identifier",
               "name": "signatureExpirationTimestamp"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Invalid signature.",
             "parts": [
              "Invalid signature."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "Identifier",
              "name": "signatureExpirationTimestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Signature expired.",
             "parts": [
              "Signature expired."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_participate"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "amountXavaToBurn"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "_participate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "amountAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "roundId"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Round can not be 0.",
             "parts": [
              "Round can not be 0."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amount"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "Identifier",
                "name": "roundId"
               }
              },
              "memberName": "maxParticipation"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Crossing max participation.",
             "parts": [
              "Crossing max participation."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "addressToRoundRegisteredFor"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "roundId"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not registered for this round.",
             "parts": [
              "Not registered for this round."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "isParticipated"
              },
              "index": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Already participated.",
             "parts": [
              "Already participated."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "currentRound",
            "identifier": {
             "type": "Identifier",
             "name": "currentRound"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getCurrentRound"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "roundId"
             },
             "right": {
              "type": "Identifier",
              "name": "currentRound"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid round.",
             "parts": [
              "Invalid round."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amountOfTokensBuying",
            "identifier": {
             "type": "Identifier",
             "name": "amountOfTokensBuying"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "amountAVAX"
                }
               ],
               "isArray": false
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "BinaryOperation",
               "operator": "**",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "10",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "sale"
                      },
                      "memberName": "token"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "decimals"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "tokenPriceInAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't buy 0 tokens",
             "parts": [
              "Can't buy 0 tokens"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "Identifier",
              "name": "amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Exceeding allowance.",
             "parts": [
              "Exceeding allowance."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "amountOfTokensToSell"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "totalTokensSold"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough tokens to sell.",
             "parts": [
              "Not enough tokens to sell."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "totalTokensSold"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "totalTokensSold"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "totalAVAXRaised"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "totalAVAXRaised"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountAVAX"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            },
            "name": "_empty",
            "identifier": {
             "type": "Identifier",
             "name": "_empty"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bool",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vestingPortionsUnlockTime"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Participation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amountOfTokensBuying"
            },
            {
             "type": "Identifier",
             "name": "amountAVAX"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            },
            {
             "type": "Identifier",
             "name": "_empty"
            },
            {
             "type": "Identifier",
             "name": "_empty"
            },
            {
             "type": "BooleanLiteral",
             "value": false
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [
            "amountBought",
            "amountAVAXPaid",
            "timeParticipated",
            "roundId",
            "isPortionWithdrawn",
            "isPortionWithdrawnToDexalot",
            "isParticipationBoosted",
            "boostedAmountAVAXPaid",
            "boostedAmountBought"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "amountBought"
            },
            {
             "type": "Identifier",
             "name": "amountAVAXPaid"
            },
            {
             "type": "Identifier",
             "name": "timeParticipated"
            },
            {
             "type": "Identifier",
             "name": "roundId"
            },
            {
             "type": "Identifier",
             "name": "isPortionWithdrawn"
            },
            {
             "type": "Identifier",
             "name": "isPortionWithdrawnToDexalot"
            },
            {
             "type": "Identifier",
             "name": "isParticipationBoosted"
            },
            {
             "type": "Identifier",
             "name": "boostedAmountAVAXPaid"
            },
            {
             "type": "Identifier",
             "name": "boostedAmountBought"
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "roundId"
           },
           "right": {
            "type": "Identifier",
            "name": "stakingRoundId"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "allocationStakingContract"
               },
               "memberName": "redistributeXava"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "Identifier",
                "name": "user"
               },
               {
                "type": "Identifier",
                "name": "amountXavaToBurn"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userToParticipation"
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "p"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "isParticipated"
            },
            "index": {
             "type": "Identifier",
             "name": "user"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "++",
           "subExpression": {
            "type": "Identifier",
            "name": "numberOfParticipants"
           },
           "isPrefix": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registrationFees"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registrationFees"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "registrationDepositAVAX"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "registrationDepositAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RegistrationAVAXRefunded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "registrationDepositAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokensSold"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "amountOfTokensBuying"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "boostParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateral"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only collateral.",
             "parts": [
              "Only collateral."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "roundId"
              },
              "right": {
               "type": "Identifier",
               "name": "boosterRoundId"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "roundId"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getCurrentRound"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid round.",
             "parts": [
              "Invalid round."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "isParticipated"
             },
             "index": {
              "type": "Identifier",
              "name": "user"
             }
            },
            {
             "type": "StringLiteral",
             "value": "User needs to participate first.",
             "parts": [
              "User needs to participate first."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "userToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "user"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "p"
              },
              "memberName": "isParticipationBoosted"
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Participation already boosted.",
             "parts": [
              "Participation already boosted."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "p"
            },
            "memberName": "isParticipationBoosted"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amountOfTokensBuying",
            "identifier": {
             "type": "Identifier",
             "name": "amountOfTokensBuying"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "value"
                }
               ],
               "isArray": false
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "BinaryOperation",
               "operator": "**",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "10",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "sale"
                      },
                      "memberName": "token"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "decimals"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "tokenPriceInAVAX"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "Identifier",
              "name": "amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Exceeding allowance.",
             "parts": [
              "Exceeding allowance."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "amountOfTokensToSell"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "totalTokensSold"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Not enough tokens to sell.",
             "parts": [
              "Not enough tokens to sell."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIdToRound"
               },
               "index": {
                "type": "Identifier",
                "name": "stakingRoundId"
               }
              },
              "memberName": "maxParticipation"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Crossing max participation.",
             "parts": [
              "Crossing max participation."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "p"
            },
            "memberName": "boostedAmountAVAXPaid"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "p"
            },
            "memberName": "boostedAmountBought"
           },
           "right": {
            "type": "Identifier",
            "name": "amountOfTokensBuying"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "p"
            },
            "memberName": "amountAVAXPaid"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "p"
              },
              "memberName": "amountAVAXPaid"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "p"
            },
            "memberName": "amountBought"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "p"
              },
              "memberName": "amountBought"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "totalTokensSold"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "totalTokensSold"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amountOfTokensBuying"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "totalAVAXRaised"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "totalAVAXRaised"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "allocationStakingContract"
            },
            "memberName": "redistributeXava"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "amountXavaToBurn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ParticipationBoosted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "boostedAmountAVAXPaid"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "boostedAmountBought"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawMultiplePortions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "portionIds",
         "identifier": {
          "type": "Identifier",
          "name": "portionIds"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalToWithdraw",
            "identifier": {
             "type": "Identifier",
             "name": "totalToWithdraw"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "userToParticipation"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "portionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "portionId",
               "identifier": {
                "type": "Identifier",
                "name": "portionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "portionIds"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "portionId"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "vestingPercentPerPortion"
                 },
                 "memberName": "length"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "UnaryOperation",
               "operator": "!",
               "subExpression": {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "p"
                 },
                 "memberName": "isPortionWithdrawn"
                },
                "index": {
                 "type": "Identifier",
                 "name": "portionId"
                }
               },
               "isPrefix": true
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "vestingPortionsUnlockTime"
                },
                "index": {
                 "type": "Identifier",
                 "name": "portionId"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "p"
                   },
                   "memberName": "isPortionWithdrawn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "portionId"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "amountWithdrawing",
                  "identifier": {
                   "type": "Identifier",
                   "name": "amountWithdrawing"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "p"
                     },
                     "memberName": "amountBought"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "vestingPercentPerPortion"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "portionId"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "portionVestingPrecision"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "totalToWithdraw"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "totalToWithdraw"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "amountWithdrawing"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "totalToWithdraw"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "token"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "totalToWithdraw"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "TokensWithdrawn"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "totalToWithdraw"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawMultiplePortionsToDexalot",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "portionIds",
         "identifier": {
          "type": "Identifier",
          "name": "portionIds"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "performDexalotChecks"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalToWithdraw",
            "identifier": {
             "type": "Identifier",
             "name": "totalToWithdraw"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "userToParticipation"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "portionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "portionId",
               "identifier": {
                "type": "Identifier",
                "name": "portionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "portionIds"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "portionId"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "vestingPercentPerPortion"
                 },
                 "memberName": "length"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "eligible",
               "identifier": {
                "type": "Identifier",
                "name": "eligible"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "p"
                },
                "memberName": "isPortionWithdrawn"
               },
               "index": {
                "type": "Identifier",
                "name": "portionId"
               }
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "portionId"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "vestingPortionsUnlockTime"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "portionId"
                     }
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "block"
                     },
                     "memberName": "timestamp"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "eligible"
                       },
                       "right": {
                        "type": "BooleanLiteral",
                        "value": true
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "eligible"
                    },
                    "right": {
                     "type": "BooleanLiteral",
                     "value": true
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "eligible"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "p"
                   },
                   "memberName": "isPortionWithdrawn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "portionId"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "p"
                   },
                   "memberName": "isPortionWithdrawnToDexalot"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "portionId"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "amountWithdrawing",
                  "identifier": {
                   "type": "Identifier",
                   "name": "amountWithdrawing"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "p"
                     },
                     "memberName": "amountBought"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "vestingPercentPerPortion"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "portionId"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "portionVestingPrecision"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "totalToWithdraw"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "totalToWithdraw"
                   },
                   "memberName": "add"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "amountWithdrawing"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "totalToWithdraw"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "token"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "totalToWithdraw"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "dexalotPortfolio"
               },
               "memberName": "depositTokenFromContract"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "getTokenSymbolBytes32"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "totalToWithdraw"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "TokensWithdrawnToDexalot"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "totalToWithdraw"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "safeTransferAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "to"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawEarningsAndLeftover",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "withdrawEarningsInternal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "withdrawLeftoverInternal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlySaleOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawEarnings",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "withdrawEarningsInternal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlySaleOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawLeftover",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "withdrawLeftoverInternal"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlySaleOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawEarningsInternal",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleEnd"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "earningsWithdrawn"
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "earningsWithdrawn"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalProfit",
            "identifier": {
             "type": "Identifier",
             "name": "totalProfit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "sale"
           },
           "memberName": "totalAVAXRaised"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "totalProfit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawLeftoverInternal",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleEnd"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "leftoverWithdrawn"
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "leftoverWithdrawn"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leftover",
            "identifier": {
             "type": "Identifier",
             "name": "leftover"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "amountOfTokensToSell"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "totalTokensSold"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "leftover"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "token"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "leftover"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawRegistrationFees",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "sale"
              },
              "memberName": "saleEnd"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Require that sale has ended.",
             "parts": [
              "Require that sale has ended."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "registrationFees"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "No earnings from registration fees.",
             "parts": [
              "No earnings from registration fees."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "registrationFees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registrationFees"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawUnusedFunds",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balanceAVAX",
            "identifier": {
             "type": "Identifier",
             "name": "balanceAVAX"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "memberName": "balance"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalReservedForRaise",
            "identifier": {
             "type": "Identifier",
             "name": "totalReservedForRaise"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "earningsWithdrawn"
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "totalAVAXRaised"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "balanceAVAX"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "totalReservedForRaise"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "registrationFees"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCurrentRound",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "roundIdToRound"
             },
             "index": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "roundIds"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            "memberName": "startTime"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "WhileStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "roundIds"
             },
             "memberName": "length"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "roundIdToRound"
              },
              "index": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "roundIds"
               },
               "index": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "i"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              }
             },
             "memberName": "startTime"
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "UnaryOperation",
              "operator": "++",
              "subExpression": {
               "type": "Identifier",
               "name": "i"
              },
              "isPrefix": false
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sale"
            },
            "memberName": "saleEnd"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "roundIds"
           },
           "index": {
            "type": "Identifier",
            "name": "i"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkRegistrationSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              },
              {
               "type": "Identifier",
               "name": "roundId"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "messageHash",
            "identifier": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "hash"
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "messageHash"
              },
              "memberName": "recover"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkParticipationSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "signatureExpirationTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "signatureExpirationTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              },
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "Identifier",
               "name": "amountXavaToBurn"
              },
              {
               "type": "Identifier",
               "name": "roundId"
              },
              {
               "type": "Identifier",
               "name": "signatureExpirationTimestamp"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "messageHash",
            "identifier": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "hash"
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "messageHash"
              },
              "memberName": "recover"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Participation"
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "userToParticipation"
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "amountBought"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "amountAVAXPaid"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "timeParticipated"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "roundId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "isPortionWithdrawn"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "isPortionWithdrawnToDexalot"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "isParticipationBoosted"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "boostedAmountBought"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "p"
             },
             "memberName": "boostedAmountAVAXPaid"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNumberOfRegisteredUsers",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "registration"
           },
           "memberName": "numberOfRegistrants"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVestingInfo",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "vestingPortionsUnlockTime"
            },
            {
             "type": "Identifier",
             "name": "vestingPercentPerPortion"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeStuckTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "token"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "token"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't withdraw sale token.",
             "parts": [
              "Can't withdraw sale token."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "token"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "beneficiary"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IERC20"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "token"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUpdateTokenPriceInAVAXParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_updateTokenPriceInAVAXPercentageThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "_updateTokenPriceInAVAXPercentageThreshold"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_updateTokenPriceInAVAXTimeLimit",
         "identifier": {
          "type": "Identifier",
          "name": "_updateTokenPriceInAVAXTimeLimit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "_updateTokenPriceInAVAXTimeLimit"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "_updateTokenPriceInAVAXPercentageThreshold"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't set zero value.",
             "parts": [
              "Can't set zero value."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_updateTokenPriceInAVAXPercentageThreshold"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "100",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Threshold can't be higher than 100%.",
             "parts": [
              "Threshold can't be higher than 100%."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "updateTokenPriceInAVAXPercentageThreshold"
           },
           "right": {
            "type": "Identifier",
            "name": "_updateTokenPriceInAVAXPercentageThreshold"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "updateTokenPriceInAVAXTimeLimit"
           },
           "right": {
            "type": "Identifier",
            "name": "_updateTokenPriceInAVAXTimeLimit"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyIfGateOpen",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "performDexalotChecks",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "supportsDexalotWithdraw"
            },
            {
             "type": "StringLiteral",
             "value": "Dexalot Portfolio not supported.",
             "parts": [
              "Dexalot Portfolio not supported."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "Identifier",
              "name": "dexalotUnlockTime"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Dexalot Portfolio not unlocked.",
             "parts": [
              "Dexalot Portfolio not unlocked."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTokenSymbolBytes32",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "symbol",
            "identifier": {
             "type": "Identifier",
             "name": "symbol"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20Metadata"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "sale"
                 },
                 "memberName": "token"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "symbol"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_symbol"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "symbol",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "32"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "closeGate",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "isCreated"
            },
            {
             "type": "StringLiteral",
             "value": "Sale not created.",
             "parts": [
              "Sale not created."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "sale"
                },
                "memberName": "token"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "Token not set.",
             "parts": [
              "Token not set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "sale"
             },
             "memberName": "tokensDeposited"
            },
            {
             "type": "StringLiteral",
             "value": "Tokens not deposited.",
             "parts": [
              "Tokens not deposited."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "updateTokenPriceInAVAXPercentageThreshold"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "updateTokenPriceInAVAXTimeLimit"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Params for updating AVAX price not set.",
             "parts": [
              "Params for updating AVAX price not set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registration"
               },
               "memberName": "registrationTimeStarts"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registration"
               },
               "memberName": "registrationTimeEnds"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "Registration params not set.",
             "parts": [
              "Registration params not set."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "gateClosed"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "GateClosed"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyAdmin",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyIfGateOpen",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/openzeppelin/TransparentUpgradeableProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.0 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "Proxy",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "_delegate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "delegatecall",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "implementation",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatasize",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "returndatacopy",
             "arguments": [
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "returndatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "result",
              "arguments": []
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "revert",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              },
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "return",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": null,
               "default": true
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_fallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_beforeFallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_delegate"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_implementation"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": true,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "_beforeFallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      }
     ],
     "kind": "abstract"
    },
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.2 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "Address",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "size",
            "identifier": {
             "type": "Identifier",
             "name": "size"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "size"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "extcodesize",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "account",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "size"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "sendValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": "payable"
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "balance"
             },
             "right": {
              "type": "Identifier",
              "name": "amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Address: insufficient balance",
             "parts": [
              "Address: insufficient balance"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "recipient"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "amount"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "StringLiteral",
             "value": "Address: unable to send value, recipient may have reverted",
             "parts": [
              "Address: unable to send value, recipient may have reverted"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "functionCall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "StringLiteral",
             "value": "Address: low-level call failed",
             "parts": [
              "Address: low-level call failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "functionCallWithValue"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionCallWithValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "functionCallWithValue"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "Identifier",
             "name": "value"
            },
            {
             "type": "StringLiteral",
             "value": "Address: low-level call with value failed",
             "parts": [
              "Address: low-level call with value failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionCallWithValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "balance"
             },
             "right": {
              "type": "Identifier",
              "name": "value"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Address: insufficient balance for call",
             "parts": [
              "Address: insufficient balance for call"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isContract"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "target"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Address: call to non-contract",
             "parts": [
              "Address: call to non-contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "returndata",
            "identifier": {
             "type": "Identifier",
             "name": "returndata"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "target"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyCallResult"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "Identifier",
             "name": "returndata"
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionStaticCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "functionStaticCall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "StringLiteral",
             "value": "Address: low-level static call failed",
             "parts": [
              "Address: low-level static call failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "functionStaticCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isContract"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "target"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Address: static call to non-contract",
             "parts": [
              "Address: static call to non-contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "returndata",
            "identifier": {
             "type": "Identifier",
             "name": "returndata"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "target"
            },
            "memberName": "staticcall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyCallResult"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "Identifier",
             "name": "returndata"
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "functionDelegateCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "functionDelegateCall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "StringLiteral",
             "value": "Address: low-level delegate call failed",
             "parts": [
              "Address: low-level delegate call failed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "functionDelegateCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isContract"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "target"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Address: delegate call to non-contract",
             "parts": [
              "Address: delegate call to non-contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "returndata",
            "identifier": {
             "type": "Identifier",
             "name": "returndata"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "target"
            },
            "memberName": "delegatecall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyCallResult"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "Identifier",
             "name": "returndata"
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifyCallResult",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "returndata",
         "identifier": {
          "type": "Identifier",
          "name": "returndata"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "success"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "returndata"
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "returndata"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "returndata_size"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returndata",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "32"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "returndata",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "returndata_size",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "revert"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "errorMessage"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    },
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.0 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "UpgradeableProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Proxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_logic",
         "identifier": {
          "type": "Identifier",
          "name": "_logic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_IMPLEMENTATION_SLOT"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "eip1967.proxy.implementation",
                     "parts": [
                      "eip1967.proxy.implementation"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setImplementation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_logic"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_data"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Address"
               },
               "memberName": "functionDelegateCall"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_logic"
               },
               {
                "type": "Identifier",
                "name": "_data"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "EventDefinition",
       "name": "Upgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_IMPLEMENTATION_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "_IMPLEMENTATION_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "_implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "impl",
         "identifier": {
          "type": "Identifier",
          "name": "impl"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_IMPLEMENTATION_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "impl"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setImplementation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Upgraded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_setImplementation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Address"
              },
              "memberName": "isContract"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "newImplementation"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "UpgradeableProxy: new implementation is not a contract",
             "parts": [
              "UpgradeableProxy: new implementation is not a contract"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_IMPLEMENTATION_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "newImplementation",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    },
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.0 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "TransparentUpgradeableProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UpgradeableProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_logic",
         "identifier": {
          "type": "Identifier",
          "name": "_logic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "admin_",
         "identifier": {
          "type": "Identifier",
          "name": "admin_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "_ADMIN_SLOT"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "keccak256"
                   },
                   "arguments": [
                    {
                     "type": "StringLiteral",
                     "value": "eip1967.proxy.admin",
                     "parts": [
                      "eip1967.proxy.admin"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "admin_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "UpgradeableProxy",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_logic"
          },
          {
           "type": "Identifier",
           "name": "_data"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "EventDefinition",
       "name": "AdminChanged",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "previousAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "previousAdmin"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_ADMIN_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "_ADMIN_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
        "subdenomination": null
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "ifAdmin",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_admin"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "Identifier",
              "name": "_"
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_fallback"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "admin_",
         "identifier": {
          "type": "Identifier",
          "name": "admin_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin_"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_admin"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation_",
         "identifier": {
          "type": "Identifier",
          "name": "implementation_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "implementation_"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_implementation"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "newAdmin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "TransparentUpgradeableProxy: new admin is the zero address",
             "parts": [
              "TransparentUpgradeableProxy: new admin is the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AdminChanged"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_admin"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "newAdmin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newAdmin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeToAndCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Address"
            },
            "memberName": "functionDelegateCall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ifAdmin",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "_admin",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "adm",
         "identifier": {
          "type": "Identifier",
          "name": "adm"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_ADMIN_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "adm"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_setAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newAdmin",
         "identifier": {
          "type": "Identifier",
          "name": "newAdmin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_ADMIN_SLOT"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "newAdmin",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_beforeFallback",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_admin"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
             "parts": [
              "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "_beforeFallback"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/math/SafeMath.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.6.0 <0.8.0"
    },
    {
     "type": "ContractDefinition",
     "name": "SafeMath",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "tryAdd",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "c"
           },
           "right": {
            "type": "Identifier",
            "name": "a"
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "Identifier",
             "name": "c"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "trySub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "b"
           },
           "right": {
            "type": "Identifier",
            "name": "a"
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "Identifier",
              "name": "a"
             },
             "right": {
              "type": "Identifier",
              "name": "b"
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryMul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": true
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "Identifier",
             "name": "c"
            },
            "right": {
             "type": "Identifier",
             "name": "a"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "Identifier",
             "name": "c"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryDiv",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "b"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "BinaryOperation",
             "operator": "/",
             "left": {
              "type": "Identifier",
              "name": "a"
             },
             "right": {
              "type": "Identifier",
              "name": "b"
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryMod",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "b"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "BinaryOperation",
             "operator": "%",
             "left": {
              "type": "Identifier",
              "name": "a"
             },
             "right": {
              "type": "Identifier",
              "name": "b"
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "c"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: addition overflow",
             "parts": [
              "SafeMath: addition overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: subtraction overflow",
             "parts": [
              "SafeMath: subtraction overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "Identifier",
               "name": "c"
              },
              "right": {
               "type": "Identifier",
               "name": "a"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "b"
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: multiplication overflow",
             "parts": [
              "SafeMath: multiplication overflow"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "div",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: division by zero",
             "parts": [
              "SafeMath: division by zero"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mod",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "SafeMath: modulo by zero",
             "parts": [
              "SafeMath: modulo by zero"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "%",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "div",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mod",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "errorMessage",
         "identifier": {
          "type": "Identifier",
          "name": "errorMessage"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "errorMessage"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "%",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/ISalesFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "ISalesFactory",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isSaleCreatedThroughFactory",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sale",
         "identifier": {
          "type": "Identifier",
          "name": "sale"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/IERC20Metadata.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "IERC20Metadata",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "decimals",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/IDexalotPortfolio.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "IDexalotPortfolio",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "depositTokenFromContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_from",
         "identifier": {
          "type": "Identifier",
          "name": "_from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/ICollateral.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "ICollateral",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "saleAutoBuyers",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sale",
         "identifier": {
          "type": "Identifier",
          "name": "sale"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "depositCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawCollateral",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalBalance",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/IAvalaunchSale.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "IAvalaunchSale",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "autoParticipate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "boostParticipation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountXavaToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "amountXavaToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "roundId",
         "identifier": {
          "type": "Identifier",
          "name": "roundId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/IAllocationStaking.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "IAllocationStaking",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "redistributeXava",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amountToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "_amountToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setTokensUnlockTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokensUnlockTime",
         "identifier": {
          "type": "Identifier",
          "name": "_tokensUnlockTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/interfaces/IAdmin.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ContractDefinition",
     "name": "IAdmin",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isAdmin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/farming/FarmingXava.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/math/SafeMath.sol",
      "parts": [
       "@openzeppelin/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/access/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/access/Ownable.sol",
      "parts": [
       "@openzeppelin/contracts/access/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "FarmingXava",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StructDefinition",
       "name": "UserInfo",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rewardDebt",
         "identifier": {
          "type": "Identifier",
          "name": "rewardDebt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "PoolInfo",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "lpToken",
         "identifier": {
          "type": "Identifier",
          "name": "lpToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lastRewardTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastRewardTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "accERC20PerShare",
         "identifier": {
          "type": "Identifier",
          "name": "accERC20PerShare"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalDeposits",
         "identifier": {
          "type": "Identifier",
          "name": "totalDeposits"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "erc20",
         "identifier": {
          "type": "Identifier",
          "name": "erc20"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "paidOut",
         "identifier": {
          "type": "Identifier",
          "name": "paidOut"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rewardPerSecond",
         "identifier": {
          "type": "Identifier",
          "name": "rewardPerSecond"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalRewards",
         "identifier": {
          "type": "Identifier",
          "name": "totalRewards"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "PoolInfo"
          },
          "length": null
         },
         "name": "poolInfo",
         "identifier": {
          "type": "Identifier",
          "name": "poolInfo"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "UserDefinedTypeName",
            "namePath": "UserInfo"
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "userInfo",
         "identifier": {
          "type": "Identifier",
          "name": "userInfo"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalAllocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "totalAllocPoint"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "startTimestamp"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "endTimestamp"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "Deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "EmergencyWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pid",
         "identifier": {
          "type": "Identifier",
          "name": "pid"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_erc20",
         "identifier": {
          "type": "Identifier",
          "name": "_erc20"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rewardPerSecond",
         "identifier": {
          "type": "Identifier",
          "name": "_rewardPerSecond"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "_startTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "erc20"
           },
           "right": {
            "type": "Identifier",
            "name": "_erc20"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rewardPerSecond"
           },
           "right": {
            "type": "Identifier",
            "name": "_rewardPerSecond"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "startTimestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "_startTimestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "endTimestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "_startTimestamp"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "poolLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "memberName": "length"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "fund",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "Identifier",
              "name": "endTimestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "fund: too late, the farm is closed",
             "parts": [
              "fund: too late, the farm is closed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "erc20"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "endTimestamp"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_amount"
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "rewardPerSecond"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalRewards"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalRewards"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "_allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_lpToken",
         "identifier": {
          "type": "Identifier",
          "name": "_lpToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_withUpdate",
         "identifier": {
          "type": "Identifier",
          "name": "_withUpdate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_withUpdate"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "massUpdatePools"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastRewardTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastRewardTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "startTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "startTimestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalAllocPoint"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalAllocPoint"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_allocPoint"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "poolInfo"
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "PoolInfo"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_lpToken"
              },
              {
               "type": "Identifier",
               "name": "_allocPoint"
              },
              {
               "type": "Identifier",
               "name": "lastRewardTimestamp"
              },
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              },
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [
              "lpToken",
              "allocPoint",
              "lastRewardTimestamp",
              "accERC20PerShare",
              "totalDeposits"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "lpToken"
              },
              {
               "type": "Identifier",
               "name": "allocPoint"
              },
              {
               "type": "Identifier",
               "name": "lastRewardTimestamp"
              },
              {
               "type": "Identifier",
               "name": "accERC20PerShare"
              },
              {
               "type": "Identifier",
               "name": "totalDeposits"
              }
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "set",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_allocPoint",
         "identifier": {
          "type": "Identifier",
          "name": "_allocPoint"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_withUpdate",
         "identifier": {
          "type": "Identifier",
          "name": "_withUpdate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_withUpdate"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "massUpdatePools"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalAllocPoint"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "totalAllocPoint"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "poolInfo"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "_pid"
                 }
                },
                "memberName": "allocPoint"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_allocPoint"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "poolInfo"
             },
             "index": {
              "type": "Identifier",
              "name": "_pid"
             }
            },
            "memberName": "allocPoint"
           },
           "right": {
            "type": "Identifier",
            "name": "_allocPoint"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposited",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "user"
           },
           "memberName": "amount"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "pending",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_user",
         "identifier": {
          "type": "Identifier",
          "name": "_user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_user"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "accERC20PerShare",
            "identifier": {
             "type": "Identifier",
             "name": "accERC20PerShare"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "accERC20PerShare"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "totalDeposits"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lastRewardTimestamp"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "lastTimestamp",
               "identifier": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "endTimestamp"
               }
              },
              "trueExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              },
              "falseExpression": {
               "type": "Identifier",
               "name": "endTimestamp"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "timestampToCompare",
               "identifier": {
                "type": "Identifier",
                "name": "timestampToCompare"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "lastRewardTimestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "endTimestamp"
               }
              },
              "trueExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "lastRewardTimestamp"
              },
              "falseExpression": {
               "type": "Identifier",
               "name": "endTimestamp"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "nrOfSeconds",
               "identifier": {
                "type": "Identifier",
                "name": "nrOfSeconds"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "timestampToCompare"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "erc20Reward",
               "identifier": {
                "type": "Identifier",
                "name": "erc20Reward"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "nrOfSeconds"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "rewardPerSecond"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pool"
                  },
                  "memberName": "allocPoint"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalAllocPoint"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "accERC20PerShare"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "accERC20PerShare"
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "erc20Reward"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "1e36",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "lpSupply"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalPending",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "startTimestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "endTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "endTimestamp"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "rewardPerSecond"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "startTimestamp"
               }
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "paidOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "massUpdatePools",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "pid",
             "identifier": {
              "type": "Identifier",
              "name": "pid"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "pid"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "pid"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "updatePool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "pid"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updatePool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "endTimestamp"
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "endTimestamp"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "lastTimestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "lastRewardTimestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "pool"
           },
           "memberName": "totalDeposits"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "lpSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "lastRewardTimestamp"
              },
              "right": {
               "type": "Identifier",
               "name": "lastTimestamp"
              }
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nrOfSeconds",
            "identifier": {
             "type": "Identifier",
             "name": "nrOfSeconds"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lastRewardTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "erc20Reward",
            "identifier": {
             "type": "Identifier",
             "name": "erc20Reward"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "nrOfSeconds"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "rewardPerSecond"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pool"
               },
               "memberName": "allocPoint"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalAllocPoint"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "accERC20PerShare"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "accERC20PerShare"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "erc20Reward"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1e36",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "div"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpSupply"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "lastRewardTimestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "pendingAmount",
               "identifier": {
                "type": "Identifier",
                "name": "pendingAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "user"
                    },
                    "memberName": "amount"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pool"
                    },
                    "memberName": "accERC20PerShare"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "div"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "1e36",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "rewardDebt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "erc20Transfer"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "pendingAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "accERC20PerShare"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1e36",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Deposit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "right": {
              "type": "Identifier",
              "name": "_amount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "withdraw: can't withdraw more than deposit",
             "parts": [
              "withdraw: can't withdraw more than deposit"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "updatePool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_pid"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pendingAmount",
            "identifier": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "user"
                 },
                 "memberName": "amount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pool"
                 },
                 "memberName": "accERC20PerShare"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1e36",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "rewardDebt"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "erc20Transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "pendingAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "user"
                },
                "memberName": "amount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pool"
                },
                "memberName": "accERC20PerShare"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1e36",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Withdraw"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "emergencyWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_pid",
         "identifier": {
          "type": "Identifier",
          "name": "_pid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PoolInfo"
            },
            "name": "pool",
            "identifier": {
             "type": "Identifier",
             "name": "pool"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolInfo"
           },
           "index": {
            "type": "Identifier",
            "name": "_pid"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "UserInfo"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "userInfo"
            },
            "index": {
             "type": "Identifier",
             "name": "_pid"
            }
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pool"
             },
             "memberName": "lpToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pool"
            },
            "memberName": "totalDeposits"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pool"
              },
              "memberName": "totalDeposits"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "user"
              },
              "memberName": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "EmergencyWithdraw"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_pid"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "user"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "rewardDebt"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "erc20Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "erc20"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "paidOut"
           },
           "right": {
            "type": "Identifier",
            "name": "_amount"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/farming/DevToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "../utils/Context.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../utils/Context.sol",
      "parts": [
       "../utils/Context.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../IERC20.sol",
      "parts": [
       "../IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../math/SafeMath.sol",
      "parts": [
       "../math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "DevToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Context"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "_balances",
         "identifier": {
          "type": "Identifier",
          "name": "_balances"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "_allowances",
         "identifier": {
          "type": "Identifier",
          "name": "_allowances"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_totalSupply"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_decimals",
         "identifier": {
          "type": "Identifier",
          "name": "_decimals"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name_",
         "identifier": {
          "type": "Identifier",
          "name": "name_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol_",
         "identifier": {
          "type": "Identifier",
          "name": "symbol_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupply_",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_name"
           },
           "right": {
            "type": "Identifier",
            "name": "name_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_symbol"
           },
           "right": {
            "type": "Identifier",
            "name": "symbol_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "decimals_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "totalSupply_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_allowances"
                },
                "index": {
                 "type": "Identifier",
                 "name": "sender"
                }
               },
               "index": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_msgSender"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "StringLiteral",
               "value": "ERC20: transfer amount exceeds allowance",
               "parts": [
                "ERC20: transfer amount exceeds allowance"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseAllowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "subtractedValue",
         "identifier": {
          "type": "Identifier",
          "name": "subtractedValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_approve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_msgSender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_allowances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_msgSender"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "Identifier",
                "name": "spender"
               }
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "subtractedValue"
              },
              {
               "type": "StringLiteral",
               "value": "ERC20: decreased allowance below zero",
               "parts": [
                "ERC20: decreased allowance below zero"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: transfer from the zero address",
             "parts": [
              "ERC20: transfer from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "recipient"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: transfer to the zero address",
             "parts": [
              "ERC20: transfer to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "sender"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "StringLiteral",
              "value": "ERC20: transfer amount exceeds balance",
              "parts": [
               "ERC20: transfer amount exceeds balance"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "recipient"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "recipient"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "sender"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "account"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: mint to the zero address",
             "parts": [
              "ERC20: mint to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_totalSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_totalSupply"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "account"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "account"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "account"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: burn from the zero address",
             "parts": [
              "ERC20: burn from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_balances"
            },
            "index": {
             "type": "Identifier",
             "name": "account"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "_balances"
              },
              "index": {
               "type": "Identifier",
               "name": "account"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "StringLiteral",
              "value": "ERC20: burn amount exceeds balance",
              "parts": [
               "ERC20: burn amount exceeds balance"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_totalSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_totalSupply"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "owner"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: approve from the zero address",
             "parts": [
              "ERC20: approve from the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "spender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "ERC20: approve to the zero address",
             "parts": [
              "ERC20: approve to the zero address"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_allowances"
             },
             "index": {
              "type": "Identifier",
              "name": "owner"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "spender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amount"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            },
            {
             "type": "Identifier",
             "name": "spender"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_setupDecimals",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "decimals_"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_name"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_allowances"
            },
            "index": {
             "type": "Identifier",
             "name": "owner"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "spender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_symbol"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "decimals",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_decimals"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_totalSupply"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_balances"
           },
           "index": {
            "type": "Identifier",
            "name": "account"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/airdrop/AirdropSale.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAdmin.sol",
      "parts": [
       "../interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../math/SafeMath.sol",
      "parts": [
       "../math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AirdropSale",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "ECDSA",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "airdropERC20s",
         "identifier": {
          "type": "Identifier",
          "name": "airdropERC20s"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "includesAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "includesAVAX"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "includesERC20s",
         "identifier": {
          "type": "Identifier",
          "name": "includesERC20s"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "tokenToTotalWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenToTotalWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "wasClaimed",
         "identifier": {
          "type": "Identifier",
          "name": "wasClaimed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "SentERC20",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SentAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_airdropERC20s",
         "identifier": {
          "type": "Identifier",
          "name": "_airdropERC20s"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_includesAVAX",
         "identifier": {
          "type": "Identifier",
          "name": "_includesAVAX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "_includesAVAX"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "includesAVAX"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_airdropERC20s"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "includesERC20s"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_airdropERC20s"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "!=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_airdropERC20s"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "airdropERC20s"
                  },
                  "memberName": "push"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_airdropERC20s"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amounts",
         "identifier": {
          "type": "Identifier",
          "name": "amounts"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "tx"
              },
              "memberName": "origin"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Require that message sender is tx-origin.",
             "parts": [
              "Require that message sender is tx-origin."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "includesAVAX"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "airdropERC20s"
                   },
                   "memberName": "length"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "amounts"
                 },
                 "memberName": "length"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Array size mismatch.",
                "parts": [
                 "Array size mismatch."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "airdropERC20s"
                 },
                 "memberName": "length"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "amounts"
                 },
                 "memberName": "length"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Array size mismatch.",
                "parts": [
                 "Array size mismatch."
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "beneficiary",
            "identifier": {
             "type": "Identifier",
             "name": "beneficiary"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hashedAmounts",
            "identifier": {
             "type": "Identifier",
             "name": "hashedAmounts"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "amounts"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "checkSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "hashedAmounts"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Not eligible to claim tokens!",
             "parts": [
              "Not eligible to claim tokens!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "wasClaimed"
              },
              "index": {
               "type": "Identifier",
               "name": "beneficiary"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Already claimed!",
             "parts": [
              "Already claimed!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "wasClaimed"
            },
            "index": {
             "type": "Identifier",
             "name": "beneficiary"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "startIndex",
            "identifier": {
             "type": "Identifier",
             "name": "startIndex"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "includesAVAX"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "safeTransferAVAX"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "beneficiary"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "amounts"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "startIndex"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "includesERC20s"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "Identifier",
               "name": "startIndex"
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "amounts"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "amounts"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                     },
                     "name": "j",
                     "identifier": {
                      "type": "Identifier",
                      "name": "j"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "i"
                     },
                     "memberName": "sub"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "startIndex"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool",
                      "stateMutability": null
                     },
                     "name": "status",
                     "identifier": {
                      "type": "Identifier",
                      "name": "status"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "IERC20"
                      },
                      "arguments": [
                       {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "airdropERC20s"
                        },
                        "index": {
                         "type": "Identifier",
                         "name": "j"
                        }
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "memberName": "transfer"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "beneficiary"
                     },
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "amounts"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "require"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "status"
                     },
                     {
                      "type": "StringLiteral",
                      "value": "Token transfer status is false.",
                      "parts": [
                       "Token transfer status is false."
                      ],
                      "isUnicode": [
                       false
                      ]
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "tokenToTotalWithdrawn"
                     },
                     "index": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "airdropERC20s"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     }
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "tokenToTotalWithdrawn"
                       },
                       "index": {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "airdropERC20s"
                        },
                        "index": {
                         "type": "Identifier",
                         "name": "j"
                        }
                       }
                      },
                      "memberName": "add"
                     },
                     "arguments": [
                      {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "amounts"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "i"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  },
                  {
                   "type": "EmitStatement",
                   "eventCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "SentERC20"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "beneficiary"
                     },
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "airdropERC20s"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     },
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "amounts"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSigner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hashedAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "hashedAmounts"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encode"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "hashedAmounts"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "messageHash",
            "identifier": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "hash"
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "memberName": "recover"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hashedAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "hashedAmounts"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getSigner"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "hashedAmounts"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "safeTransferAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "to"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "StringLiteral",
             "value": "AVAX transfer failed.",
             "parts": [
              "AVAX transfer failed."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SentAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/airdrop/AirdropAVAX.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAdmin.sol",
      "parts": [
       "../interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../math/SafeMath.sol",
      "parts": [
       "../math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AirdropAVAX",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "ECDSA",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": null,
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalTokensWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "wasClaimed",
         "identifier": {
          "type": "Identifier",
          "name": "wasClaimed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "SentAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "safeTransferAVAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "to"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "success"
            },
            {
             "type": "StringLiteral",
             "value": "AVAX transfer failed.",
             "parts": [
              "AVAX transfer failed."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "tx"
              },
              "memberName": "origin"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Require that message sender is tx-origin.",
             "parts": [
              "Require that message sender is tx-origin."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "beneficiary",
            "identifier": {
             "type": "Identifier",
             "name": "beneficiary"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "checkSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Not eligible to claim AVAX!",
             "parts": [
              "Not eligible to claim AVAX!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "wasClaimed"
              },
              "index": {
               "type": "Identifier",
               "name": "beneficiary"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Already claimed AVAX!",
             "parts": [
              "Already claimed AVAX!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "wasClaimed"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "safeTransferAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "beneficiary"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensWithdrawn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensWithdrawn"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "SentAVAX"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "beneficiary"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSigner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "messageHash",
            "identifier": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "hash"
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "memberName": "recover"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getSigner"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/airdrop/Airdrop.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.6.12"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/cryptography/ECDSA.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/cryptography/ECDSA.sol",
      "parts": [
       "@openzeppelin/contracts/cryptography/ECDSA.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/IAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/IAdmin.sol",
      "parts": [
       "../interfaces/IAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../math/SafeMath.sol",
      "parts": [
       "../math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Airdrop",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "ECDSA",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": null,
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "airdropToken",
         "identifier": {
          "type": "Identifier",
          "name": "airdropToken"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IAdmin"
         },
         "name": "admin",
         "identifier": {
          "type": "Identifier",
          "name": "admin"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalTokensWithdrawn",
         "identifier": {
          "type": "Identifier",
          "name": "totalTokensWithdrawn"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "wasClaimed",
         "identifier": {
          "type": "Identifier",
          "name": "wasClaimed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "TokensAirdropped",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_airdropToken",
         "identifier": {
          "type": "Identifier",
          "name": "_airdropToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_airdropToken"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "admin"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IAdmin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_admin"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "airdropToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_airdropToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "tx"
              },
              "memberName": "origin"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Require that message sender is tx-origin.",
             "parts": [
              "Require that message sender is tx-origin."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "beneficiary",
            "identifier": {
             "type": "Identifier",
             "name": "beneficiary"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "checkSignature"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "Not eligible to claim tokens!",
             "parts": [
              "Not eligible to claim tokens!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "wasClaimed"
              },
              "index": {
               "type": "Identifier",
               "name": "beneficiary"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Already claimed!",
             "parts": [
              "Already claimed!"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "wasClaimed"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "airdropToken"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "beneficiary"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "status"
            },
            {
             "type": "StringLiteral",
             "value": "Token transfer status is false.",
             "parts": [
              "Token transfer status is false."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "totalTokensWithdrawn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "totalTokensWithdrawn"
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "amount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokensAirdropped"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "beneficiary"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSigner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "messageHash",
            "identifier": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "hash"
            },
            "memberName": "toEthSignedMessageHash"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "messageHash"
            },
            "memberName": "recover"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "beneficiary",
         "identifier": {
          "type": "Identifier",
          "name": "beneficiary"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "admin"
            },
            "memberName": "isAdmin"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getSigner"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "signature"
              },
              {
               "type": "Identifier",
               "name": "beneficiary"
              },
              {
               "type": "Identifier",
               "name": "amount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]