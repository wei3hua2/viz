[
 {
  "path": "Oracle/IgniteOracle.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/access/AccessControl.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/access/AccessControl.sol",
      "parts": [
       "@openzeppelin/contracts/access/AccessControl.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccessControl",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccessControl"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/IJsonApi.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/IJsonApi.sol",
      "parts": [
       "./interfaces/IJsonApi.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IJsonApi",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IJsonApi"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/IJsonApiVerification.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/IJsonApiVerification.sol",
      "parts": [
       "./interfaces/IJsonApiVerification.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IJsonApiVerification",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IJsonApiVerification"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IConditionalTokens",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "prepareCondition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "reportPayouts",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "payouts",
         "identifier": {
          "type": "Identifier",
          "name": "payouts"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "IgniteOracle",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "AccessControl"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "VoteSubmitted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "voter",
         "identifier": {
          "type": "Identifier",
          "name": "voter"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "outcomeIdx",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIdx"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "VOTER_ROLE",
         "identifier": {
          "type": "Identifier",
          "name": "VOTER_ROLE"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "VOTER_ROLE",
            "parts": [
             "VOTER_ROLE"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "StringLiteral",
          "value": "VOTER_ROLE",
          "parts": [
           "VOTER_ROLE"
          ],
          "isUnicode": [
           false
          ]
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IConditionalTokens"
         },
         "name": "conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IJsonApiVerification"
         },
         "name": "verification",
         "identifier": {
          "type": "Identifier",
          "name": "verification"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EnumDefinition",
       "name": "Status",
       "members": [
        {
         "type": "EnumValue",
         "name": "INVALID"
        },
        {
         "type": "EnumValue",
         "name": "ACTIVE"
        },
        {
         "type": "EnumValue",
         "name": "VOTING"
        },
        {
         "type": "EnumValue",
         "name": "FINALIZED"
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Question",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Status"
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "automatic",
         "identifier": {
          "type": "Identifier",
          "name": "automatic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "apiSources",
         "identifier": {
          "type": "Identifier",
          "name": "apiSources"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "consensusPercent",
         "identifier": {
          "type": "Identifier",
          "name": "consensusPercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "resolutionTime",
         "identifier": {
          "type": "Identifier",
          "name": "resolutionTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "apiResolution",
         "identifier": {
          "type": "Identifier",
          "name": "apiResolution"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "winnerIdx",
         "identifier": {
          "type": "Identifier",
          "name": "winnerIdx"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "Question"
          },
          "valueName": null
         },
         "name": "question",
         "identifier": {
          "type": "Identifier",
          "name": "question"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "jqToQuestionId",
         "identifier": {
          "type": "Identifier",
          "name": "jqToQuestionId"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "jqProcessed",
         "identifier": {
          "type": "Identifier",
          "name": "jqProcessed"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "noOfVoters",
         "identifier": {
          "type": "Identifier",
          "name": "noOfVoters"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "hasVoted",
         "identifier": {
          "type": "Identifier",
          "name": "hasVoted"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "questionOutcomeVotes",
         "identifier": {
          "type": "Identifier",
          "name": "questionOutcomeVotes"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minVotes",
         "identifier": {
          "type": "Identifier",
          "name": "minVotes"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_admin",
         "identifier": {
          "type": "Identifier",
          "name": "_admin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_conditionalTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_verification",
         "identifier": {
          "type": "Identifier",
          "name": "_verification"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_minVotes",
         "identifier": {
          "type": "Identifier",
          "name": "_minVotes"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_conditionalTokens"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "NA not allowed",
             "parts": [
              "NA not allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "conditionalTokens"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IConditionalTokens"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_conditionalTokens"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_verification"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "NA not allowed",
             "parts": [
              "NA not allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "verification"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IJsonApiVerification"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_verification"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "_minVotes"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "3",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Min votes < 3",
             "parts": [
              "Min votes < 3"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "minVotes"
           },
           "right": {
            "type": "Identifier",
            "name": "_minVotes"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_admin"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "NA not allowed",
             "parts": [
              "NA not allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "DEFAULT_ADMIN_ROLE"
            },
            {
             "type": "Identifier",
             "name": "_admin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initializeQuestion",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "urlAr",
         "identifier": {
          "type": "Identifier",
          "name": "urlAr"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "string",
           "stateMutability": null
          },
          "length": null
         },
         "name": "postprocessJqAr",
         "identifier": {
          "type": "Identifier",
          "name": "postprocessJqAr"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "consensusPercent",
         "identifier": {
          "type": "Identifier",
          "name": "consensusPercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "resolutionTime",
         "identifier": {
          "type": "Identifier",
          "name": "resolutionTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "automatic",
         "identifier": {
          "type": "Identifier",
          "name": "automatic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "question"
               },
               "index": {
                "type": "Identifier",
                "name": "questionId"
               }
              },
              "memberName": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Status"
              },
              "memberName": "INVALID"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Question already initialized",
             "parts": [
              "Question already initialized"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "outcomeSlotCount < 2",
             "parts": [
              "outcomeSlotCount < 2"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "consensusPercent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "51",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "consensusPercent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "100",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "consensusPercent has to be in range 51-100",
             "parts": [
              "consensusPercent has to be in range 51-100"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "endTime"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "endTime has to be in the future.",
             "parts": [
              "endTime has to be in the future."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "resolutionTime"
             },
             "right": {
              "type": "Identifier",
              "name": "endTime"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Resolution time has to be later than endTime.",
             "parts": [
              "Resolution time has to be later than endTime."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "automatic"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "urlAr"
                 },
                 "memberName": "length"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "postprocessJqAr"
                 },
                 "memberName": "length"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Array mismatch",
                "parts": [
                 "Array mismatch"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "urlAr"
                 },
                 "memberName": "length"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "3",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "Oracle requires at least 3 API sources",
                "parts": [
                 "Oracle requires at least 3 API sources"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "question"
            },
            "index": {
             "type": "Identifier",
             "name": "questionId"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Question"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Status"
              },
              "memberName": "ACTIVE"
             },
             {
              "type": "Identifier",
              "name": "automatic"
             },
             {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "urlAr"
              },
              "memberName": "length"
             },
             {
              "type": "Identifier",
              "name": "consensusPercent"
             },
             {
              "type": "Identifier",
              "name": "endTime"
             },
             {
              "type": "Identifier",
              "name": "resolutionTime"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "outcomeSlotCount"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "type"
               },
               "arguments": [
                {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "max"
             }
            ],
            "names": [
             "status",
             "automatic",
             "outcomeSlotCount",
             "apiSources",
             "consensusPercent",
             "endTime",
             "resolutionTime",
             "apiResolution",
             "winnerIdx"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "status"
             },
             {
              "type": "Identifier",
              "name": "automatic"
             },
             {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             {
              "type": "Identifier",
              "name": "apiSources"
             },
             {
              "type": "Identifier",
              "name": "consensusPercent"
             },
             {
              "type": "Identifier",
              "name": "endTime"
             },
             {
              "type": "Identifier",
              "name": "resolutionTime"
             },
             {
              "type": "Identifier",
              "name": "apiResolution"
             },
             {
              "type": "Identifier",
              "name": "winnerIdx"
             }
            ]
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "prepareCondition"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "automatic"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "jqKey",
               "identifier": {
                "type": "Identifier",
                "name": "jqKey"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "urlAr"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "jqKey"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodePacked"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "urlAr"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "postprocessJqAr"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "jqToQuestionId"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "jqKey"
                    }
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "bytes32",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "jqKey duplicate",
                   "parts": [
                    "jqKey duplicate"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "jqToQuestionId"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "jqKey"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "questionId"
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "DEFAULT_ADMIN_ROLE"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "finalizeQuestion",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IJsonApi.Proof"
          },
          "length": null
         },
         "name": "proofs",
         "identifier": {
          "type": "Identifier",
          "name": "proofs"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "finalize",
         "identifier": {
          "type": "Identifier",
          "name": "finalize"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Question"
            },
            "name": "qData",
            "identifier": {
             "type": "Identifier",
             "name": "qData"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "question"
           },
           "index": {
            "type": "Identifier",
            "name": "questionId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "qData"
              },
              "memberName": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Status"
              },
              "memberName": "ACTIVE"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot finalize, status != ACTIVE",
             "parts": [
              "Cannot finalize, status != ACTIVE"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "qData"
              },
              "memberName": "endTime"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            },
            {
             "type": "StringLiteral",
             "value": "End time not reached",
             "parts": [
              "End time not reached"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "qData"
            },
            "memberName": "automatic"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "qData"
               },
               "memberName": "status"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Status"
               },
               "memberName": "VOTING"
              }
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "jqKey",
            "identifier": {
             "type": "Identifier",
             "name": "jqKey"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "proofs"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IJsonApi.Proof"
               },
               "name": "proof",
               "identifier": {
                "type": "Identifier",
                "name": "proof"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "proofs"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "jqKey"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "keccak256"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodePacked"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "proof"
                     },
                     "memberName": "data"
                    },
                    "memberName": "requestBody"
                   },
                   "memberName": "url"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "proof"
                     },
                     "memberName": "data"
                    },
                    "memberName": "requestBody"
                   },
                   "memberName": "postprocessJq"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "jqToQuestionId"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "jqKey"
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "questionId"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Proof for invalid questionId",
                "parts": [
                 "Proof for invalid questionId"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "UnaryOperation",
                "operator": "!",
                "subExpression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "jqProcessed"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "jqKey"
                 }
                },
                "isPrefix": true
               },
               {
                "type": "StringLiteral",
                "value": "Duplicate proof",
                "parts": [
                 "Duplicate proof"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "jqProcessed"
               },
               "index": {
                "type": "Identifier",
                "name": "jqKey"
               }
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "verification"
                 },
                 "memberName": "verifyJsonApi"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "proof"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "Invalid proof (provided)",
                "parts": [
                 "Invalid proof (provided)"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "outcomeIdx",
               "identifier": {
                "type": "Identifier",
                "name": "outcomeIdx"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "decode"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "proof"
                  },
                  "memberName": "data"
                 },
                 "memberName": "responseBody"
                },
                "memberName": "abi_encoded_data"
               },
               {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 }
                ],
                "isArray": false
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "qData"
                },
                "memberName": "apiResolution"
               },
               "index": {
                "type": "Identifier",
                "name": "outcomeIdx"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "finalize"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "winnerId",
               "identifier": {
                "type": "Identifier",
                "name": "winnerId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "type"
               },
               "arguments": [
                {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "max"
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "jqProcessedCount",
               "identifier": {
                "type": "Identifier",
                "name": "jqProcessedCount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "qData"
               },
               "memberName": "outcomeSlotCount"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "jqProcessedCount"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "qData"
                   },
                   "memberName": "apiResolution"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "qData"
                     },
                     "memberName": "apiResolution"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "100",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "qData"
                   },
                   "memberName": "apiSources"
                  }
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "qData"
                  },
                  "memberName": "consensusPercent"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "winnerId"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "winnerId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "type"
                },
                "arguments": [
                 {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "max"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "||",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                   "type": "Identifier",
                   "name": "jqProcessedCount"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "qData"
                   },
                   "memberName": "apiSources"
                  }
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "<=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "qData"
                   },
                   "memberName": "resolutionTime"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "block"
                   },
                   "memberName": "timestamp"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "qData"
                     },
                     "memberName": "status"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "Status"
                     },
                     "memberName": "VOTING"
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_finalizeAndReportPayout"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "questionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "winnerId"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "vote",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "outcomeIdx",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIdx"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Question"
            },
            "name": "qData",
            "identifier": {
             "type": "Identifier",
             "name": "qData"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "question"
           },
           "index": {
            "type": "Identifier",
            "name": "questionId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "qData"
              },
              "memberName": "status"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Status"
              },
              "memberName": "VOTING"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Cannot vote, status != VOTING",
             "parts": [
              "Cannot vote, status != VOTING"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "hasVoted"
               },
               "index": {
                "type": "Identifier",
                "name": "questionId"
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "Already voted",
             "parts": [
              "Already voted"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "hasVoted"
             },
             "index": {
              "type": "Identifier",
              "name": "questionId"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "outcomeIdx"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "qData"
              },
              "memberName": "outcomeSlotCount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Invalid outcomeIdx",
             "parts": [
              "Invalid outcomeIdx"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "questionOutcomeVotes"
             },
             "index": {
              "type": "Identifier",
              "name": "questionId"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "outcomeIdx"
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "questionOutcomeVotes"
              },
              "index": {
               "type": "Identifier",
               "name": "questionId"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "outcomeIdx"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "minVotes"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "BinaryOperation",
             "operator": "/",
             "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "questionOutcomeVotes"
                },
                "index": {
                 "type": "Identifier",
                 "name": "questionId"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "outcomeIdx"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "100",
               "subdenomination": null
              }
             },
             "right": {
              "type": "Identifier",
              "name": "noOfVoters"
             }
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "qData"
             },
             "memberName": "consensusPercent"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_finalizeAndReportPayout"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "questionId"
               },
               {
                "type": "Identifier",
                "name": "outcomeIdx"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "VoteSubmitted"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeIdx"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "VOTER_ROLE"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_finalizeAndReportPayout",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "winnerId",
         "identifier": {
          "type": "Identifier",
          "name": "winnerId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Question"
            },
            "name": "qData",
            "identifier": {
             "type": "Identifier",
             "name": "qData"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "question"
           },
           "index": {
            "type": "Identifier",
            "name": "questionId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "qData"
            },
            "memberName": "status"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Status"
            },
            "memberName": "FINALIZED"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "qData"
            },
            "memberName": "winnerIdx"
           },
           "right": {
            "type": "Identifier",
            "name": "winnerId"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "payouts",
            "identifier": {
             "type": "Identifier",
             "name": "payouts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "qData"
             },
             "memberName": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payouts"
            },
            "index": {
             "type": "Identifier",
             "name": "winnerId"
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "reportPayouts"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "payouts"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "grantRole",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "role",
         "identifier": {
          "type": "Identifier",
          "name": "role"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "role"
            },
            "right": {
             "type": "Identifier",
             "name": "VOTER_ROLE"
            }
           },
           "right": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "hasRole"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "VOTER_ROLE"
              },
              {
               "type": "Identifier",
               "name": "account"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "isPrefix": true
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "noOfVoters"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "role"
            },
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getRoleAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "role"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "revokeRole",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "role",
         "identifier": {
          "type": "Identifier",
          "name": "role"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "role"
            },
            "right": {
             "type": "Identifier",
             "name": "VOTER_ROLE"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hasRole"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "VOTER_ROLE"
             },
             {
              "type": "Identifier",
              "name": "account"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "Identifier",
               "name": "noOfVoters"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_revokeRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "role"
            },
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getRoleAdmin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "role"
            }
           ],
           "names": [],
           "identifiers": []
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "Oracle/interfaces/IJsonApiVerification.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "./IJsonApi.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IJsonApi.sol",
      "parts": [
       "./IJsonApi.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "IJsonApiVerification",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "verifyJsonApi",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IJsonApi.Proof"
         },
         "name": "_proof",
         "identifier": {
          "type": "Identifier",
          "name": "_proof"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_proved",
         "identifier": {
          "type": "Identifier",
          "name": "_proved"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "Oracle/interfaces/IJsonApi.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.7.6 <0.9"
    },
    {
     "type": "ContractDefinition",
     "name": "IJsonApi",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "Request",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "attestationType",
         "identifier": {
          "type": "Identifier",
          "name": "attestationType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "sourceId",
         "identifier": {
          "type": "Identifier",
          "name": "sourceId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "messageIntegrityCode",
         "identifier": {
          "type": "Identifier",
          "name": "messageIntegrityCode"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RequestBody"
         },
         "name": "requestBody",
         "identifier": {
          "type": "Identifier",
          "name": "requestBody"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Response",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "attestationType",
         "identifier": {
          "type": "Identifier",
          "name": "attestationType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "sourceId",
         "identifier": {
          "type": "Identifier",
          "name": "sourceId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint64",
          "stateMutability": null
         },
         "name": "votingRound",
         "identifier": {
          "type": "Identifier",
          "name": "votingRound"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint64",
          "stateMutability": null
         },
         "name": "lowestUsedTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lowestUsedTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RequestBody"
         },
         "name": "requestBody",
         "identifier": {
          "type": "Identifier",
          "name": "requestBody"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ResponseBody"
         },
         "name": "responseBody",
         "identifier": {
          "type": "Identifier",
          "name": "responseBody"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "Proof",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "merkleProof",
         "identifier": {
          "type": "Identifier",
          "name": "merkleProof"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Response"
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "RequestBody",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "url",
         "identifier": {
          "type": "Identifier",
          "name": "url"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "postprocessJq",
         "identifier": {
          "type": "Identifier",
          "name": "postprocessJq"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "abi_signature",
         "identifier": {
          "type": "Identifier",
          "name": "abi_signature"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "ResponseBody",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "abi_encoded_data",
         "identifier": {
          "type": "Identifier",
          "name": "abi_encoded_data"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "FPMM/FixedProductMarketMakerFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./../ConditionalTokens/ConditionalTokens.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./../ConditionalTokens/ConditionalTokens.sol",
      "parts": [
       "./../ConditionalTokens/ConditionalTokens.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConditionalTokens",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConditionalTokens"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./../ConditionalTokens/CTHelpers.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./../ConditionalTokens/CTHelpers.sol",
      "parts": [
       "./../ConditionalTokens/CTHelpers.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CTHelpers",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CTHelpers"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConstructedCloneFactory.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConstructedCloneFactory.sol",
      "parts": [
       "./ConstructedCloneFactory.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConstructedCloneFactory",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConstructedCloneFactory"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./FixedProductMarketMaker.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./FixedProductMarketMaker.sol",
      "parts": [
       "./FixedProductMarketMaker.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "FixedProductMarketMaker",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "FixedProductMarketMaker"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC1155Receiver",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC1155Receiver"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "FixedProductMarketMakerFactory",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConstructedCloneFactory"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "FixedProductMarketMakerCreation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "creator",
         "identifier": {
          "type": "Identifier",
          "name": "creator"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "FixedProductMarketMaker"
         },
         "name": "fixedProductMarketMaker",
         "identifier": {
          "type": "Identifier",
          "name": "fixedProductMarketMaker"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "conditionIds",
         "identifier": {
          "type": "Identifier",
          "name": "conditionIds"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fee",
         "identifier": {
          "type": "Identifier",
          "name": "fee"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "treasuryPercent",
         "identifier": {
          "type": "Identifier",
          "name": "treasuryPercent"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "treasury",
         "identifier": {
          "type": "Identifier",
          "name": "treasury"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "fundingThreshold"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "FixedProductMarketMaker"
         },
         "name": "implementationMaster",
         "identifier": {
          "type": "Identifier",
          "name": "implementationMaster"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "NAME",
         "identifier": {
          "type": "Identifier",
          "name": "NAME"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "FPMM Shares",
          "parts": [
           "FPMM Shares"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "FPMM Shares",
        "parts": [
         "FPMM Shares"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "SYMBOL",
         "identifier": {
          "type": "Identifier",
          "name": "SYMBOL"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "FPMM",
          "parts": [
           "FPMM"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "FPMM",
        "parts": [
         "FPMM"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "implementationMaster"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "FixedProductMarketMaker"
             }
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cloneConstructor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "consData",
         "identifier": {
          "type": "Identifier",
          "name": "consData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "conditionalTokens_",
            "identifier": {
             "type": "Identifier",
             "name": "conditionalTokens_"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ConditionalTokens"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "collateralToken_",
            "identifier": {
             "type": "Identifier",
             "name": "collateralToken_"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "conditionIds_",
            "identifier": {
             "type": "Identifier",
             "name": "conditionIds_"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "fee_",
            "identifier": {
             "type": "Identifier",
             "name": "fee_"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "treasuryPercent_",
            "identifier": {
             "type": "Identifier",
             "name": "treasuryPercent_"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "treasury_",
            "identifier": {
             "type": "Identifier",
             "name": "treasury_"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "fundingThreshold_",
            "identifier": {
             "type": "Identifier",
             "name": "fundingThreshold_"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "endTime_",
            "identifier": {
             "type": "Identifier",
             "name": "endTime_"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "consData"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "Identifier",
               "name": "ConditionalTokens"
              },
              {
               "type": "Identifier",
               "name": "IERC20"
              },
              {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "length": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              {
               "type": "Identifier",
               "name": "address"
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "FixedProductMarketMaker"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "initialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "NAME"
            },
            {
             "type": "Identifier",
             "name": "SYMBOL"
            },
            {
             "type": "Identifier",
             "name": "conditionalTokens_"
            },
            {
             "type": "Identifier",
             "name": "collateralToken_"
            },
            {
             "type": "Identifier",
             "name": "conditionIds_"
            },
            {
             "type": "Identifier",
             "name": "fee_"
            },
            {
             "type": "Identifier",
             "name": "treasuryPercent_"
            },
            {
             "type": "Identifier",
             "name": "treasury_"
            },
            {
             "type": "Identifier",
             "name": "fundingThreshold_"
            },
            {
             "type": "Identifier",
             "name": "endTime_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createFixedProductMarketMaker",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "conditionalTokens_",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken_",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "conditionIds_",
         "identifier": {
          "type": "Identifier",
          "name": "conditionIds_"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fee_",
         "identifier": {
          "type": "Identifier",
          "name": "fee_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "treasuryPercent_",
         "identifier": {
          "type": "Identifier",
          "name": "treasuryPercent_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "treasury_",
         "identifier": {
          "type": "Identifier",
          "name": "treasury_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingThreshold_",
         "identifier": {
          "type": "Identifier",
          "name": "fundingThreshold_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endTime_",
         "identifier": {
          "type": "Identifier",
          "name": "endTime_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "FixedProductMarketMaker"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "initData",
            "identifier": {
             "type": "Identifier",
             "name": "initData"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_generateInitData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "conditionalTokens_"
            },
            {
             "type": "Identifier",
             "name": "collateralToken_"
            },
            {
             "type": "Identifier",
             "name": "conditionIds_"
            },
            {
             "type": "Identifier",
             "name": "fee_"
            },
            {
             "type": "Identifier",
             "name": "treasuryPercent_"
            },
            {
             "type": "Identifier",
             "name": "treasury_"
            },
            {
             "type": "Identifier",
             "name": "fundingThreshold_"
            },
            {
             "type": "Identifier",
             "name": "endTime_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "FixedProductMarketMaker"
            },
            "name": "fpm",
            "identifier": {
             "type": "Identifier",
             "name": "fpm"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FixedProductMarketMaker"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "create2Clone"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "implementationMaster"
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "initData"
              },
              {
               "type": "Identifier",
               "name": "salt"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FixedProductMarketMakerCreation"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "fpm"
            },
            {
             "type": "Identifier",
             "name": "conditionalTokens_"
            },
            {
             "type": "Identifier",
             "name": "collateralToken_"
            },
            {
             "type": "Identifier",
             "name": "conditionIds_"
            },
            {
             "type": "Identifier",
             "name": "fee_"
            },
            {
             "type": "Identifier",
             "name": "treasuryPercent_"
            },
            {
             "type": "Identifier",
             "name": "treasury_"
            },
            {
             "type": "Identifier",
             "name": "fundingThreshold_"
            },
            {
             "type": "Identifier",
             "name": "endTime_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "fpm"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "predictFixedProductMarketMakerAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "predicted",
         "identifier": {
          "type": "Identifier",
          "name": "predicted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes20",
             "stateMutability": null
            },
            "name": "targetBytes",
            "identifier": {
             "type": "Identifier",
             "name": "targetBytes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "bytes20",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "implementationMaster"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "codeHash",
            "identifier": {
             "type": "Identifier",
             "name": "codeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "HexLiteral",
               "value": "3d602d80600a3d3981f3363d3d373d3d3d363d73",
               "parts": [
                "3d602d80600a3d3981f3363d3d373d3d3d363d73"
               ]
              },
              {
               "type": "Identifier",
               "name": "targetBytes"
              },
              {
               "type": "HexLiteral",
               "value": "5af43d82803e903d91602b57fd5bf3",
               "parts": [
                "5af43d82803e903d91602b57fd5bf3"
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "predicted"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint160",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodePacked"
                    },
                    "arguments": [
                     {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "ElementaryTypeName",
                       "name": "bytes1",
                       "stateMutability": null
                      },
                      "arguments": [
                       {
                        "type": "NumberLiteral",
                        "number": "0xff",
                        "subdenomination": null
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "address"
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "this"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     {
                      "type": "Identifier",
                      "name": "salt"
                     },
                     {
                      "type": "Identifier",
                      "name": "codeHash"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_generateInitData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "conditionalTokens_",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken_",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "conditionIds_",
         "identifier": {
          "type": "Identifier",
          "name": "conditionIds_"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fee_",
         "identifier": {
          "type": "Identifier",
          "name": "fee_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "treasuryPercent_",
         "identifier": {
          "type": "Identifier",
          "name": "treasuryPercent_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "treasury_",
         "identifier": {
          "type": "Identifier",
          "name": "treasury_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingThreshold_",
         "identifier": {
          "type": "Identifier",
          "name": "fundingThreshold_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endTime_",
         "identifier": {
          "type": "Identifier",
          "name": "endTime_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodeWithSelector"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "FixedProductMarketMaker"
              },
              "memberName": "initialize"
             },
             "memberName": "selector"
            },
            {
             "type": "Identifier",
             "name": "NAME"
            },
            {
             "type": "Identifier",
             "name": "SYMBOL"
            },
            {
             "type": "Identifier",
             "name": "conditionalTokens_"
            },
            {
             "type": "Identifier",
             "name": "collateralToken_"
            },
            {
             "type": "Identifier",
             "name": "conditionIds_"
            },
            {
             "type": "Identifier",
             "name": "fee_"
            },
            {
             "type": "Identifier",
             "name": "treasuryPercent_"
            },
            {
             "type": "Identifier",
             "name": "treasury_"
            },
            {
             "type": "Identifier",
             "name": "fundingThreshold_"
            },
            {
             "type": "Identifier",
             "name": "endTime_"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "FPMM/FixedProductMarketMakerData.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "./../ConditionalTokens/ConditionalTokens.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./../ConditionalTokens/ConditionalTokens.sol",
      "parts": [
       "./../ConditionalTokens/ConditionalTokens.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConditionalTokens",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConditionalTokens"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "FixedProductMarketMakerData",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "_balances",
         "identifier": {
          "type": "Identifier",
          "name": "_balances"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "_allowances",
         "identifier": {
          "type": "Identifier",
          "name": "_allowances"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "_totalSupply"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "_INTERFACE_ID_ERC165",
         "identifier": {
          "type": "Identifier",
          "name": "_INTERFACE_ID_ERC165"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x01ffc9a7",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x01ffc9a7",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes4",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "_supportedInterfaces",
         "identifier": {
          "type": "Identifier",
          "name": "_supportedInterfaces"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "FPMMFundingAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "funder",
         "identifier": {
          "type": "Identifier",
          "name": "funder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amountsAdded",
         "identifier": {
          "type": "Identifier",
          "name": "amountsAdded"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "sharesMinted",
         "identifier": {
          "type": "Identifier",
          "name": "sharesMinted"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMFundingRemoved",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "funder",
         "identifier": {
          "type": "Identifier",
          "name": "funder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amountsRemoved",
         "identifier": {
          "type": "Identifier",
          "name": "amountsRemoved"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "collateralRemovedFromFeePool",
         "identifier": {
          "type": "Identifier",
          "name": "collateralRemovedFromFeePool"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "sharesBurnt",
         "identifier": {
          "type": "Identifier",
          "name": "sharesBurnt"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMBuy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "buyer",
         "identifier": {
          "type": "Identifier",
          "name": "buyer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "investmentAmount",
         "identifier": {
          "type": "Identifier",
          "name": "investmentAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "feeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeTokensBought",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeTokensBought"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMSell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "seller",
         "identifier": {
          "type": "Identifier",
          "name": "seller"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "returnAmount",
         "identifier": {
          "type": "Identifier",
          "name": "returnAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "feeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeTokensSold",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeTokensSold"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "conditionIds",
         "identifier": {
          "type": "Identifier",
          "name": "conditionIds"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fee",
         "identifier": {
          "type": "Identifier",
          "name": "fee"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feePoolWeight",
         "identifier": {
          "type": "Identifier",
          "name": "feePoolWeight"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "treasury",
         "identifier": {
          "type": "Identifier",
          "name": "treasury"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "treasuryPercent",
         "identifier": {
          "type": "Identifier",
          "name": "treasuryPercent"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "fundingThreshold"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "outcomeSlotCounts",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCounts"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ElementaryTypeName",
            "name": "bytes32",
            "stateMutability": null
           },
           "length": null
          },
          "length": null
         },
         "name": "collectionIds",
         "identifier": {
          "type": "Identifier",
          "name": "collectionIds"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "positionIds",
         "identifier": {
          "type": "Identifier",
          "name": "positionIds"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "withdrawnFees",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawnFees"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalWithdrawnFees",
         "identifier": {
          "type": "Identifier",
          "name": "totalWithdrawnFees"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "FPMM/FixedProductMarketMaker.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./../ConditionalTokens/ConditionalTokens.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./../ConditionalTokens/ConditionalTokens.sol",
      "parts": [
       "./../ConditionalTokens/ConditionalTokens.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConditionalTokens",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConditionalTokens"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./../ConditionalTokens/CTHelpers.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./../ConditionalTokens/CTHelpers.sol",
      "parts": [
       "./../ConditionalTokens/CTHelpers.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CTHelpers",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CTHelpers"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC1155Receiver",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC1155Receiver"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "parts": [
       "@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "@openzeppelin/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "CeilDiv",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "ceildiv",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "x"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "x"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "Identifier",
                "name": "y"
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "x"
           },
           "right": {
            "type": "Identifier",
            "name": "y"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    },
    {
     "type": "ContractDefinition",
     "name": "FixedProductMarketMaker",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Upgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC1155Receiver"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint",
        "stateMutability": null
       },
       "libraryName": "CeilDiv",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "ONE",
         "identifier": {
          "type": "Identifier",
          "name": "ONE"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "**",
          "left": {
           "type": "NumberLiteral",
           "number": "10",
           "subdenomination": null
          },
          "right": {
           "type": "NumberLiteral",
           "number": "18",
           "subdenomination": null
          }
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "**",
        "left": {
         "type": "NumberLiteral",
         "number": "10",
         "subdenomination": null
        },
        "right": {
         "type": "NumberLiteral",
         "number": "18",
         "subdenomination": null
        }
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "conditionalTokens"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "conditionIds",
         "identifier": {
          "type": "Identifier",
          "name": "conditionIds"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fee",
         "identifier": {
          "type": "Identifier",
          "name": "fee"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feePoolWeight",
         "identifier": {
          "type": "Identifier",
          "name": "feePoolWeight"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "treasury",
         "identifier": {
          "type": "Identifier",
          "name": "treasury"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "treasuryPercent",
         "identifier": {
          "type": "Identifier",
          "name": "treasuryPercent"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "fundingThreshold"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "percentUL",
         "identifier": {
          "type": "Identifier",
          "name": "percentUL"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "10000",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "10000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "outcomeSlotCounts",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCounts"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ElementaryTypeName",
            "name": "bytes32",
            "stateMutability": null
           },
           "length": null
          },
          "length": null
         },
         "name": "collectionIds",
         "identifier": {
          "type": "Identifier",
          "name": "collectionIds"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "positionIds",
         "identifier": {
          "type": "Identifier",
          "name": "positionIds"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "withdrawnFees",
         "identifier": {
          "type": "Identifier",
          "name": "withdrawnFees"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalWithdrawnFees",
         "identifier": {
          "type": "Identifier",
          "name": "totalWithdrawnFees"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "fundingAmountTotal",
         "identifier": {
          "type": "Identifier",
          "name": "fundingAmountTotal"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "FPMMFundingAdded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "funder",
         "identifier": {
          "type": "Identifier",
          "name": "funder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amountsAdded",
         "identifier": {
          "type": "Identifier",
          "name": "amountsAdded"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "sharesMinted",
         "identifier": {
          "type": "Identifier",
          "name": "sharesMinted"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMFundingRemoved",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "funder",
         "identifier": {
          "type": "Identifier",
          "name": "funder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amountsRemoved",
         "identifier": {
          "type": "Identifier",
          "name": "amountsRemoved"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "collateralRemovedFromFeePool",
         "identifier": {
          "type": "Identifier",
          "name": "collateralRemovedFromFeePool"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "sharesBurnt",
         "identifier": {
          "type": "Identifier",
          "name": "sharesBurnt"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMBuy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "buyer",
         "identifier": {
          "type": "Identifier",
          "name": "buyer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "investmentAmount",
         "identifier": {
          "type": "Identifier",
          "name": "investmentAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "feeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeTokensBought",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeTokensBought"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "FPMMSell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "seller",
         "identifier": {
          "type": "Identifier",
          "name": "seller"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "returnAmount",
         "identifier": {
          "type": "Identifier",
          "name": "returnAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "feeAmount",
         "identifier": {
          "type": "Identifier",
          "name": "feeAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeTokensSold",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeTokensSold"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol",
         "identifier": {
          "type": "Identifier",
          "name": "symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ConditionalTokens"
         },
         "name": "_conditionalTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_conditionalTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "_collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_conditionIds",
         "identifier": {
          "type": "Identifier",
          "name": "_conditionIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_fee",
         "identifier": {
          "type": "Identifier",
          "name": "_fee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_treasuryPercent",
         "identifier": {
          "type": "Identifier",
          "name": "_treasuryPercent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_treasury",
         "identifier": {
          "type": "Identifier",
          "name": "_treasury"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_fundingThreshold",
         "identifier": {
          "type": "Identifier",
          "name": "_fundingThreshold"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_endTime",
         "identifier": {
          "type": "Identifier",
          "name": "_endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "conditionalTokens"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "already initialized",
             "parts": [
              "already initialized"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_treasuryPercent"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "10000",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "treasury percent must be less than or equal to 10000",
             "parts": [
              "treasury percent must be less than or equal to 10000"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "_fee"
             },
             "right": {
              "type": "Identifier",
              "name": "ONE"
             }
            },
            {
             "type": "StringLiteral",
             "value": "fee must be less than or equal to ONE",
             "parts": [
              "fee must be less than or equal to ONE"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "name"
            },
            {
             "type": "Identifier",
             "name": "symbol"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "conditionalTokens"
           },
           "right": {
            "type": "Identifier",
            "name": "_conditionalTokens"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collateralToken"
           },
           "right": {
            "type": "Identifier",
            "name": "_collateralToken"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "conditionIds"
           },
           "right": {
            "type": "Identifier",
            "name": "_conditionIds"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fee"
           },
           "right": {
            "type": "Identifier",
            "name": "_fee"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "treasuryPercent"
           },
           "right": {
            "type": "Identifier",
            "name": "_treasuryPercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "treasury"
           },
           "right": {
            "type": "Identifier",
            "name": "_treasury"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fundingThreshold"
           },
           "right": {
            "type": "Identifier",
            "name": "_fundingThreshold"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "endTime"
           },
           "right": {
            "type": "Identifier",
            "name": "_endTime"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "outcomeSlotCounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_conditionIds"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_conditionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "count",
               "identifier": {
                "type": "Identifier",
                "name": "count"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_conditionalTokens"
               },
               "memberName": "getOutcomeSlotCount"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_conditionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "outcomeSlotCounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "count"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collectionIds"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "length": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_conditionIds"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_recordCollectionIDsForAllConditions"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_conditionIds"
             },
             "memberName": "length"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_recordCollectionIDsForAllConditions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "conditionsLeft",
         "identifier": {
          "type": "Identifier",
          "name": "conditionsLeft"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "conditionsLeft"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "positionId",
               "identifier": {
                "type": "Identifier",
                "name": "positionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "CTHelpers"
               },
               "memberName": "getPositionId"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateralToken"
               },
               {
                "type": "Identifier",
                "name": "parentCollectionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "positionIds"
               },
               "memberName": "push"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "positionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "UnaryOperation",
           "operator": "--",
           "subExpression": {
            "type": "Identifier",
            "name": "conditionsLeft"
           },
           "isPrefix": false
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeSlotCount",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "outcomeSlotCounts"
           },
           "index": {
            "type": "Identifier",
            "name": "conditionsLeft"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "collectionIds"
             },
             "index": {
              "type": "Identifier",
              "name": "conditionsLeft"
             }
            },
            "memberName": "push"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "outcomeSlotCount"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "newCollectionId",
               "identifier": {
                "type": "Identifier",
                "name": "newCollectionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "CTHelpers"
               },
               "memberName": "getCollectionId"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "parentCollectionId"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "conditionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "conditionsLeft"
                }
               },
               {
                "type": "BinaryOperation",
                "operator": "<<",
                "left": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                },
                "right": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_recordCollectionIDsForAllConditions"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "conditionsLeft"
               },
               {
                "type": "Identifier",
                "name": "newCollectionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getPoolBalances",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            },
            "name": "thises",
            "identifier": {
             "type": "Identifier",
             "name": "thises"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "address",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "positionIds"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "positionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "thises"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "balanceOfBatch"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "thises"
            },
            {
             "type": "Identifier",
             "name": "positionIds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "generateBasicPartition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "partition",
         "identifier": {
          "type": "Identifier",
          "name": "partition"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "partition"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "outcomeSlotCount"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "partition"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<<",
               "left": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               },
               "right": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "splitPositionThroughAllConditions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionIds"
            },
            "memberName": "length"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "--",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "partition",
               "identifier": {
                "type": "Identifier",
                "name": "partition"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "generateBasicPartition"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "outcomeSlotCounts"
                },
                "index": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "collectionIds"
                },
                "index": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "conditionalTokens"
                  },
                  "memberName": "splitPosition"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "collateralToken"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "collectionIds"
                    },
                    "index": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "i"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "j"
                   }
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "conditionIds"
                   },
                   "index": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "i"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  },
                  {
                   "type": "Identifier",
                   "name": "partition"
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mergePositionsThroughAllConditions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "partition",
               "identifier": {
                "type": "Identifier",
                "name": "partition"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "generateBasicPartition"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "outcomeSlotCounts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "collectionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "conditionalTokens"
                  },
                  "memberName": "mergePositions"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "collateralToken"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "collectionIds"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "j"
                   }
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "conditionIds"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  {
                   "type": "Identifier",
                   "name": "partition"
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addFunding",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "addedFunds",
         "identifier": {
          "type": "Identifier",
          "name": "addedFunds"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "distributionHint",
         "identifier": {
          "type": "Identifier",
          "name": "distributionHint"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "addedFunds"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "funding must be non-zero",
             "parts": [
              "funding must be non-zero"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "sendBackAmounts",
            "identifier": {
             "type": "Identifier",
             "name": "sendBackAmounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "positionIds"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "poolShareSupply",
            "identifier": {
             "type": "Identifier",
             "name": "poolShareSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "mintAmount",
            "identifier": {
             "type": "Identifier",
             "name": "mintAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "poolShareSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "distributionHint"
                 },
                 "memberName": "length"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "cannot use distribution hint after initial funding",
                "parts": [
                 "cannot use distribution hint after initial funding"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "poolBalances",
               "identifier": {
                "type": "Identifier",
                "name": "poolBalances"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getPoolBalances"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "poolWeight",
               "identifier": {
                "type": "Identifier",
                "name": "poolWeight"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "poolBalances"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "poolWeight"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "poolBalances"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "poolWeight"
                  },
                  "right": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "poolBalances"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 }
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "poolBalances"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  },
                  "name": "remaining",
                  "identifier": {
                   "type": "Identifier",
                   "name": "remaining"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": "/",
                 "left": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "Identifier",
                     "name": "addedFunds"
                    },
                    "right": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "poolBalances"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   }
                  ],
                  "isArray": false
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "poolWeight"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "sendBackAmounts"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "addedFunds"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "remaining"
                  }
                 }
                }
               }
              ]
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "mintAmount"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "addedFunds"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "poolShareSupply"
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "Identifier",
                "name": "poolWeight"
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "distributionHint"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "distributionHint"
                    },
                    "memberName": "length"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "positionIds"
                    },
                    "memberName": "length"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "hint length off",
                   "parts": [
                    "hint length off"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  },
                  "name": "maxHint",
                  "identifier": {
                   "type": "Identifier",
                   "name": "maxHint"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint",
                    "stateMutability": null
                   },
                   "name": "i",
                   "identifier": {
                    "type": "Identifier",
                    "name": "i"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "distributionHint"
                  },
                  "memberName": "length"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "isPrefix": false
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "maxHint"
                    },
                    "right": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "distributionHint"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   },
                   "trueBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "maxHint"
                     },
                     "right": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "distributionHint"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    }
                   },
                   "falseBody": null
                  }
                 ]
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint",
                    "stateMutability": null
                   },
                   "name": "i",
                   "identifier": {
                    "type": "Identifier",
                    "name": "i"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "distributionHint"
                  },
                  "memberName": "length"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "isPrefix": false
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                     },
                     "name": "remaining",
                     "identifier": {
                      "type": "Identifier",
                      "name": "remaining"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "*",
                       "left": {
                        "type": "Identifier",
                        "name": "addedFunds"
                       },
                       "right": {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "distributionHint"
                        },
                        "index": {
                         "type": "Identifier",
                         "name": "i"
                        }
                       }
                      }
                     ],
                     "isArray": false
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "maxHint"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "require"
                    },
                    "arguments": [
                     {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                       "type": "Identifier",
                       "name": "remaining"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     },
                     {
                      "type": "StringLiteral",
                      "value": "must hint a valid distribution",
                      "parts": [
                       "must hint a valid distribution"
                      ],
                      "isUnicode": [
                       false
                      ]
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "sendBackAmounts"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "addedFunds"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "remaining"
                     }
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "mintAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "addedFunds"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "addedFunds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "forceApprove"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "conditionalTokens"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "addedFunds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "splitPositionThroughAllConditions"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "addedFunds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "mintAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "safeBatchTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "positionIds"
            },
            {
             "type": "Identifier",
             "name": "sendBackAmounts"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "sendBackAmounts"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "sendBackAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "addedFunds"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "sendBackAmounts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "fundingAmountTotal"
           },
           "right": {
            "type": "Identifier",
            "name": "addedFunds"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FPMMFundingAdded"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "sendBackAmounts"
            },
            {
             "type": "Identifier",
             "name": "mintAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "removeFunding",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "sharesToBurn",
         "identifier": {
          "type": "Identifier",
          "name": "sharesToBurn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "conditionalTokens"
                  },
                  "memberName": "payoutDenominator"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "conditionIds"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "cannot remove funding before condition is resolved",
                "parts": [
                 "cannot remove funding before condition is resolved"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "poolBalances",
            "identifier": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getPoolBalances"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "sendAmounts",
            "identifier": {
             "type": "Identifier",
             "name": "sendAmounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "poolBalances"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "poolShareSupply",
            "identifier": {
             "type": "Identifier",
             "name": "poolShareSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "sendAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "poolBalances"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "sharesToBurn"
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "Identifier",
                "name": "poolShareSupply"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "collateralRemovedFromFeePool",
            "identifier": {
             "type": "Identifier",
             "name": "collateralRemovedFromFeePool"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "sharesToBurn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collateralRemovedFromFeePool"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "collateralRemovedFromFeePool"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "collateralToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "safeBatchTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "positionIds"
            },
            {
             "type": "Identifier",
             "name": "sendAmounts"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FPMMFundingRemoved"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "sendAmounts"
            },
            {
             "type": "Identifier",
             "name": "collateralRemovedFromFeePool"
            },
            {
             "type": "Identifier",
             "name": "sharesToBurn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "buy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "investmentAmount",
         "identifier": {
          "type": "Identifier",
          "name": "investmentAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "minOutcomeTokensToBuy",
         "identifier": {
          "type": "Identifier",
          "name": "minOutcomeTokensToBuy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "canTrade"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "trading not allowed",
             "parts": [
              "trading not allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "Identifier",
                  "name": "investmentAmount"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "100",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "Identifier",
               "name": "fundingAmountTotal"
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "amount can be up to 10% of fundingAmountTotal",
             "parts": [
              "amount can be up to 10% of fundingAmountTotal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeTokensToBuy",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeTokensToBuy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcBuyAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "investmentAmount"
            },
            {
             "type": "Identifier",
             "name": "outcomeIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "outcomeTokensToBuy"
             },
             "right": {
              "type": "Identifier",
              "name": "minOutcomeTokensToBuy"
             }
            },
            {
             "type": "StringLiteral",
             "value": "minimum buy amount not reached",
             "parts": [
              "minimum buy amount not reached"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "investmentAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "feeAmount",
            "identifier": {
             "type": "Identifier",
             "name": "feeAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "Identifier",
               "name": "investmentAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "fee"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "Identifier",
            "name": "ONE"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "feePoolWeight"
           },
           "right": {
            "type": "Identifier",
            "name": "feeAmount"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "investmentAmountMinusFees",
            "identifier": {
             "type": "Identifier",
             "name": "investmentAmountMinusFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "investmentAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "feeAmount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "forceApprove"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "conditionalTokens"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "investmentAmountMinusFees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "splitPositionThroughAllConditions"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "investmentAmountMinusFees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "positionIds"
             },
             "index": {
              "type": "Identifier",
              "name": "outcomeIndex"
             }
            },
            {
             "type": "Identifier",
             "name": "outcomeTokensToBuy"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FPMMBuy"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "investmentAmount"
            },
            {
             "type": "Identifier",
             "name": "feeAmount"
            },
            {
             "type": "Identifier",
             "name": "outcomeIndex"
            },
            {
             "type": "Identifier",
             "name": "outcomeTokensToBuy"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "sell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "returnAmount",
         "identifier": {
          "type": "Identifier",
          "name": "returnAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "maxOutcomeTokensToSell",
         "identifier": {
          "type": "Identifier",
          "name": "maxOutcomeTokensToSell"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "canTrade"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "trading not allowed",
             "parts": [
              "trading not allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "Identifier",
                  "name": "returnAmount"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "100",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "Identifier",
               "name": "fundingAmountTotal"
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "amount can be up to 10% of fundingAmountTotal",
             "parts": [
              "amount can be up to 10% of fundingAmountTotal"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeTokensToSell",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeTokensToSell"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcSellAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "returnAmount"
            },
            {
             "type": "Identifier",
             "name": "outcomeIndex"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "outcomeTokensToSell"
             },
             "right": {
              "type": "Identifier",
              "name": "maxOutcomeTokensToSell"
             }
            },
            {
             "type": "StringLiteral",
             "value": "maximum sell amount exceeded",
             "parts": [
              "maximum sell amount exceeded"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "conditionalTokens"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "positionIds"
             },
             "index": {
              "type": "Identifier",
              "name": "outcomeIndex"
             }
            },
            {
             "type": "Identifier",
             "name": "outcomeTokensToSell"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "feeAmount",
            "identifier": {
             "type": "Identifier",
             "name": "feeAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "Identifier",
               "name": "returnAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "fee"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "ONE"
              },
              "right": {
               "type": "Identifier",
               "name": "fee"
              }
             }
            ],
            "isArray": false
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "feePoolWeight"
           },
           "right": {
            "type": "Identifier",
            "name": "feeAmount"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "returnAmountPlusFees",
            "identifier": {
             "type": "Identifier",
             "name": "returnAmountPlusFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "Identifier",
            "name": "returnAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "feeAmount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "mergePositionsThroughAllConditions"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "returnAmountPlusFees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "collateralToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "returnAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "FPMMSell"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "returnAmount"
            },
            {
             "type": "Identifier",
             "name": "feeAmount"
            },
            {
             "type": "Identifier",
             "name": "outcomeIndex"
            },
            {
             "type": "Identifier",
             "name": "outcomeTokensToSell"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "calcBuyAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "investmentAmount",
         "identifier": {
          "type": "Identifier",
          "name": "investmentAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "outcomeIndex"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "positionIds"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "invalid outcome index",
             "parts": [
              "invalid outcome index"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "poolBalances",
            "identifier": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getPoolBalances"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "investmentAmountMinusFees",
            "identifier": {
             "type": "Identifier",
             "name": "investmentAmountMinusFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "investmentAmount"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "investmentAmount"
               },
               "right": {
                "type": "Identifier",
                "name": "fee"
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "Identifier",
             "name": "ONE"
            }
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "buyTokenPoolBalance",
            "identifier": {
             "type": "Identifier",
             "name": "buyTokenPoolBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolBalances"
           },
           "index": {
            "type": "Identifier",
            "name": "outcomeIndex"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "endingOutcomeBalance",
            "identifier": {
             "type": "Identifier",
             "name": "endingOutcomeBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "buyTokenPoolBalance"
           },
           "right": {
            "type": "Identifier",
            "name": "ONE"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeIndex"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  },
                  "name": "poolBalance",
                  "identifier": {
                   "type": "Identifier",
                   "name": "poolBalance"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "poolBalances"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "endingOutcomeBalance"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "Identifier",
                    "name": "endingOutcomeBalance"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "poolBalance"
                   }
                  },
                  "right": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "+",
                     "left": {
                      "type": "Identifier",
                      "name": "poolBalance"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "investmentAmountMinusFees"
                     }
                    }
                   ],
                   "isArray": false
                  }
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "endingOutcomeBalance"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "must have non-zero balances",
             "parts": [
              "must have non-zero balances"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "buyTokenPoolBalance"
            },
            "right": {
             "type": "Identifier",
             "name": "investmentAmountMinusFees"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "Identifier",
             "name": "endingOutcomeBalance"
            },
            "right": {
             "type": "Identifier",
             "name": "ONE"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawFees",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rawAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rawAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "Identifier",
             "name": "feePoolWeight"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "account"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pendingAmount",
            "identifier": {
             "type": "Identifier",
             "name": "pendingAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "rawAmount"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "withdrawnFees"
            },
            "index": {
             "type": "Identifier",
             "name": "account"
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "pendingAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "withdrawnFees"
               },
               "index": {
                "type": "Identifier",
                "name": "account"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "rawAmount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "totalWithdrawnFees"
              },
              "right": {
               "type": "Identifier",
               "name": "pendingAmount"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "treasuryAmount",
               "identifier": {
                "type": "Identifier",
                "name": "treasuryAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "pendingAmount"
               },
               "right": {
                "type": "Identifier",
                "name": "treasuryPercent"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "percentUL"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "collateralToken"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "treasury"
               },
               {
                "type": "Identifier",
                "name": "treasuryAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "userAmount",
               "identifier": {
                "type": "Identifier",
                "name": "userAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "pendingAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "treasuryAmount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "collateralToken"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "account"
               },
               {
                "type": "Identifier",
                "name": "userAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "feesWithdrawableBy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rawAmount",
            "identifier": {
             "type": "Identifier",
             "name": "rawAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "Identifier",
             "name": "feePoolWeight"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "account"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rawAmount"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "rawAmount"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "withdrawnFees"
             },
             "index": {
              "type": "Identifier",
              "name": "account"
             }
            }
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "treasuryAmount",
            "identifier": {
             "type": "Identifier",
             "name": "treasuryAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "Identifier",
             "name": "rawAmount"
            },
            "right": {
             "type": "Identifier",
             "name": "treasuryPercent"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "percentUL"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "rawAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "treasuryAmount"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcSellAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "returnAmount",
         "identifier": {
          "type": "Identifier",
          "name": "returnAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeIndex",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "outcomeIndex"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "positionIds"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "invalid outcome index",
             "parts": [
              "invalid outcome index"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "poolBalances",
            "identifier": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getPoolBalances"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "returnAmountPlusFees",
            "identifier": {
             "type": "Identifier",
             "name": "returnAmountPlusFees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "Identifier",
             "name": "returnAmount"
            },
            "right": {
             "type": "Identifier",
             "name": "ONE"
            }
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "ONE"
              },
              "right": {
               "type": "Identifier",
               "name": "fee"
              }
             }
            ],
            "isArray": false
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "sellTokenPoolBalance",
            "identifier": {
             "type": "Identifier",
             "name": "sellTokenPoolBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "poolBalances"
           },
           "index": {
            "type": "Identifier",
            "name": "outcomeIndex"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "endingOutcomeBalance",
            "identifier": {
             "type": "Identifier",
             "name": "endingOutcomeBalance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "sellTokenPoolBalance"
           },
           "right": {
            "type": "Identifier",
            "name": "ONE"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "poolBalances"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeIndex"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  },
                  "name": "poolBalance",
                  "identifier": {
                   "type": "Identifier",
                   "name": "poolBalance"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "poolBalances"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "endingOutcomeBalance"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "Identifier",
                    "name": "endingOutcomeBalance"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "poolBalance"
                   }
                  },
                  "right": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "poolBalance"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "returnAmountPlusFees"
                     }
                    }
                   ],
                   "isArray": false
                  }
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "endingOutcomeBalance"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "must have non-zero balances",
             "parts": [
              "must have non-zero balances"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "returnAmountPlusFees"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "/",
             "left": {
              "type": "Identifier",
              "name": "endingOutcomeBalance"
             },
             "right": {
              "type": "Identifier",
              "name": "ONE"
             }
            }
           },
           "right": {
            "type": "Identifier",
            "name": "sellTokenPoolBalance"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "canTrade",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "Identifier",
             "name": "fundingAmountTotal"
            },
            "right": {
             "type": "Identifier",
             "name": "fundingThreshold"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "endTime"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_update",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "from"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "withdrawFees"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "from"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "totalSupply",
            "identifier": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "withdrawnFeesTransfer",
            "identifier": {
             "type": "Identifier",
             "name": "withdrawnFeesTransfer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "totalSupply"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "amount"
           },
           "falseExpression": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "Identifier",
              "name": "feePoolWeight"
             },
             "right": {
              "type": "Identifier",
              "name": "amount"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "totalSupply"
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "from"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "withdrawnFees"
               },
               "index": {
                "type": "Identifier",
                "name": "from"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "withdrawnFees"
                },
                "index": {
                 "type": "Identifier",
                 "name": "from"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "totalWithdrawnFees"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "totalWithdrawnFees"
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "feePoolWeight"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "feePoolWeight"
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "to"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "withdrawnFees"
               },
               "index": {
                "type": "Identifier",
                "name": "to"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "withdrawnFees"
                },
                "index": {
                 "type": "Identifier",
                 "name": "to"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "totalWithdrawnFees"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "totalWithdrawnFees"
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "feePoolWeight"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "feePoolWeight"
               },
               "right": {
                "type": "Identifier",
                "name": "withdrawnFeesTransfer"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "_update"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "onERC1155Received",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "operator",
         "identifier": {
          "type": "Identifier",
          "name": "operator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "id",
         "identifier": {
          "type": "Identifier",
          "name": "id"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "this"
            },
            "memberName": "onERC1155Received"
           },
           "memberName": "selector"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "onERC1155BatchReceived",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "operator",
         "identifier": {
          "type": "Identifier",
          "name": "operator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ids",
         "identifier": {
          "type": "Identifier",
          "name": "ids"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "values",
         "identifier": {
          "type": "Identifier",
          "name": "values"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "this"
            },
            "memberName": "onERC1155BatchReceived"
           },
           "memberName": "selector"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "supportsInterface",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "interfaceId",
         "identifier": {
          "type": "Identifier",
          "name": "interfaceId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "interfaceId"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "type"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "IERC1155Receiver"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "interfaceId"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "interfaceId"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "type"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "IERC165"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "interfaceId"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getFeePoolWeight",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "feePoolWeight"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "FPMM/ConstructedCloneFactory.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ContractDefinition",
     "name": "ConstructedCloneFactory",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "CreateError",
       "parameters": []
      },
      {
       "type": "FunctionDefinition",
       "name": "_create2Clone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes20",
             "stateMutability": null
            },
            "name": "targetBytes",
            "identifier": {
             "type": "Identifier",
             "name": "targetBytes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "bytes20",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "clone"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "clone",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "clone",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x14"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "targetBytes",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "clone",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x28"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create2",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "clone",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x37"
               },
               {
                "type": "AssemblyCall",
                "functionName": "salt",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "CreateError"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_clone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes20",
             "stateMutability": null
            },
            "name": "targetBytes",
            "identifier": {
             "type": "Identifier",
             "name": "targetBytes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "bytes20",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "clone"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "clone",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "clone",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x14"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "targetBytes",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "clone",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x28"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "clone",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x37"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "CreateError"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createClone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "constructorData",
         "identifier": {
          "type": "Identifier",
          "name": "constructorData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "instance"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_clone"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "target"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "ok",
            "identifier": {
             "type": "Identifier",
             "name": "ok"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "instance"
            },
            "memberName": "call"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "constructorData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "ok"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "CreateError"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "create2Clone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "constructorData",
         "identifier": {
          "type": "Identifier",
          "name": "constructorData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "instance"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_create2Clone"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "target"
             },
             {
              "type": "Identifier",
              "name": "salt"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "ok",
            "identifier": {
             "type": "Identifier",
             "name": "ok"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "instance"
            },
            "memberName": "call"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "constructorData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "ok"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "CreateError"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "ConditionalTokens/ConditionalTokens.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC1155/ERC1155.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./CTHelpers.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./CTHelpers.sol",
      "parts": [
       "./CTHelpers.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ConditionalTokens",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC1155"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ERC1155",
         "arguments": [
          {
           "type": "StringLiteral",
           "value": "",
           "parts": [
            ""
           ],
           "isUnicode": [
            false
           ]
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "ConditionPreparation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ConditionResolution",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "payoutNumerators",
         "identifier": {
          "type": "Identifier",
          "name": "payoutNumerators"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "PositionSplit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "stakeholder",
         "identifier": {
          "type": "Identifier",
          "name": "stakeholder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "partition",
         "identifier": {
          "type": "Identifier",
          "name": "partition"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "PositionsMerge",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "stakeholder",
         "identifier": {
          "type": "Identifier",
          "name": "stakeholder"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "partition",
         "identifier": {
          "type": "Identifier",
          "name": "partition"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "PayoutRedemption",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "redeemer",
         "identifier": {
          "type": "Identifier",
          "name": "redeemer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "indexSets",
         "identifier": {
          "type": "Identifier",
          "name": "indexSets"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "payout",
         "identifier": {
          "type": "Identifier",
          "name": "payout"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
           },
           "length": null
          },
          "valueName": null
         },
         "name": "payoutNumerators",
         "identifier": {
          "type": "Identifier",
          "name": "payoutNumerators"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "payoutDenominator",
         "identifier": {
          "type": "Identifier",
          "name": "payoutDenominator"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "prepareCondition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "256",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "too many outcome slots",
             "parts": [
              "too many outcome slots"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "there should be more than one outcome slot",
             "parts": [
              "there should be more than one outcome slot"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "conditionId",
            "identifier": {
             "type": "Identifier",
             "name": "conditionId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "CTHelpers"
            },
            "memberName": "getConditionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oracle"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "payoutNumerators"
               },
               "index": {
                "type": "Identifier",
                "name": "conditionId"
               }
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "condition already prepared",
             "parts": [
              "condition already prepared"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutNumerators"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ConditionPreparation"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "Identifier",
             "name": "oracle"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "reportPayouts",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "payouts",
         "identifier": {
          "type": "Identifier",
          "name": "payouts"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeSlotCount",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "payouts"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "there should be more than one outcome slot",
             "parts": [
              "there should be more than one outcome slot"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "conditionId",
            "identifier": {
             "type": "Identifier",
             "name": "conditionId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "CTHelpers"
            },
            "memberName": "getConditionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "payoutNumerators"
               },
               "index": {
                "type": "Identifier",
                "name": "conditionId"
               }
              },
              "memberName": "length"
             },
             "right": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             }
            },
            {
             "type": "StringLiteral",
             "value": "condition not prepared or found",
             "parts": [
              "condition not prepared or found"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "payoutDenominator"
              },
              "index": {
               "type": "Identifier",
               "name": "conditionId"
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "payout denominator already set",
             "parts": [
              "payout denominator already set"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "den",
            "identifier": {
             "type": "Identifier",
             "name": "den"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "outcomeSlotCount"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "num",
               "identifier": {
                "type": "Identifier",
                "name": "num"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "payouts"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "den"
              },
              "right": {
               "type": "Identifier",
               "name": "num"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "payoutNumerators"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "conditionId"
                  }
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "StringLiteral",
                "value": "payout numerator already set",
                "parts": [
                 "payout numerator already set"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutNumerators"
                },
                "index": {
                 "type": "Identifier",
                 "name": "conditionId"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "num"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "den"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "payout is all zeroes",
             "parts": [
              "payout is all zeroes"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutDenominator"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "den"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ConditionResolution"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "payoutNumerators"
             },
             "index": {
              "type": "Identifier",
              "name": "conditionId"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "splitPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "partition",
         "identifier": {
          "type": "Identifier",
          "name": "partition"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "partition"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "got empty or singleton partition",
             "parts": [
              "got empty or singleton partition"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeSlotCount",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutNumerators"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "condition not prepared yet",
             "parts": [
              "condition not prepared yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "fullIndexSet",
            "identifier": {
             "type": "Identifier",
             "name": "fullIndexSet"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "<<",
              "left": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeSlotCount"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "freeIndexSet",
            "identifier": {
             "type": "Identifier",
             "name": "freeIndexSet"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "fullIndexSet"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "positionIds",
            "identifier": {
             "type": "Identifier",
             "name": "positionIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "partition"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "amounts",
            "identifier": {
             "type": "Identifier",
             "name": "amounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "partition"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "partition"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "indexSet",
               "identifier": {
                "type": "Identifier",
                "name": "indexSet"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "partition"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "fullIndexSet"
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "got invalid index set",
                "parts": [
                 "got invalid index set"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "indexSet"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "freeIndexSet"
                   }
                  }
                 ],
                 "isArray": false
                },
                "right": {
                 "type": "Identifier",
                 "name": "indexSet"
                }
               },
               {
                "type": "StringLiteral",
                "value": "partition not disjoint",
                "parts": [
                 "partition not disjoint"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "^=",
              "left": {
               "type": "Identifier",
               "name": "freeIndexSet"
              },
              "right": {
               "type": "Identifier",
               "name": "indexSet"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "positionIds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "CTHelpers"
                },
                "memberName": "getPositionId"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "collateralToken"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "CTHelpers"
                  },
                  "memberName": "getCollectionId"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "parentCollectionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "conditionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "indexSet"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "amounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "amount"
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "freeIndexSet"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "parentCollectionId"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    "memberName": "transferFrom"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "msg"
                     },
                     "memberName": "sender"
                    },
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "this"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    {
                     "type": "Identifier",
                     "name": "amount"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "StringLiteral",
                   "value": "could not receive collateral tokens",
                   "parts": [
                    "could not receive collateral tokens"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_burn"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "CTHelpers"
                    },
                    "memberName": "getPositionId"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    {
                     "type": "Identifier",
                     "name": "parentCollectionId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_burn"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "CTHelpers"
                 },
                 "memberName": "getPositionId"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "collateralToken"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "CTHelpers"
                   },
                   "memberName": "getCollectionId"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "parentCollectionId"
                   },
                   {
                    "type": "Identifier",
                    "name": "conditionId"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "^",
                    "left": {
                     "type": "Identifier",
                     "name": "fullIndexSet"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "freeIndexSet"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mintBatch"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "positionIds"
            },
            {
             "type": "Identifier",
             "name": "amounts"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "PositionSplit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            },
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "Identifier",
             "name": "partition"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mergePositions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "partition",
         "identifier": {
          "type": "Identifier",
          "name": "partition"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "partition"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "got empty or singleton partition",
             "parts": [
              "got empty or singleton partition"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeSlotCount",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutNumerators"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "condition not prepared yet",
             "parts": [
              "condition not prepared yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "fullIndexSet",
            "identifier": {
             "type": "Identifier",
             "name": "fullIndexSet"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "<<",
              "left": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeSlotCount"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "freeIndexSet",
            "identifier": {
             "type": "Identifier",
             "name": "freeIndexSet"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "fullIndexSet"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "positionIds",
            "identifier": {
             "type": "Identifier",
             "name": "positionIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "partition"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            },
            "name": "amounts",
            "identifier": {
             "type": "Identifier",
             "name": "amounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "partition"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "partition"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "indexSet",
               "identifier": {
                "type": "Identifier",
                "name": "indexSet"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "partition"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "fullIndexSet"
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "got invalid index set",
                "parts": [
                 "got invalid index set"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "indexSet"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "freeIndexSet"
                   }
                  }
                 ],
                 "isArray": false
                },
                "right": {
                 "type": "Identifier",
                 "name": "indexSet"
                }
               },
               {
                "type": "StringLiteral",
                "value": "partition not disjoint",
                "parts": [
                 "partition not disjoint"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "^=",
              "left": {
               "type": "Identifier",
               "name": "freeIndexSet"
              },
              "right": {
               "type": "Identifier",
               "name": "indexSet"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "positionIds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "CTHelpers"
                },
                "memberName": "getPositionId"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "collateralToken"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "CTHelpers"
                  },
                  "memberName": "getCollectionId"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "parentCollectionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "conditionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "indexSet"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "amounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "amount"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burnBatch"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "positionIds"
            },
            {
             "type": "Identifier",
             "name": "amounts"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "freeIndexSet"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "parentCollectionId"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    "memberName": "transfer"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "msg"
                     },
                     "memberName": "sender"
                    },
                    {
                     "type": "Identifier",
                     "name": "amount"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "StringLiteral",
                   "value": "could not send collateral tokens",
                   "parts": [
                    "could not send collateral tokens"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_mint"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "CTHelpers"
                    },
                    "memberName": "getPositionId"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    {
                     "type": "Identifier",
                     "name": "parentCollectionId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "",
                   "parts": [
                    ""
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_mint"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "CTHelpers"
                 },
                 "memberName": "getPositionId"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "collateralToken"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "CTHelpers"
                   },
                   "memberName": "getCollectionId"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "parentCollectionId"
                   },
                   {
                    "type": "Identifier",
                    "name": "conditionId"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "^",
                    "left": {
                     "type": "Identifier",
                     "name": "fullIndexSet"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "freeIndexSet"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "amount"
               },
               {
                "type": "StringLiteral",
                "value": "",
                "parts": [
                 ""
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "PositionsMerge"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            },
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "Identifier",
             "name": "partition"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "redeemPositions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "length": null
         },
         "name": "indexSets",
         "identifier": {
          "type": "Identifier",
          "name": "indexSets"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "den",
            "identifier": {
             "type": "Identifier",
             "name": "den"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "payoutDenominator"
           },
           "index": {
            "type": "Identifier",
            "name": "conditionId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "den"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "result for condition not received yet",
             "parts": [
              "result for condition not received yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "outcomeSlotCount",
            "identifier": {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutNumerators"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "outcomeSlotCount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "condition not prepared yet",
             "parts": [
              "condition not prepared yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "totalPayout",
            "identifier": {
             "type": "Identifier",
             "name": "totalPayout"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "fullIndexSet",
            "identifier": {
             "type": "Identifier",
             "name": "fullIndexSet"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "<<",
              "left": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeSlotCount"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "indexSets"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "indexSet",
               "identifier": {
                "type": "Identifier",
                "name": "indexSet"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "indexSets"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "indexSet"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "fullIndexSet"
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "got invalid index set",
                "parts": [
                 "got invalid index set"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "positionId",
               "identifier": {
                "type": "Identifier",
                "name": "positionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "CTHelpers"
               },
               "memberName": "getPositionId"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateralToken"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "CTHelpers"
                 },
                 "memberName": "getCollectionId"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "parentCollectionId"
                 },
                 {
                  "type": "Identifier",
                  "name": "conditionId"
                 },
                 {
                  "type": "Identifier",
                  "name": "indexSet"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "payoutNumerator",
               "identifier": {
                "type": "Identifier",
                "name": "payoutNumerator"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "outcomeSlotCount"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": false
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "indexSet"
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "<<",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "j"
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  ],
                  "isArray": false
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                     "type": "Identifier",
                     "name": "payoutNumerator"
                    },
                    "right": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "payoutNumerators"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "conditionId"
                      }
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "payoutStake",
               "identifier": {
                "type": "Identifier",
                "name": "payoutStake"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "balanceOf"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "positionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "payoutStake"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "totalPayout"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "*",
                     "left": {
                      "type": "Identifier",
                      "name": "payoutStake"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "payoutNumerator"
                     }
                    }
                   ],
                   "isArray": false
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "den"
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_burn"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "Identifier",
                   "name": "positionId"
                  },
                  {
                   "type": "Identifier",
                   "name": "payoutStake"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "totalPayout"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "parentCollectionId"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    "memberName": "transfer"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "msg"
                     },
                     "memberName": "sender"
                    },
                    {
                     "type": "Identifier",
                     "name": "totalPayout"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "StringLiteral",
                   "value": "could not transfer payout to message sender",
                   "parts": [
                    "could not transfer payout to message sender"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_mint"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "CTHelpers"
                    },
                    "memberName": "getPositionId"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "collateralToken"
                    },
                    {
                     "type": "Identifier",
                     "name": "parentCollectionId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "totalPayout"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "",
                   "parts": [
                    ""
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "PayoutRedemption"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            },
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "Identifier",
             "name": "indexSets"
            },
            {
             "type": "Identifier",
             "name": "totalPayout"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getOutcomeSlotCount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payoutNumerators"
            },
            "index": {
             "type": "Identifier",
             "name": "conditionId"
            }
           },
           "memberName": "length"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getConditionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "CTHelpers"
            },
            "memberName": "getConditionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oracle"
            },
            {
             "type": "Identifier",
             "name": "questionId"
            },
            {
             "type": "Identifier",
             "name": "outcomeSlotCount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCollectionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "indexSet",
         "identifier": {
          "type": "Identifier",
          "name": "indexSet"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "CTHelpers"
            },
            "memberName": "getCollectionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            },
            {
             "type": "Identifier",
             "name": "conditionId"
            },
            {
             "type": "Identifier",
             "name": "indexSet"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "collectionId",
         "identifier": {
          "type": "Identifier",
          "name": "collectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "CTHelpers"
            },
            "memberName": "getPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "collectionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "supportsInterface",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "interfaceId",
         "identifier": {
          "type": "Identifier",
          "name": "interfaceId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "supportsInterface"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "interfaceId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ERC1155"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "ConditionalTokens/CTHelpers.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.26"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "CTHelpers",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getConditionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracle",
         "identifier": {
          "type": "Identifier",
          "name": "oracle"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "questionId",
         "identifier": {
          "type": "Identifier",
          "name": "questionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "outcomeSlotCount",
         "identifier": {
          "type": "Identifier",
          "name": "outcomeSlotCount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "oracle"
              },
              {
               "type": "Identifier",
               "name": "questionId"
              },
              {
               "type": "Identifier",
               "name": "outcomeSlotCount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "P",
         "identifier": {
          "type": "Identifier",
          "name": "P"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "21888242871839275222246405745257275088696311157297823662689037894645226208583",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "21888242871839275222246405745257275088696311157297823662689037894645226208583",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "B",
         "identifier": {
          "type": "Identifier",
          "name": "B"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "3",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "3",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "sqrt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "p",
            "identifier": {
             "type": "Identifier",
             "name": "p"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "P"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "y"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "z"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "z"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "z"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyBlock",
               "operations": [
                {
                 "type": "AssemblyLocalDefinition",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "w"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "t",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "t",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "w"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "w"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "w"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "w"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "t"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mulmod",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "t",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "w",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "p",
                      "arguments": []
                     }
                    ]
                   }
                  }
                 ]
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "y"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "x",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "t"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "z"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mulmod",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "t",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "p",
                    "arguments": []
                   }
                  ]
                 }
                }
               ]
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "z"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "z"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "x",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "p",
                  "arguments": []
                 }
                ]
               }
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "y",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "x"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "y"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mulmod",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "y",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "x",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "p",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCollectionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "parentCollectionId",
         "identifier": {
          "type": "Identifier",
          "name": "parentCollectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "conditionId",
         "identifier": {
          "type": "Identifier",
          "name": "conditionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "indexSet",
         "identifier": {
          "type": "Identifier",
          "name": "indexSet"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "x1",
            "identifier": {
             "type": "Identifier",
             "name": "x1"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "conditionId"
                },
                {
                 "type": "Identifier",
                 "name": "indexSet"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "odd",
            "identifier": {
             "type": "Identifier",
             "name": "odd"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "BinaryOperation",
            "operator": ">>",
            "left": {
             "type": "Identifier",
             "name": "x1"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "255",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "y1",
            "identifier": {
             "type": "Identifier",
             "name": "y1"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "yy",
            "identifier": {
             "type": "Identifier",
             "name": "yy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "DoWhileStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "mulmod"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "y1"
             },
             {
              "type": "Identifier",
              "name": "y1"
             },
             {
              "type": "Identifier",
              "name": "P"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "yy"
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "x1"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "addmod"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x1"
                },
                {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                },
                {
                 "type": "Identifier",
                 "name": "P"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "yy"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "addmod"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mulmod"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "x1"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "mulmod"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x1"
                    },
                    {
                     "type": "Identifier",
                     "name": "x1"
                    },
                    {
                     "type": "Identifier",
                     "name": "P"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "P"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "B"
                },
                {
                 "type": "Identifier",
                 "name": "P"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "y1"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "sqrt"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "yy"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "Identifier",
             "name": "odd"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BinaryOperation",
              "operator": "%",
              "left": {
               "type": "Identifier",
               "name": "y1"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "odd"
             },
             "isPrefix": true
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BinaryOperation",
              "operator": "%",
              "left": {
               "type": "Identifier",
               "name": "y1"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "=",
            "left": {
             "type": "Identifier",
             "name": "y1"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "Identifier",
              "name": "P"
             },
             "right": {
              "type": "Identifier",
              "name": "y1"
             }
            }
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "x2",
            "identifier": {
             "type": "Identifier",
             "name": "x2"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "parentCollectionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "x2"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "odd"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "BinaryOperation",
                "operator": ">>",
                "left": {
                 "type": "Identifier",
                 "name": "x2"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "254",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "x2"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "<<",
                  "left": {
                   "type": "Identifier",
                   "name": "x2"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "2",
                   "subdenomination": null
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "yy"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "addmod"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mulmod"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "x2"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "mulmod"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x2"
                    },
                    {
                     "type": "Identifier",
                     "name": "x2"
                    },
                    {
                     "type": "Identifier",
                     "name": "P"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "P"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "B"
                },
                {
                 "type": "Identifier",
                 "name": "P"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
               },
               "name": "y2",
               "identifier": {
                "type": "Identifier",
                "name": "y2"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "sqrt"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "yy"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "Identifier",
                "name": "odd"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "%",
                 "left": {
                  "type": "Identifier",
                  "name": "y2"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "UnaryOperation",
                "operator": "!",
                "subExpression": {
                 "type": "Identifier",
                 "name": "odd"
                },
                "isPrefix": true
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "%",
                 "left": {
                  "type": "Identifier",
                  "name": "y2"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "y2"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "P"
                },
                "right": {
                 "type": "Identifier",
                 "name": "y2"
                }
               }
              }
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mulmod"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "y2"
                  },
                  {
                   "type": "Identifier",
                   "name": "y2"
                  },
                  {
                   "type": "Identifier",
                   "name": "P"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "Identifier",
                 "name": "yy"
                }
               },
               {
                "type": "StringLiteral",
                "value": "invalid parent collection ID",
                "parts": [
                 "invalid parent collection ID"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "ret",
               "identifier": {
                "type": "Identifier",
                "name": "ret"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "6",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "staticcall"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encode"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x1"
                 },
                 {
                  "type": "Identifier",
                  "name": "y1"
                 },
                 {
                  "type": "Identifier",
                  "name": "x2"
                 },
                 {
                  "type": "Identifier",
                  "name": "y2"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "success"
               },
               {
                "type": "StringLiteral",
                "value": "ecadd failed",
                "parts": [
                 "ecadd failed"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "x1"
                },
                {
                 "type": "Identifier",
                 "name": "y1"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "decode"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "ret"
                },
                {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  },
                  {
                   "type": "ElementaryTypeName",
                   "name": "uint",
                   "stateMutability": null
                  }
                 ],
                 "isArray": false
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "BinaryOperation",
            "operator": "%",
            "left": {
             "type": "Identifier",
             "name": "y1"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": "^=",
            "left": {
             "type": "Identifier",
             "name": "x1"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "<<",
             "left": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             },
             "right": {
              "type": "NumberLiteral",
              "number": "254",
              "subdenomination": null
             }
            }
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "bytes32",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "x1"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "collateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "collateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "collectionId",
         "identifier": {
          "type": "Identifier",
          "name": "collectionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "collateralToken"
                },
                {
                 "type": "Identifier",
                 "name": "collectionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 }
]